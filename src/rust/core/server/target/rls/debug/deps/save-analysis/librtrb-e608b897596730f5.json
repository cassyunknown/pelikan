{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4","program":"/home/users/u6632448/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rtrb","--edition=2018","/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=e608b897596730f5","-C","extra-filename=-e608b897596730f5","--out-dir","/home/users/u6632448/pelikan/src/rust/core/server/target/rls/debug/deps","-L","dependency=/home/users/u6632448/pelikan/src/rust/core/server/target/rls/debug/deps","--extern","cache_padded=/home/users/u6632448/pelikan/src/rust/core/server/target/rls/debug/deps/libcache_padded-573f77a2a639c956.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/users/u6632448/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/users/u6632448/pelikan/src/rust/core/server/target/rls/debug/deps/librtrb-e608b897596730f5.rmeta"},"prelude":{"crate_id":{"name":"rtrb","disambiguator":[4439772974825566536,0]},"crate_root":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src","external_crates":[{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[292688086858374235,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6438385474535706924,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13729837066422225192,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5402880783377335769,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6315666440082044202,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8715266272784128359,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2088041259338434830,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3489163311945967218,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[751421253572859800,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13041685254533870257,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[502015445408459368,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6198952210139392550,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14184030540380960994,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[18399346483724303225,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15511893313068785759,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13348528473392455417,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[12356376325519007124,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[7246437135573011264,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12319769989328939461,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","num":20,"id":{"name":"cache_padded","disambiguator":[8981509335646924949,0]}}],"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":0,"byte_end":54030,"line_start":1,"line_end":1601,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":0,"byte_end":54030,"line_start":1,"line_end":1601,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":160},{"krate":0,"index":167},{"krate":0,"index":36},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":178},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":197},{"krate":0,"index":202},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":92},{"krate":0,"index":206},{"krate":0,"index":215},{"krate":0,"index":98},{"krate":0,"index":107},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":219},{"krate":0,"index":228},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":118},{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":138},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":275},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":" A realtime-safe single-producer single-consumer (SPSC) ring buffer.","sig":null,"attributes":[{"value":"/ A realtime-safe single-producer single-consumer (SPSC) ring buffer.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":72,"byte_end":75,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A [`RingBuffer`] consists of two parts:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":76,"byte_end":119,"line_start":3,"line_end":3,"column_start":1,"column_end":44}},{"value":"/ a [`Producer`] for writing into the ring buffer and","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":120,"byte_end":175,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/ a [`Consumer`] for reading from the ring buffer.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":176,"byte_end":228,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":229,"byte_end":232,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A fixed-capacity buffer is allocated on construction.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":233,"byte_end":290,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ After that, no more memory is allocated (unless the type `T` does that internally).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":291,"byte_end":378,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/ Reading from and writing into the ring buffer is *lock-free* and *wait-free*.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":379,"byte_end":460,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ All reading and writing functions return immediately.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":461,"byte_end":518,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/ Attempts to write to a full buffer return an error;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":519,"byte_end":574,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/ values inside the buffer are *not* overwritten.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":575,"byte_end":626,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ Attempts to read from an empty buffer return an error as well.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":627,"byte_end":693,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/ Only a single thread can write into the ring buffer and a single thread","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":694,"byte_end":769,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ (typically a different one) can read from the ring buffer.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":770,"byte_end":832,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ If the queue is empty, there is no way for the reading thread to wait","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":833,"byte_end":906,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ for new data, other than trying repeatedly until reading succeeds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":907,"byte_end":977,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ Similarly, if the queue is full, there is no way for the writing thread","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":978,"byte_end":1053,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ to wait for newly available space to write to, other than trying repeatedly.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1054,"byte_end":1134,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1135,"byte_end":1138,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1139,"byte_end":1153,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1154,"byte_end":1157,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Moving single elements into and out of a queue with","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1158,"byte_end":1213,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ [`Producer::push()`] and [`Consumer::pop()`], respectively:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1214,"byte_end":1277,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1278,"byte_end":1281,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1282,"byte_end":1289,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use rtrb::{RingBuffer, PushError, PopError};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1290,"byte_end":1338,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1339,"byte_end":1342,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let (mut producer, mut consumer) = RingBuffer::new(2).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1343,"byte_end":1409,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1410,"byte_end":1413,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(producer.push(10), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1414,"byte_end":1456,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(producer.push(20), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1457,"byte_end":1499,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(producer.push(30), Err(PushError::Full(30)));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1500,"byte_end":1560,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1561,"byte_end":1564,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ std::thread::spawn(move || {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1565,"byte_end":1597,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(consumer.pop(), Ok(10));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1598,"byte_end":1641,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(consumer.pop(), Ok(20));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1642,"byte_end":1685,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(consumer.pop(), Err(PopError::Empty));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1686,"byte_end":1743,"line_start":38,"line_end":38,"column_start":1,"column_end":58}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1744,"byte_end":1767,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1768,"byte_end":1775,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1776,"byte_end":1779,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Producing and consuming multiple items at once with","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1780,"byte_end":1835,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/ [`Producer::write_chunk()`] and [`Consumer::read_chunk()`], respectively.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1836,"byte_end":1913,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ This example uses a single thread for simplicity, but in a real application,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1914,"byte_end":1994,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ `producer` and `consumer` would of course live on different threads:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":1995,"byte_end":2067,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2068,"byte_end":2071,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2072,"byte_end":2079,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2080,"byte_end":2105,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2106,"byte_end":2109,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let (mut producer, mut consumer) = RingBuffer::new(5).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2110,"byte_end":2176,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2177,"byte_end":2180,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ if let Ok(mut chunk) = producer.write_chunk(4) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2181,"byte_end":2233,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/     // NB: Don't use `chunk` as the first iterator in zip() if the other one might be shorter!","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2234,"byte_end":2332,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/     for (src, dst) in vec![10, 11, 12].into_iter().zip(&mut chunk) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2333,"byte_end":2405,"line_start":54,"line_end":54,"column_start":1,"column_end":73}},{"value":"/         *dst = src;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2406,"byte_end":2429,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2430,"byte_end":2439,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/     // Don't forget to make the written slots available for reading!","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2440,"byte_end":2512,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/     chunk.commit_iterated();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2513,"byte_end":2545,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/     // Note that we requested 4 slots but we've only written 3!","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2546,"byte_end":2613,"line_start":59,"line_end":59,"column_start":1,"column_end":68}},{"value":"/ } else {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2614,"byte_end":2626,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/     unreachable!();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2627,"byte_end":2650,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2651,"byte_end":2656,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2657,"byte_end":2660,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(producer.slots(), 2);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2661,"byte_end":2697,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(consumer.slots(), 3);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2698,"byte_end":2734,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2735,"byte_end":2738,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ if let Ok(mut chunk) = consumer.read_chunk(2) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2739,"byte_end":2790,"line_start":67,"line_end":67,"column_start":1,"column_end":52}},{"value":"/     // NB: Even though we are just reading, `chunk` needs to be mutable for iteration!","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2791,"byte_end":2881,"line_start":68,"line_end":68,"column_start":1,"column_end":91}},{"value":"/     assert_eq!((&mut chunk).collect::<Vec<_>>(), [&10, &11]);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2882,"byte_end":2947,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"/     chunk.commit_iterated(); // Mark the slots as \"consumed\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":2948,"byte_end":3012,"line_start":70,"line_end":70,"column_start":1,"column_end":65}},{"value":"/     // chunk.commit_all() would also work here.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3013,"byte_end":3064,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/ } else {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3065,"byte_end":3077,"line_start":72,"line_end":72,"column_start":1,"column_end":13}},{"value":"/     unreachable!();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3078,"byte_end":3101,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3102,"byte_end":3107,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3108,"byte_end":3111,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ // One element is still in the queue:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3112,"byte_end":3153,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(consumer.peek(), Ok(&12));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3154,"byte_end":3195,"line_start":77,"line_end":77,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3196,"byte_end":3199,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let data = vec![20, 21, 22, 23];","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3200,"byte_end":3236,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/ if let Ok(mut chunk) = producer.write_chunk(4) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3237,"byte_end":3289,"line_start":80,"line_end":80,"column_start":1,"column_end":53}},{"value":"/     let (first, second) = chunk.as_mut_slices();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3290,"byte_end":3342,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"/     let mid = first.len();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3343,"byte_end":3373,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/     first.copy_from_slice(&data[..mid]);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3374,"byte_end":3418,"line_start":83,"line_end":83,"column_start":1,"column_end":45}},{"value":"/     second.copy_from_slice(&data[mid..]);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3419,"byte_end":3464,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/     chunk.commit_all();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3465,"byte_end":3492,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/ } else {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3493,"byte_end":3505,"line_start":86,"line_end":86,"column_start":1,"column_end":13}},{"value":"/     unreachable!();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3506,"byte_end":3529,"line_start":87,"line_end":87,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3530,"byte_end":3535,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3536,"byte_end":3539,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ assert!(producer.is_full());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3540,"byte_end":3572,"line_start":90,"line_end":90,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(consumer.slots(), 5);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3573,"byte_end":3609,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3610,"byte_end":3613,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ let mut v = Vec::<i32>::with_capacity(5);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3614,"byte_end":3659,"line_start":93,"line_end":93,"column_start":1,"column_end":46}},{"value":"/ if let Ok(chunk) = consumer.read_chunk(5) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3660,"byte_end":3707,"line_start":94,"line_end":94,"column_start":1,"column_end":48}},{"value":"/     let (first, second) = chunk.as_slices();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3708,"byte_end":3756,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/     v.extend(first);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3757,"byte_end":3781,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/     v.extend(second);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3782,"byte_end":3807,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/     chunk.commit_all();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3808,"byte_end":3835,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/ } else {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3836,"byte_end":3848,"line_start":99,"line_end":99,"column_start":1,"column_end":13}},{"value":"/     unreachable!();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3849,"byte_end":3872,"line_start":100,"line_end":100,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3873,"byte_end":3878,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(v, [12, 20, 21, 22, 23]);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3879,"byte_end":3919,"line_start":102,"line_end":102,"column_start":1,"column_end":41}},{"value":"/ assert!(consumer.is_empty());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3920,"byte_end":3953,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3954,"byte_end":3961,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3962,"byte_end":3965,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ## Common Access Patterns","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3966,"byte_end":3995,"line_start":106,"line_end":106,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":3996,"byte_end":3999,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The following examples show the [`Producer`] side;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4000,"byte_end":4054,"line_start":108,"line_end":108,"column_start":1,"column_end":55}},{"value":"/ similar patterns can of course be used with [`Consumer::read_chunk()`] as well.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4055,"byte_end":4138,"line_start":109,"line_end":109,"column_start":1,"column_end":84}},{"value":"/ Furthermore, the examples use [`Producer::write_chunk()`],","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4139,"byte_end":4201,"line_start":110,"line_end":110,"column_start":1,"column_end":63}},{"value":"/ which requires the trait bounds `T: Copy + Default`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4202,"byte_end":4258,"line_start":111,"line_end":111,"column_start":1,"column_end":57}},{"value":"/ If that's too restrictive or if you want to squeeze out the last bit of performance,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4259,"byte_end":4347,"line_start":112,"line_end":112,"column_start":1,"column_end":89}},{"value":"/ you can use [`Producer::write_chunk_uninit()`] instead,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4348,"byte_end":4407,"line_start":113,"line_end":113,"column_start":1,"column_end":60}},{"value":"/ but this will force you to write some `unsafe` code.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4408,"byte_end":4464,"line_start":114,"line_end":114,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4465,"byte_end":4468,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ Copy a whole slice of items into the ring buffer, but only if space permits","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4469,"byte_end":4548,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ (if not, the input slice is returned as an error):","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4549,"byte_end":4603,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4604,"byte_end":4607,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4608,"byte_end":4615,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ use rtrb::Producer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4616,"byte_end":4639,"line_start":120,"line_end":120,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4640,"byte_end":4643,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ fn push_entire_slice<'a, T>(queue: &mut Producer<T>, slice: &'a [T]) -> Result<(), &'a [T]>","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4644,"byte_end":4739,"line_start":122,"line_end":122,"column_start":1,"column_end":96}},{"value":"/ where","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4740,"byte_end":4749,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/     T: Copy + Default,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4750,"byte_end":4776,"line_start":124,"line_end":124,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4777,"byte_end":4782,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"/     if let Ok(mut chunk) = queue.write_chunk(slice.len()) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4783,"byte_end":4846,"line_start":126,"line_end":126,"column_start":1,"column_end":64}},{"value":"/         let (first, second) = chunk.as_mut_slices();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4847,"byte_end":4903,"line_start":127,"line_end":127,"column_start":1,"column_end":57}},{"value":"/         let mid = first.len();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4904,"byte_end":4938,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/         first.copy_from_slice(&slice[..mid]);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4939,"byte_end":4988,"line_start":129,"line_end":129,"column_start":1,"column_end":50}},{"value":"/         second.copy_from_slice(&slice[mid..]);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":4989,"byte_end":5039,"line_start":130,"line_end":130,"column_start":1,"column_end":51}},{"value":"/         chunk.commit_all();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5040,"byte_end":5071,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/         Ok(())","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5072,"byte_end":5090,"line_start":132,"line_end":132,"column_start":1,"column_end":19}},{"value":"/     } else {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5091,"byte_end":5107,"line_start":133,"line_end":133,"column_start":1,"column_end":17}},{"value":"/         Err(slice)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5108,"byte_end":5130,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5131,"byte_end":5140,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5141,"byte_end":5146,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5147,"byte_end":5154,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5155,"byte_end":5158,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Copy as many items as possible from a given slice, returning the remainder of the slice","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5159,"byte_end":5250,"line_start":139,"line_end":139,"column_start":1,"column_end":92}},{"value":"/ (which will be empty if there was space for all items):","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5251,"byte_end":5310,"line_start":140,"line_end":140,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5311,"byte_end":5314,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5315,"byte_end":5322,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/ use rtrb::{Producer, ChunkError::TooFewSlots};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5323,"byte_end":5373,"line_start":143,"line_end":143,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5374,"byte_end":5377,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ fn push_partial_slice<'a, T>(queue: &mut Producer<T>, slice: &'a [T]) -> &'a [T]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5378,"byte_end":5462,"line_start":145,"line_end":145,"column_start":1,"column_end":85}},{"value":"/ where","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5463,"byte_end":5472,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/     T: Copy + Default,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5473,"byte_end":5499,"line_start":147,"line_end":147,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5500,"byte_end":5505,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/     let mut chunk = match queue.write_chunk(slice.len()) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5506,"byte_end":5568,"line_start":149,"line_end":149,"column_start":1,"column_end":63}},{"value":"/         Ok(chunk) => chunk,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5569,"byte_end":5600,"line_start":150,"line_end":150,"column_start":1,"column_end":32}},{"value":"/         // This is an optional optimization if the queue tends to be full:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5601,"byte_end":5679,"line_start":151,"line_end":151,"column_start":1,"column_end":79}},{"value":"/         Err(TooFewSlots(0)) => return slice,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5680,"byte_end":5728,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/         // Remaining slots are returned, this will always succeed:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5729,"byte_end":5799,"line_start":153,"line_end":153,"column_start":1,"column_end":71}},{"value":"/         Err(TooFewSlots(n)) => queue.write_chunk(n).unwrap(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5800,"byte_end":5865,"line_start":154,"line_end":154,"column_start":1,"column_end":66}},{"value":"/     };","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5866,"byte_end":5876,"line_start":155,"line_end":155,"column_start":1,"column_end":11}},{"value":"/     let end = chunk.len();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5877,"byte_end":5907,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/     let (first, second) = chunk.as_mut_slices();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5908,"byte_end":5960,"line_start":157,"line_end":157,"column_start":1,"column_end":53}},{"value":"/     let mid = first.len();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5961,"byte_end":5991,"line_start":158,"line_end":158,"column_start":1,"column_end":31}},{"value":"/     first.copy_from_slice(&slice[..mid]);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":5992,"byte_end":6037,"line_start":159,"line_end":159,"column_start":1,"column_end":46}},{"value":"/     second.copy_from_slice(&slice[mid..end]);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6038,"byte_end":6087,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/     chunk.commit_all();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6088,"byte_end":6115,"line_start":161,"line_end":161,"column_start":1,"column_end":28}},{"value":"/     &slice[end..]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6116,"byte_end":6137,"line_start":162,"line_end":162,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6138,"byte_end":6143,"line_start":163,"line_end":163,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6144,"byte_end":6151,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6152,"byte_end":6155,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Write as many slots as possible, given an iterator","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6156,"byte_end":6210,"line_start":166,"line_end":166,"column_start":1,"column_end":55}},{"value":"/ (and return the number of written slots):","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6211,"byte_end":6256,"line_start":167,"line_end":167,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6257,"byte_end":6260,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6261,"byte_end":6268,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/ use rtrb::{Producer, ChunkError::TooFewSlots};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6269,"byte_end":6319,"line_start":170,"line_end":170,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6320,"byte_end":6323,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ fn push_from_iter<T, I>(queue: &mut Producer<T>, iter: &mut I) -> usize","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6324,"byte_end":6399,"line_start":172,"line_end":172,"column_start":1,"column_end":76}},{"value":"/ where","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6400,"byte_end":6409,"line_start":173,"line_end":173,"column_start":1,"column_end":10}},{"value":"/     T: Copy + Default,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6410,"byte_end":6436,"line_start":174,"line_end":174,"column_start":1,"column_end":27}},{"value":"/     I: Iterator<Item = T>,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6437,"byte_end":6467,"line_start":175,"line_end":175,"column_start":1,"column_end":31}},{"value":"/ {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6468,"byte_end":6473,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/     let n = match iter.size_hint() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6474,"byte_end":6514,"line_start":177,"line_end":177,"column_start":1,"column_end":41}},{"value":"/         (_, None) => queue.slots(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6515,"byte_end":6554,"line_start":178,"line_end":178,"column_start":1,"column_end":40}},{"value":"/         (_, Some(n)) => n,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6555,"byte_end":6585,"line_start":179,"line_end":179,"column_start":1,"column_end":31}},{"value":"/     };","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6586,"byte_end":6596,"line_start":180,"line_end":180,"column_start":1,"column_end":11}},{"value":"/     let mut chunk = match queue.write_chunk(n) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6597,"byte_end":6649,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/         Ok(chunk) => chunk,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6650,"byte_end":6681,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/         // As above, this is an optional optimization:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6682,"byte_end":6740,"line_start":183,"line_end":183,"column_start":1,"column_end":59}},{"value":"/         Err(TooFewSlots(0)) => return 0,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6741,"byte_end":6785,"line_start":184,"line_end":184,"column_start":1,"column_end":45}},{"value":"/         // As above, this will always succeed:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6786,"byte_end":6836,"line_start":185,"line_end":185,"column_start":1,"column_end":51}},{"value":"/         Err(TooFewSlots(n)) => queue.write_chunk(n).unwrap(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6837,"byte_end":6902,"line_start":186,"line_end":186,"column_start":1,"column_end":66}},{"value":"/     };","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6903,"byte_end":6913,"line_start":187,"line_end":187,"column_start":1,"column_end":11}},{"value":"/     for (source, target) in iter.zip(&mut chunk) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6914,"byte_end":6968,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/         *target = source;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6969,"byte_end":6998,"line_start":189,"line_end":189,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":6999,"byte_end":7008,"line_start":190,"line_end":190,"column_start":1,"column_end":10}},{"value":"/     chunk.commit_iterated()","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7009,"byte_end":7040,"line_start":191,"line_end":191,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7041,"byte_end":7046,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7047,"byte_end":7054,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7099,"byte_end":7125,"line_start":196,"line_end":196,"column_start":1,"column_end":27}},{"value":"deny(missing_docs)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7126,"byte_end":7148,"line_start":197,"line_end":197,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7694,"byte_end":7704,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"RingBuffer","qualname":"::RingBuffer","value":"RingBuffer {  }","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"decl_id":null,"docs":" A bounded single-producer single-consumer queue.","sig":null,"attributes":[{"value":"/ A bounded single-producer single-consumer queue.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7408,"byte_end":7460,"line_start":211,"line_end":211,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7461,"byte_end":7464,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ Elements can be written with a [`Producer`] and read with a [`Consumer`],","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7465,"byte_end":7542,"line_start":213,"line_end":213,"column_start":1,"column_end":78}},{"value":"/ both of which can be obtained with [`RingBuffer::split()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7543,"byte_end":7606,"line_start":214,"line_end":214,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7607,"byte_end":7610,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ *See also the [crate-level documentation](crate).*","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":7611,"byte_end":7665,"line_start":216,"line_end":216,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9053,"byte_end":9056,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"new","qualname":"<RingBuffer<T>>::new","value":"pub fn new(usize) -> RingBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RingBuffer` with the given `capacity`.","sig":null,"attributes":[{"value":"/ Creates a `RingBuffer` with the given `capacity`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8218,"byte_end":8271,"line_start":240,"line_end":240,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8276,"byte_end":8279,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The returned `RingBuffer` is typically immediately split into","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8284,"byte_end":8349,"line_start":242,"line_end":242,"column_start":5,"column_end":70}},{"value":"/ the [`Producer`] and the [`Consumer`] side by [`split()`](RingBuffer::split).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8354,"byte_end":8435,"line_start":243,"line_end":243,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8440,"byte_end":8443,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ If you want guaranteed wrap-around behavior,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8448,"byte_end":8496,"line_start":245,"line_end":245,"column_start":5,"column_end":53}},{"value":"/ use [`with_chunks()`](RingBuffer::with_chunks).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8501,"byte_end":8552,"line_start":246,"line_end":246,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8557,"byte_end":8560,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8565,"byte_end":8579,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8584,"byte_end":8587,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8592,"byte_end":8599,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8604,"byte_end":8629,"line_start":251,"line_end":251,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8634,"byte_end":8637,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let rb = RingBuffer::<f32>::new(100);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8642,"byte_end":8683,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8688,"byte_end":8695,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8700,"byte_end":8703,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Specifying an explicit type with the [turbofish](https://turbo.fish/)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8708,"byte_end":8781,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ is is only necessary if it cannot be deduced by the compiler.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8786,"byte_end":8851,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8856,"byte_end":8859,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8864,"byte_end":8871,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8876,"byte_end":8901,"line_start":260,"line_end":260,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8906,"byte_end":8909,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let (mut producer, consumer) = RingBuffer::new(100).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8914,"byte_end":8978,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(producer.push(0.0f32), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8983,"byte_end":9029,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9034,"byte_end":9041,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10328,"byte_end":10339,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"with_chunks","qualname":"<RingBuffer<T>>::with_chunks","value":"pub fn with_chunks(usize, usize) -> RingBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RingBuffer` with a capacity of `chunks * chunk_size`.","sig":null,"attributes":[{"value":"/ Creates a `RingBuffer` with a capacity of `chunks * chunk_size`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9389,"byte_end":9457,"line_start":275,"line_end":275,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9462,"byte_end":9465,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ On top of multiplying the two numbers for us,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9470,"byte_end":9519,"line_start":277,"line_end":277,"column_start":5,"column_end":54}},{"value":"/ this also guarantees that the ring buffer wrap-around happens","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9524,"byte_end":9589,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/ at an integer multiple of `chunk_size`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9594,"byte_end":9637,"line_start":279,"line_end":279,"column_start":5,"column_end":48}},{"value":"/ This means that if [`Consumer::read_chunk()`] is used *exclusively* with","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9642,"byte_end":9718,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ `chunk_size` (and [`Consumer::pop()`] is *not* used in-between),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9723,"byte_end":9791,"line_start":281,"line_end":281,"column_start":5,"column_end":73}},{"value":"/ the first slice returned from [`ReadChunk::as_slices()`]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9796,"byte_end":9856,"line_start":282,"line_end":282,"column_start":5,"column_end":65}},{"value":"/ will always contain the entire chunk and the second slice will always be empty.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9861,"byte_end":9944,"line_start":283,"line_end":283,"column_start":5,"column_end":88}},{"value":"/ Same for [`Producer::write_chunk()`]/[`WriteChunk::as_mut_slices()`] and","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":9949,"byte_end":10025,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ [`Producer::write_chunk_uninit()`]/[`WriteChunkUninit::as_mut_slices()`]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10030,"byte_end":10106,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ (as long as [`Producer::push()`] is *not* used in-between).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10111,"byte_end":10174,"line_start":286,"line_end":286,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10179,"byte_end":10182,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ If above conditions have been violated, the wrap-around guarantee can be restored","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10187,"byte_end":10272,"line_start":288,"line_end":288,"column_start":5,"column_end":90}},{"value":"/ wit [`reset()`](RingBuffer::reset).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10277,"byte_end":10316,"line_start":289,"line_end":289,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10860,"byte_end":10865,"line_start":305,"line_end":305,"column_start":12,"column_end":17},"name":"split","qualname":"<RingBuffer<T>>::split","value":"pub fn split(Self) -> (Producer<T>, Consumer<T>)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `RingBuffer` into [`Producer`] and [`Consumer`].","sig":null,"attributes":[{"value":"/ Splits the `RingBuffer` into [`Producer`] and [`Consumer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10616,"byte_end":10679,"line_start":296,"line_end":296,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10684,"byte_end":10687,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10692,"byte_end":10706,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10711,"byte_end":10714,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10719,"byte_end":10726,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10731,"byte_end":10756,"line_start":301,"line_end":301,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10761,"byte_end":10764,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let (producer, consumer) = RingBuffer::<f32>::new(100).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10769,"byte_end":10836,"line_start":303,"line_end":303,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":10841,"byte_end":10848,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12750,"byte_end":12755,"line_start":362,"line_end":362,"column_start":12,"column_end":17},"name":"reset","qualname":"<RingBuffer<T>>::reset","value":"pub fn reset(&mut Producer<T>, &mut Consumer<T>)","parent":null,"children":[],"decl_id":null,"docs":" Resets a ring buffer.","sig":null,"attributes":[{"value":"/ Resets a ring buffer.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11227,"byte_end":11252,"line_start":320,"line_end":320,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11257,"byte_end":11260,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This drops all elements that are currently in the queue","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11265,"byte_end":11324,"line_start":322,"line_end":322,"column_start":5,"column_end":64}},{"value":"/ (running their destructors if `T` implements [`Drop`]) and","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11329,"byte_end":11391,"line_start":323,"line_end":323,"column_start":5,"column_end":67}},{"value":"/ resets the internal read and write positions to the beginning of the buffer.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11396,"byte_end":11476,"line_start":324,"line_end":324,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11481,"byte_end":11484,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This also resets the guarantees given by [`with_chunks()`](RingBuffer::with_chunks).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11489,"byte_end":11577,"line_start":326,"line_end":326,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11582,"byte_end":11585,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Exclusive access to both [`Producer`] and [`Consumer`] is needed for this operation.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11590,"byte_end":11678,"line_start":328,"line_end":328,"column_start":5,"column_end":93}},{"value":"/ They can be moved between threads, for example, with a `RingBuffer<Producer<T>>`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11683,"byte_end":11767,"line_start":329,"line_end":329,"column_start":5,"column_end":89}},{"value":"/ and a `RingBuffer<Consumer<T>>`, respectively.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11772,"byte_end":11822,"line_start":330,"line_end":330,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11827,"byte_end":11830,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11835,"byte_end":11847,"line_start":332,"line_end":332,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11852,"byte_end":11855,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Panics if the `producer` and `consumer` do not originate from the same `RingBuffer`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11860,"byte_end":11948,"line_start":334,"line_end":334,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11953,"byte_end":11956,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11961,"byte_end":11975,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11980,"byte_end":11983,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":11988,"byte_end":11995,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12000,"byte_end":12025,"line_start":339,"line_end":339,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12030,"byte_end":12033,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let (mut p, mut c) = RingBuffer::new(2).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12038,"byte_end":12090,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12095,"byte_end":12098,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ p = std::thread::spawn(move || {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12103,"byte_end":12139,"line_start":343,"line_end":343,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(p.push(10), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12144,"byte_end":12183,"line_start":344,"line_end":344,"column_start":5,"column_end":44}},{"value":"/     p","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12188,"byte_end":12197,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12202,"byte_end":12225,"line_start":346,"line_end":346,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12230,"byte_end":12233,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ RingBuffer::reset(&mut p, &mut c);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12238,"byte_end":12276,"line_start":348,"line_end":348,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12281,"byte_end":12284,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ // The full capacity is now available for writing:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12289,"byte_end":12343,"line_start":350,"line_end":350,"column_start":5,"column_end":59}},{"value":"/ if let Ok(mut chunk) = p.write_chunk(p.buffer().capacity()) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12348,"byte_end":12413,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/     let (first, second) = chunk.as_mut_slices();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12418,"byte_end":12470,"line_start":352,"line_end":352,"column_start":5,"column_end":57}},{"value":"/     // The first slice is now guaranteed to span the whole buffer:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12475,"byte_end":12545,"line_start":353,"line_end":353,"column_start":5,"column_end":75}},{"value":"/     first[0] = 20;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12550,"byte_end":12572,"line_start":354,"line_end":354,"column_start":5,"column_end":27}},{"value":"/     first[1] = 30;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12577,"byte_end":12599,"line_start":355,"line_end":355,"column_start":5,"column_end":27}},{"value":"/     assert!(second.is_empty());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12604,"byte_end":12639,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/     chunk.commit_all();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12644,"byte_end":12671,"line_start":357,"line_end":357,"column_start":5,"column_end":32}},{"value":"/ } else {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12676,"byte_end":12688,"line_start":358,"line_end":358,"column_start":5,"column_end":17}},{"value":"/     unreachable!();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12693,"byte_end":12716,"line_start":359,"line_end":359,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12721,"byte_end":12726,"line_start":360,"line_end":360,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":12731,"byte_end":12738,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13554,"byte_end":13562,"line_start":388,"line_end":388,"column_start":12,"column_end":20},"name":"capacity","qualname":"<RingBuffer<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the queue.","sig":null,"attributes":[{"value":"/ Returns the capacity of the queue.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13321,"byte_end":13359,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13364,"byte_end":13367,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13372,"byte_end":13386,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13391,"byte_end":13394,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13399,"byte_end":13406,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13411,"byte_end":13436,"line_start":383,"line_end":383,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13441,"byte_end":13444,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let rb = RingBuffer::<f32>::new(100);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13449,"byte_end":13490,"line_start":385,"line_end":385,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(rb.capacity(), 100);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13495,"byte_end":13530,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":13535,"byte_end":13542,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17439,"byte_end":17447,"line_start":514,"line_end":514,"column_start":12,"column_end":20},"name":"Producer","qualname":"::Producer","value":"Producer {  }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" The producer side of a [`RingBuffer`].","sig":null,"attributes":[{"value":"/ The producer side of a [`RingBuffer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16617,"byte_end":16659,"line_start":491,"line_end":491,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16660,"byte_end":16663,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ Can be moved between threads,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16664,"byte_end":16697,"line_start":493,"line_end":493,"column_start":1,"column_end":34}},{"value":"/ but references from different threads are not allowed","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16698,"byte_end":16755,"line_start":494,"line_end":494,"column_start":1,"column_end":58}},{"value":"/ (i.e. it is [`Send`] but not [`Sync`]).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16756,"byte_end":16799,"line_start":495,"line_end":495,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16800,"byte_end":16803,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ Can only be created with [`RingBuffer::split()`]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16804,"byte_end":16856,"line_start":497,"line_end":497,"column_start":1,"column_end":53}},{"value":"/ (together with its counterpart, the [`Consumer`]).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16857,"byte_end":16911,"line_start":498,"line_end":498,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16912,"byte_end":16915,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ When the `Producer` is dropped, [`Consumer::is_abandoned()`] will return `true`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16916,"byte_end":17000,"line_start":500,"line_end":500,"column_start":1,"column_end":85}},{"value":"/ This can be used as a crude way to communicate to the receiving thread","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17001,"byte_end":17075,"line_start":501,"line_end":501,"column_start":1,"column_end":75}},{"value":"/ that no more data will be produced.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17076,"byte_end":17115,"line_start":502,"line_end":502,"column_start":1,"column_end":40}},{"value":"/ When the `Producer` is dropped after the [`Consumer`] has already been dropped,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17116,"byte_end":17199,"line_start":503,"line_end":503,"column_start":1,"column_end":84}},{"value":"/ [`RingBuffer::drop()`] will be called, freeing the allocated memory.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17200,"byte_end":17272,"line_start":504,"line_end":504,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17273,"byte_end":17276,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17277,"byte_end":17291,"line_start":506,"line_end":506,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17292,"byte_end":17295,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17296,"byte_end":17303,"line_start":508,"line_end":508,"column_start":1,"column_end":8}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17304,"byte_end":17329,"line_start":509,"line_end":509,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17330,"byte_end":17333,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ let (producer, consumer) = RingBuffer::<f32>::new(1000).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17334,"byte_end":17402,"line_start":511,"line_end":511,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17403,"byte_end":17410,"line_start":512,"line_end":512,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18445,"byte_end":18449,"line_start":548,"line_end":548,"column_start":12,"column_end":16},"name":"push","qualname":"<Producer<T>>::push","value":"pub fn push(&mut Self, T) -> Result<(), PushError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to push an element into the queue.","sig":null,"attributes":[{"value":"/ Attempts to push an element into the queue.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17914,"byte_end":17961,"line_start":532,"line_end":532,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17966,"byte_end":17969,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ The element is *moved* into the ring buffer and its slot","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17974,"byte_end":18034,"line_start":534,"line_end":534,"column_start":5,"column_end":65}},{"value":"/ is made available to be read by the [`Consumer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18039,"byte_end":18092,"line_start":535,"line_end":535,"column_start":5,"column_end":58}},{"value":"/ If the queue is full, the element is returned back as an error.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18097,"byte_end":18164,"line_start":536,"line_end":536,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18169,"byte_end":18172,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18177,"byte_end":18191,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18196,"byte_end":18199,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18204,"byte_end":18211,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ use rtrb::{RingBuffer, PushError};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18216,"byte_end":18254,"line_start":541,"line_end":541,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18259,"byte_end":18262,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let (mut p, c) = RingBuffer::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18267,"byte_end":18315,"line_start":543,"line_end":543,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18320,"byte_end":18323,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p.push(10), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18328,"byte_end":18363,"line_start":545,"line_end":545,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(p.push(20), Err(PushError::Full(20)));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18368,"byte_end":18421,"line_start":546,"line_end":546,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18426,"byte_end":18433,"line_start":547,"line_end":547,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19927,"byte_end":19938,"line_start":585,"line_end":585,"column_start":12,"column_end":23},"name":"write_chunk","qualname":"<Producer<T>>::write_chunk","value":"pub fn write_chunk(&mut Self, usize) -> Result<WriteChunk<, T>, ChunkError>\nwhere T: Copy + Default","parent":null,"children":[],"decl_id":null,"docs":" Returns `n` slots (initially containing their [`Default`] value) for writing.","sig":null,"attributes":[{"value":"/ Returns `n` slots (initially containing their [`Default`] value) for writing.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18884,"byte_end":18965,"line_start":562,"line_end":562,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18970,"byte_end":18973,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ If not enough slots are available, an error","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":18978,"byte_end":19025,"line_start":564,"line_end":564,"column_start":5,"column_end":52}},{"value":"/ (containing the number of available slots) is returned.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19030,"byte_end":19089,"line_start":565,"line_end":565,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19094,"byte_end":19097,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ The elements can be accessed with [`WriteChunk::as_mut_slices()`] or","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19102,"byte_end":19174,"line_start":567,"line_end":567,"column_start":5,"column_end":77}},{"value":"/ by iterating over (a `&mut` to) the [`WriteChunk`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19179,"byte_end":19234,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19239,"byte_end":19242,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ The provided slots are *not* automatically made available","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19247,"byte_end":19308,"line_start":570,"line_end":570,"column_start":5,"column_end":66}},{"value":"/ to be read by the [`Consumer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19313,"byte_end":19348,"line_start":571,"line_end":571,"column_start":5,"column_end":40}},{"value":"/ This has to be explicitly done by calling [`WriteChunk::commit()`],","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19353,"byte_end":19424,"line_start":572,"line_end":572,"column_start":5,"column_end":76}},{"value":"/ [`WriteChunk::commit_iterated()`] or [`WriteChunk::commit_all()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19429,"byte_end":19499,"line_start":573,"line_end":573,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19504,"byte_end":19507,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ The type parameter `T` has a trait bound of [`Copy`],","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19512,"byte_end":19569,"line_start":575,"line_end":575,"column_start":5,"column_end":62}},{"value":"/ which makes sure that no destructors are called at any time","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19574,"byte_end":19637,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ (because it implies [`!Drop`](Drop)).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19642,"byte_end":19683,"line_start":577,"line_end":577,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19688,"byte_end":19691,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ For an unsafe alternative that has no restrictions on `T`,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19696,"byte_end":19758,"line_start":579,"line_end":579,"column_start":5,"column_end":67}},{"value":"/ see [`Producer::write_chunk_uninit()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19763,"byte_end":19806,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19811,"byte_end":19814,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19819,"byte_end":19833,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19838,"byte_end":19841,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ See the [crate-level documentation](crate#examples) for examples.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":19846,"byte_end":19915,"line_start":584,"line_end":584,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":21055,"byte_end":21073,"line_start":613,"line_end":613,"column_start":12,"column_end":30},"name":"write_chunk_uninit","qualname":"<Producer<T>>::write_chunk_uninit","value":"pub fn write_chunk_uninit(&mut Self, usize)\n-> Result<WriteChunkUninit<, T>, ChunkError>","parent":null,"children":[],"decl_id":null,"docs":" Returns `n` (uninitialized) slots for writing.","sig":null,"attributes":[{"value":"/ Returns `n` (uninitialized) slots for writing.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20112,"byte_end":20162,"line_start":592,"line_end":592,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20167,"byte_end":20170,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ If not enough slots are available, an error","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20175,"byte_end":20222,"line_start":594,"line_end":594,"column_start":5,"column_end":52}},{"value":"/ (containing the number of available slots) is returned.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20227,"byte_end":20286,"line_start":595,"line_end":595,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20291,"byte_end":20294,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ The elements can be accessed with [`WriteChunkUninit::as_mut_slices()`] or","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20299,"byte_end":20377,"line_start":597,"line_end":597,"column_start":5,"column_end":83}},{"value":"/ by iterating over (a `&mut` to) the [`WriteChunkUninit`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20382,"byte_end":20443,"line_start":598,"line_end":598,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20448,"byte_end":20451,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ The provided slots are *not* automatically made available","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20456,"byte_end":20517,"line_start":600,"line_end":600,"column_start":5,"column_end":66}},{"value":"/ to be read by the [`Consumer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20522,"byte_end":20557,"line_start":601,"line_end":601,"column_start":5,"column_end":40}},{"value":"/ This has to be explicitly done by calling [`WriteChunkUninit::commit()`],","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20562,"byte_end":20639,"line_start":602,"line_end":602,"column_start":5,"column_end":82}},{"value":"/ [`WriteChunkUninit::commit_iterated()`] or","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20644,"byte_end":20690,"line_start":603,"line_end":603,"column_start":5,"column_end":51}},{"value":"/ [`WriteChunkUninit::commit_all()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20695,"byte_end":20734,"line_start":604,"line_end":604,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20739,"byte_end":20742,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20747,"byte_end":20759,"line_start":606,"line_end":606,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20764,"byte_end":20767,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This function itself is safe, but accessing the returned slots might not be,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20772,"byte_end":20852,"line_start":608,"line_end":608,"column_start":5,"column_end":85}},{"value":"/ as well as invoking some methods of [`WriteChunkUninit`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20857,"byte_end":20918,"line_start":609,"line_end":609,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20923,"byte_end":20926,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ For a safe alternative that provides [`Default`]-initialized slots,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":20931,"byte_end":21002,"line_start":611,"line_end":611,"column_start":5,"column_end":76}},{"value":"/ see [`Producer::write_chunk()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":21007,"byte_end":21043,"line_start":612,"line_end":612,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22746,"byte_end":22751,"line_start":658,"line_end":658,"column_start":12,"column_end":17},"name":"slots","qualname":"<Producer<T>>::slots","value":"pub fn slots(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of slots available for writing.","sig":null,"attributes":[{"value":"/ Returns the number of slots available for writing.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22119,"byte_end":22173,"line_start":640,"line_end":640,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22178,"byte_end":22181,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ Since items can be concurrently consumed on another thread, the actual number","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22186,"byte_end":22267,"line_start":642,"line_end":642,"column_start":5,"column_end":86}},{"value":"/ of available slots may increase at any time (up to the [`RingBuffer::capacity()`]).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22272,"byte_end":22359,"line_start":643,"line_end":643,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22364,"byte_end":22367,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ To check for a single available slot,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22372,"byte_end":22413,"line_start":645,"line_end":645,"column_start":5,"column_end":46}},{"value":"/ using [`Producer::is_full()`] is often quicker","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22418,"byte_end":22468,"line_start":646,"line_end":646,"column_start":5,"column_end":55}},{"value":"/ (because it might not have to check an atomic variable).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22473,"byte_end":22533,"line_start":647,"line_end":647,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22538,"byte_end":22541,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22546,"byte_end":22560,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22565,"byte_end":22568,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22573,"byte_end":22580,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22585,"byte_end":22610,"line_start":652,"line_end":652,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22615,"byte_end":22618,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let (p, c) = RingBuffer::<f32>::new(1024).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22623,"byte_end":22677,"line_start":654,"line_end":654,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22682,"byte_end":22685,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p.slots(), 1024);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22690,"byte_end":22722,"line_start":656,"line_end":656,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22727,"byte_end":22734,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23952,"byte_end":23959,"line_start":697,"line_end":697,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Producer<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are currently no slots available for writing.","sig":null,"attributes":[{"value":"/ Returns `true` if there are currently no slots available for writing.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":22946,"byte_end":23019,"line_start":664,"line_end":664,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23024,"byte_end":23027,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23032,"byte_end":23046,"line_start":666,"line_end":666,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23051,"byte_end":23054,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23059,"byte_end":23066,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23071,"byte_end":23096,"line_start":669,"line_end":669,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23101,"byte_end":23104,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ let (p, c) = RingBuffer::<f32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23109,"byte_end":23160,"line_start":671,"line_end":671,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23165,"byte_end":23168,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ assert!(!p.is_full());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23173,"byte_end":23199,"line_start":673,"line_end":673,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23204,"byte_end":23211,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23216,"byte_end":23219,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ Since items can be concurrently consumed on another thread, the ring buffer","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23224,"byte_end":23303,"line_start":676,"line_end":676,"column_start":5,"column_end":84}},{"value":"/ might not be full for long:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23308,"byte_end":23339,"line_start":677,"line_end":677,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23344,"byte_end":23347,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23352,"byte_end":23359,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ # use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23364,"byte_end":23391,"line_start":680,"line_end":680,"column_start":5,"column_end":32}},{"value":"/ # let (p, c) = RingBuffer::<f32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23396,"byte_end":23449,"line_start":681,"line_end":681,"column_start":5,"column_end":58}},{"value":"/ if p.is_full() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23454,"byte_end":23474,"line_start":682,"line_end":682,"column_start":5,"column_end":25}},{"value":"/     // The buffer might be full, but it might as well not be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23479,"byte_end":23543,"line_start":683,"line_end":683,"column_start":5,"column_end":69}},{"value":"/     // if an item was just consumed on another thread.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23548,"byte_end":23606,"line_start":684,"line_end":684,"column_start":5,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23611,"byte_end":23616,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23621,"byte_end":23628,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23633,"byte_end":23636,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ However, if it's not full, another thread cannot change that:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23641,"byte_end":23706,"line_start":688,"line_end":688,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23711,"byte_end":23714,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23719,"byte_end":23726,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23731,"byte_end":23758,"line_start":691,"line_end":691,"column_start":5,"column_end":32}},{"value":"/ # let (p, c) = RingBuffer::<f32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23763,"byte_end":23816,"line_start":692,"line_end":692,"column_start":5,"column_end":58}},{"value":"/ if !p.is_full() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23821,"byte_end":23842,"line_start":693,"line_end":693,"column_start":5,"column_end":26}},{"value":"/     // At least one slot is guaranteed to be available for writing.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23847,"byte_end":23918,"line_start":694,"line_end":694,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23923,"byte_end":23928,"line_start":695,"line_end":695,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":23933,"byte_end":23940,"line_start":696,"line_end":696,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25318,"byte_end":25330,"line_start":739,"line_end":739,"column_start":12,"column_end":24},"name":"is_abandoned","qualname":"<Producer<T>>::is_abandoned","value":"pub fn is_abandoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the corresponding [`Consumer`] has been destroyed.","sig":null,"attributes":[{"value":"/ Returns `true` if the corresponding [`Consumer`] has been destroyed.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24023,"byte_end":24095,"line_start":701,"line_end":701,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24100,"byte_end":24103,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24108,"byte_end":24122,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24127,"byte_end":24130,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24135,"byte_end":24142,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24147,"byte_end":24172,"line_start":706,"line_end":706,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24177,"byte_end":24180,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let (mut p, c) = RingBuffer::new(7).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24185,"byte_end":24233,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/ assert!(!p.is_abandoned());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24238,"byte_end":24269,"line_start":709,"line_end":709,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(p.push(10), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24274,"byte_end":24309,"line_start":710,"line_end":710,"column_start":5,"column_end":40}},{"value":"/ drop(c);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24314,"byte_end":24326,"line_start":711,"line_end":711,"column_start":5,"column_end":17}},{"value":"/ // The items that are still in the ring buffer are not accessible anymore.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24331,"byte_end":24409,"line_start":712,"line_end":712,"column_start":5,"column_end":83}},{"value":"/ assert!(p.is_abandoned());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24414,"byte_end":24444,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ // Even though it's futile, items can still be written:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24449,"byte_end":24508,"line_start":714,"line_end":714,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(p.push(11), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24513,"byte_end":24548,"line_start":715,"line_end":715,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24553,"byte_end":24560,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24565,"byte_end":24568,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Since the consumer can be concurrently dropped on another thread,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24573,"byte_end":24642,"line_start":718,"line_end":718,"column_start":5,"column_end":74}},{"value":"/ the producer might become abandoned at any time:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24647,"byte_end":24699,"line_start":719,"line_end":719,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24704,"byte_end":24707,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24712,"byte_end":24719,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ # use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24724,"byte_end":24751,"line_start":722,"line_end":722,"column_start":5,"column_end":32}},{"value":"/ # let (p, c) = RingBuffer::<i32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24756,"byte_end":24809,"line_start":723,"line_end":723,"column_start":5,"column_end":58}},{"value":"/ if !p.is_abandoned() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24814,"byte_end":24840,"line_start":724,"line_end":724,"column_start":5,"column_end":31}},{"value":"/     // Right now, the consumer might still be alive, but it might as well not be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24845,"byte_end":24929,"line_start":725,"line_end":725,"column_start":5,"column_end":89}},{"value":"/     // if another thread has just dropped it.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24934,"byte_end":24983,"line_start":726,"line_end":726,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24988,"byte_end":24993,"line_start":727,"line_end":727,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":24998,"byte_end":25005,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25010,"byte_end":25013,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ However, if it already is abandoned, it will stay that way:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25018,"byte_end":25081,"line_start":730,"line_end":730,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25086,"byte_end":25089,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25094,"byte_end":25101,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25106,"byte_end":25133,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/ # let (p, c) = RingBuffer::<i32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25138,"byte_end":25191,"line_start":734,"line_end":734,"column_start":5,"column_end":58}},{"value":"/ if p.is_abandoned() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25196,"byte_end":25221,"line_start":735,"line_end":735,"column_start":5,"column_end":30}},{"value":"/     // The consumer does definitely not exist anymore.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25226,"byte_end":25284,"line_start":736,"line_end":736,"column_start":5,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25289,"byte_end":25294,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25299,"byte_end":25306,"line_start":738,"line_end":738,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25468,"byte_end":25474,"line_start":744,"line_end":744,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Producer<T>>::buffer","value":"pub fn buffer(&Self) -> &RingBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a read-only reference to the ring buffer.\n","sig":null,"attributes":[{"value":"/ Returns a read-only reference to the ring buffer.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":25403,"byte_end":25456,"line_start":743,"line_end":743,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27158,"byte_end":27166,"line_start":793,"line_end":793,"column_start":12,"column_end":20},"name":"Consumer","qualname":"::Consumer","value":"Consumer {  }","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" The consumer side of a [`RingBuffer`].","sig":null,"attributes":[{"value":"/ The consumer side of a [`RingBuffer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26323,"byte_end":26365,"line_start":770,"line_end":770,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26366,"byte_end":26369,"line_start":771,"line_end":771,"column_start":1,"column_end":4}},{"value":"/ Can be moved between threads,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26370,"byte_end":26403,"line_start":772,"line_end":772,"column_start":1,"column_end":34}},{"value":"/ but references from different threads are not allowed","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26404,"byte_end":26461,"line_start":773,"line_end":773,"column_start":1,"column_end":58}},{"value":"/ (i.e. it is [`Send`] but not [`Sync`]).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26462,"byte_end":26505,"line_start":774,"line_end":774,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26506,"byte_end":26509,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ Can only be created with [`RingBuffer::split()`]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26510,"byte_end":26562,"line_start":776,"line_end":776,"column_start":1,"column_end":53}},{"value":"/ (together with its counterpart, the [`Producer`]).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26563,"byte_end":26617,"line_start":777,"line_end":777,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26618,"byte_end":26621,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ When the `Consumer` is dropped, [`Producer::is_abandoned()`] will return `true`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26622,"byte_end":26706,"line_start":779,"line_end":779,"column_start":1,"column_end":85}},{"value":"/ This can be used as a crude way to communicate to the sending thread","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26707,"byte_end":26779,"line_start":780,"line_end":780,"column_start":1,"column_end":73}},{"value":"/ that no more data will be consumed.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26780,"byte_end":26819,"line_start":781,"line_end":781,"column_start":1,"column_end":40}},{"value":"/ When the `Consumer` is dropped after the [`Producer`] has already been dropped,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26820,"byte_end":26903,"line_start":782,"line_end":782,"column_start":1,"column_end":84}},{"value":"/ [`RingBuffer::drop()`] will be called, freeing the allocated memory.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26904,"byte_end":26976,"line_start":783,"line_end":783,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26977,"byte_end":26980,"line_start":784,"line_end":784,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26981,"byte_end":26995,"line_start":785,"line_end":785,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":26996,"byte_end":26999,"line_start":786,"line_end":786,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27000,"byte_end":27007,"line_start":787,"line_end":787,"column_start":1,"column_end":8}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27008,"byte_end":27033,"line_start":788,"line_end":788,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27034,"byte_end":27037,"line_start":789,"line_end":789,"column_start":1,"column_end":4}},{"value":"/ let (producer, consumer) = RingBuffer::<f32>::new(1000).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27038,"byte_end":27106,"line_start":790,"line_end":790,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27107,"byte_end":27114,"line_start":791,"line_end":791,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28487,"byte_end":28490,"line_start":837,"line_end":837,"column_start":12,"column_end":15},"name":"pop","qualname":"<Consumer<T>>::pop","value":"pub fn pop(&mut Self) -> Result<T, PopError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pop an element from the queue.","sig":null,"attributes":[{"value":"/ Attempts to pop an element from the queue.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27633,"byte_end":27679,"line_start":811,"line_end":811,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27684,"byte_end":27687,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ The element is *moved* out of the ring buffer and its slot","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27692,"byte_end":27754,"line_start":813,"line_end":813,"column_start":5,"column_end":67}},{"value":"/ is made available to be filled by the [`Producer`] again.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27759,"byte_end":27820,"line_start":814,"line_end":814,"column_start":5,"column_end":66}},{"value":"/ If the queue is empty, an error is returned.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27825,"byte_end":27873,"line_start":815,"line_end":815,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27878,"byte_end":27881,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27886,"byte_end":27900,"line_start":817,"line_end":817,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27905,"byte_end":27908,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27913,"byte_end":27920,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ use rtrb::{PopError, RingBuffer};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27925,"byte_end":27962,"line_start":820,"line_end":820,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27967,"byte_end":27970,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let (mut p, mut c) = RingBuffer::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27975,"byte_end":28027,"line_start":822,"line_end":822,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28032,"byte_end":28035,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p.push(10), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28040,"byte_end":28075,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(c.pop(), Ok(10));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28080,"byte_end":28112,"line_start":825,"line_end":825,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(c.pop(), Err(PopError::Empty));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28117,"byte_end":28163,"line_start":826,"line_end":826,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28168,"byte_end":28175,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28180,"byte_end":28183,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ To obtain an [`Option<T>`](Option), use [`.ok()`](Result::ok) on the result.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28188,"byte_end":28268,"line_start":829,"line_end":829,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28273,"byte_end":28276,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28281,"byte_end":28288,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/ # use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28293,"byte_end":28320,"line_start":832,"line_end":832,"column_start":5,"column_end":32}},{"value":"/ # let (mut p, mut c) = RingBuffer::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28325,"byte_end":28379,"line_start":833,"line_end":833,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(p.push(20), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28384,"byte_end":28419,"line_start":834,"line_end":834,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(c.pop().ok(), Some(20));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28424,"byte_end":28463,"line_start":835,"line_end":835,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28468,"byte_end":28475,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29366,"byte_end":29370,"line_start":865,"line_end":865,"column_start":12,"column_end":16},"name":"peek","qualname":"<Consumer<T>>::peek","value":"pub fn peek(&Self) -> Result<&T, PeekError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read an element from the queue without removing it.","sig":null,"attributes":[{"value":"/ Attempts to read an element from the queue without removing it.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28884,"byte_end":28951,"line_start":849,"line_end":849,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28956,"byte_end":28959,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ If the queue is empty, an error is returned.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":28964,"byte_end":29012,"line_start":851,"line_end":851,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29017,"byte_end":29020,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29025,"byte_end":29039,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29044,"byte_end":29047,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29052,"byte_end":29059,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use rtrb::{PeekError, RingBuffer};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29064,"byte_end":29102,"line_start":856,"line_end":856,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29107,"byte_end":29110,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let (mut p, c) = RingBuffer::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29115,"byte_end":29163,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29168,"byte_end":29171,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(c.peek(), Err(PeekError::Empty));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29176,"byte_end":29224,"line_start":860,"line_end":860,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(p.push(10), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29229,"byte_end":29264,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(c.peek(), Ok(&10));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29269,"byte_end":29303,"line_start":862,"line_end":862,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(c.peek(), Ok(&10));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29308,"byte_end":29342,"line_start":863,"line_end":863,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29347,"byte_end":29354,"line_start":864,"line_end":864,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":32139,"byte_end":32149,"line_start":937,"line_end":937,"column_start":12,"column_end":22},"name":"read_chunk","qualname":"<Consumer<T>>::read_chunk","value":"pub fn read_chunk(&mut Self, usize) -> Result<ReadChunk<, T>, ChunkError>","parent":null,"children":[],"decl_id":null,"docs":" Returns `n` slots for reading.","sig":null,"attributes":[{"value":"/ Returns `n` slots for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29580,"byte_end":29614,"line_start":873,"line_end":873,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29619,"byte_end":29622,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ If not enough slots are available, an error","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29627,"byte_end":29674,"line_start":875,"line_end":875,"column_start":5,"column_end":52}},{"value":"/ (containing the number of available slots) is returned.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29679,"byte_end":29738,"line_start":876,"line_end":876,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29743,"byte_end":29746,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ The elements can be accessed with [`ReadChunk::as_slices()`] or","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29751,"byte_end":29818,"line_start":878,"line_end":878,"column_start":5,"column_end":72}},{"value":"/ by iterating over (a `&mut` to) the [`ReadChunk`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29823,"byte_end":29877,"line_start":879,"line_end":879,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29882,"byte_end":29885,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ The provided slots are *not* automatically made available","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29890,"byte_end":29951,"line_start":881,"line_end":881,"column_start":5,"column_end":66}},{"value":"/ to be written again by the [`Producer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":29956,"byte_end":30000,"line_start":882,"line_end":882,"column_start":5,"column_end":49}},{"value":"/ This has to be explicitly done by calling [`ReadChunk::commit()`],","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30005,"byte_end":30075,"line_start":883,"line_end":883,"column_start":5,"column_end":75}},{"value":"/ [`ReadChunk::commit_iterated()`] or [`ReadChunk::commit_all()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30080,"byte_end":30148,"line_start":884,"line_end":884,"column_start":5,"column_end":73}},{"value":"/ You can \"peek\" at the contained values by simply","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30153,"byte_end":30205,"line_start":885,"line_end":885,"column_start":5,"column_end":57}},{"value":"/ not calling any of the \"commit\" methods.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30210,"byte_end":30254,"line_start":886,"line_end":886,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30259,"byte_end":30262,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30267,"byte_end":30281,"line_start":888,"line_end":888,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30286,"byte_end":30289,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ Items are dropped when [`ReadChunk::commit()`], [`ReadChunk::commit_iterated()`]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30294,"byte_end":30378,"line_start":890,"line_end":890,"column_start":5,"column_end":89}},{"value":"/ or [`ReadChunk::commit_all()`] is called","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30383,"byte_end":30427,"line_start":891,"line_end":891,"column_start":5,"column_end":49}},{"value":"/ (which is only relevant if `T` implements [`Drop`]).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30432,"byte_end":30488,"line_start":892,"line_end":892,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30493,"byte_end":30496,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30501,"byte_end":30508,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30513,"byte_end":30538,"line_start":895,"line_end":895,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30543,"byte_end":30546,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ // Static variable to count all drop() invocations","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30551,"byte_end":30605,"line_start":897,"line_end":897,"column_start":5,"column_end":59}},{"value":"/ static mut DROP_COUNT: i32 = 0;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30610,"byte_end":30645,"line_start":898,"line_end":898,"column_start":5,"column_end":40}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30650,"byte_end":30670,"line_start":899,"line_end":899,"column_start":5,"column_end":25}},{"value":"/ struct Thing;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30675,"byte_end":30692,"line_start":900,"line_end":900,"column_start":5,"column_end":22}},{"value":"/ impl Drop for Thing {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30697,"byte_end":30722,"line_start":901,"line_end":901,"column_start":5,"column_end":30}},{"value":"/     fn drop(&mut self) { unsafe { DROP_COUNT += 1; } }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30727,"byte_end":30785,"line_start":902,"line_end":902,"column_start":5,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30790,"byte_end":30795,"line_start":903,"line_end":903,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30800,"byte_end":30803,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ // Scope to limit lifetime of ring buffer","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30808,"byte_end":30853,"line_start":905,"line_end":905,"column_start":5,"column_end":50}},{"value":"/ {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30858,"byte_end":30863,"line_start":906,"line_end":906,"column_start":5,"column_end":10}},{"value":"/     let (mut p, mut c) = RingBuffer::new(2).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30868,"byte_end":30924,"line_start":907,"line_end":907,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30929,"byte_end":30932,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/     assert!(p.push(Thing).is_ok()); // 1","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30937,"byte_end":30981,"line_start":909,"line_end":909,"column_start":5,"column_end":49}},{"value":"/     assert!(p.push(Thing).is_ok()); // 2","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":30986,"byte_end":31030,"line_start":910,"line_end":910,"column_start":5,"column_end":49}},{"value":"/     if let Ok(thing) = c.pop() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31035,"byte_end":31071,"line_start":911,"line_end":911,"column_start":5,"column_end":41}},{"value":"/         // \"thing\" has been *moved* out of the queue but not yet dropped","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31076,"byte_end":31152,"line_start":912,"line_end":912,"column_start":5,"column_end":81}},{"value":"/         assert_eq!(unsafe { DROP_COUNT }, 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31157,"byte_end":31206,"line_start":913,"line_end":913,"column_start":5,"column_end":54}},{"value":"/     } else {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31211,"byte_end":31227,"line_start":914,"line_end":914,"column_start":5,"column_end":21}},{"value":"/         unreachable!();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31232,"byte_end":31259,"line_start":915,"line_end":915,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31264,"byte_end":31273,"line_start":916,"line_end":916,"column_start":5,"column_end":14}},{"value":"/     // First Thing has been dropped when \"thing\" went out of scope:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31278,"byte_end":31349,"line_start":917,"line_end":917,"column_start":5,"column_end":76}},{"value":"/     assert_eq!(unsafe { DROP_COUNT }, 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31354,"byte_end":31399,"line_start":918,"line_end":918,"column_start":5,"column_end":50}},{"value":"/     assert!(p.push(Thing).is_ok()); // 3","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31404,"byte_end":31448,"line_start":919,"line_end":919,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31453,"byte_end":31456,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/     if let Ok(chunk) = c.read_chunk(2) {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31461,"byte_end":31505,"line_start":921,"line_end":921,"column_start":5,"column_end":49}},{"value":"/         assert_eq!(chunk.len(), 2);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31510,"byte_end":31549,"line_start":922,"line_end":922,"column_start":5,"column_end":44}},{"value":"/         assert_eq!(unsafe { DROP_COUNT }, 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31554,"byte_end":31603,"line_start":923,"line_end":923,"column_start":5,"column_end":54}},{"value":"/         chunk.commit(1); // Drops only one of the two Things","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31608,"byte_end":31672,"line_start":924,"line_end":924,"column_start":5,"column_end":69}},{"value":"/         assert_eq!(unsafe { DROP_COUNT }, 2);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31677,"byte_end":31726,"line_start":925,"line_end":925,"column_start":5,"column_end":54}},{"value":"/     } else {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31731,"byte_end":31747,"line_start":926,"line_end":926,"column_start":5,"column_end":21}},{"value":"/         unreachable!();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31752,"byte_end":31779,"line_start":927,"line_end":927,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31784,"byte_end":31793,"line_start":928,"line_end":928,"column_start":5,"column_end":14}},{"value":"/     // The last Thing is still in the queue ...","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31798,"byte_end":31849,"line_start":929,"line_end":929,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(unsafe { DROP_COUNT }, 2);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31854,"byte_end":31899,"line_start":930,"line_end":930,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31904,"byte_end":31909,"line_start":931,"line_end":931,"column_start":5,"column_end":10}},{"value":"/ // ... and it is dropped when the ring buffer goes out of scope:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31914,"byte_end":31982,"line_start":932,"line_end":932,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(unsafe { DROP_COUNT }, 3);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":31987,"byte_end":32028,"line_start":933,"line_end":933,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":32033,"byte_end":32040,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":32045,"byte_end":32048,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ See the [crate-level documentation](crate#examples) for more examples.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":32053,"byte_end":32127,"line_start":936,"line_end":936,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33761,"byte_end":33766,"line_start":983,"line_end":983,"column_start":12,"column_end":17},"name":"slots","qualname":"<Consumer<T>>::slots","value":"pub fn slots(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of slots available for reading.","sig":null,"attributes":[{"value":"/ Returns the number of slots available for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33136,"byte_end":33190,"line_start":965,"line_end":965,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33195,"byte_end":33198,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ Since items can be concurrently produced on another thread, the actual number","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33203,"byte_end":33284,"line_start":967,"line_end":967,"column_start":5,"column_end":86}},{"value":"/ of available slots may increase at any time (up to the [`RingBuffer::capacity()`]).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33289,"byte_end":33376,"line_start":968,"line_end":968,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33381,"byte_end":33384,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ To check for a single available slot,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33389,"byte_end":33430,"line_start":970,"line_end":970,"column_start":5,"column_end":46}},{"value":"/ using [`Consumer::is_empty()`] is often quicker","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33435,"byte_end":33486,"line_start":971,"line_end":971,"column_start":5,"column_end":56}},{"value":"/ (because it might not have to check an atomic variable).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33491,"byte_end":33551,"line_start":972,"line_end":972,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33556,"byte_end":33559,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33564,"byte_end":33578,"line_start":974,"line_end":974,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33583,"byte_end":33586,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33591,"byte_end":33598,"line_start":976,"line_end":976,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33603,"byte_end":33628,"line_start":977,"line_end":977,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33633,"byte_end":33636,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ let (p, c) = RingBuffer::<f32>::new(1024).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33641,"byte_end":33695,"line_start":979,"line_end":979,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33700,"byte_end":33703,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(c.slots(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33708,"byte_end":33737,"line_start":981,"line_end":981,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33742,"byte_end":33749,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34949,"byte_end":34957,"line_start":1022,"line_end":1022,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Consumer<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are currently no slots available for reading.","sig":null,"attributes":[{"value":"/ Returns `true` if there are currently no slots available for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":33938,"byte_end":34011,"line_start":989,"line_end":989,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34016,"byte_end":34019,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34024,"byte_end":34038,"line_start":991,"line_end":991,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34043,"byte_end":34046,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34051,"byte_end":34058,"line_start":993,"line_end":993,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34063,"byte_end":34088,"line_start":994,"line_end":994,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34093,"byte_end":34096,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ let (p, c) = RingBuffer::<f32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34101,"byte_end":34152,"line_start":996,"line_end":996,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34157,"byte_end":34160,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ assert!(c.is_empty());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34165,"byte_end":34191,"line_start":998,"line_end":998,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34196,"byte_end":34203,"line_start":999,"line_end":999,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34208,"byte_end":34211,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ Since items can be concurrently produced on another thread, the ring buffer","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34216,"byte_end":34295,"line_start":1001,"line_end":1001,"column_start":5,"column_end":84}},{"value":"/ might not be empty for long:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34300,"byte_end":34332,"line_start":1002,"line_end":1002,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34337,"byte_end":34340,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34345,"byte_end":34352,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"/ # use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34357,"byte_end":34384,"line_start":1005,"line_end":1005,"column_start":5,"column_end":32}},{"value":"/ # let (p, c) = RingBuffer::<f32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34389,"byte_end":34442,"line_start":1006,"line_end":1006,"column_start":5,"column_end":58}},{"value":"/ if c.is_empty() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34447,"byte_end":34468,"line_start":1007,"line_end":1007,"column_start":5,"column_end":26}},{"value":"/     // The buffer might be empty, but it might as well not be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34473,"byte_end":34538,"line_start":1008,"line_end":1008,"column_start":5,"column_end":70}},{"value":"/     // if an item was just produced on another thread.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34543,"byte_end":34601,"line_start":1009,"line_end":1009,"column_start":5,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34606,"byte_end":34611,"line_start":1010,"line_end":1010,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34616,"byte_end":34623,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34628,"byte_end":34631,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ However, if it's not empty, another thread cannot change that:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34636,"byte_end":34702,"line_start":1013,"line_end":1013,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34707,"byte_end":34710,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34715,"byte_end":34722,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}},{"value":"/ # use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34727,"byte_end":34754,"line_start":1016,"line_end":1016,"column_start":5,"column_end":32}},{"value":"/ # let (p, c) = RingBuffer::<f32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34759,"byte_end":34812,"line_start":1017,"line_end":1017,"column_start":5,"column_end":58}},{"value":"/ if !c.is_empty() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34817,"byte_end":34839,"line_start":1018,"line_end":1018,"column_start":5,"column_end":27}},{"value":"/     // At least one slot is guaranteed to be available for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34844,"byte_end":34915,"line_start":1019,"line_end":1019,"column_start":5,"column_end":76}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34920,"byte_end":34925,"line_start":1020,"line_end":1020,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":34930,"byte_end":34937,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36247,"byte_end":36259,"line_start":1063,"line_end":1063,"column_start":12,"column_end":24},"name":"is_abandoned","qualname":"<Consumer<T>>::is_abandoned","value":"pub fn is_abandoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the corresponding [`Producer`] has been destroyed.","sig":null,"attributes":[{"value":"/ Returns `true` if the corresponding [`Producer`] has been destroyed.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35021,"byte_end":35093,"line_start":1026,"line_end":1026,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35098,"byte_end":35101,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35106,"byte_end":35120,"line_start":1028,"line_end":1028,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35125,"byte_end":35128,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35133,"byte_end":35140,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/ use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35145,"byte_end":35170,"line_start":1031,"line_end":1031,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35175,"byte_end":35178,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ let (mut p, mut c) = RingBuffer::new(7).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35183,"byte_end":35235,"line_start":1033,"line_end":1033,"column_start":5,"column_end":57}},{"value":"/ assert!(!c.is_abandoned());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35240,"byte_end":35271,"line_start":1034,"line_end":1034,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(p.push(10), Ok(()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35276,"byte_end":35311,"line_start":1035,"line_end":1035,"column_start":5,"column_end":40}},{"value":"/ drop(p);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35316,"byte_end":35328,"line_start":1036,"line_end":1036,"column_start":5,"column_end":17}},{"value":"/ assert!(c.is_abandoned());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35333,"byte_end":35363,"line_start":1037,"line_end":1037,"column_start":5,"column_end":35}},{"value":"/ // The items that are left in the ring buffer can still be consumed:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35368,"byte_end":35440,"line_start":1038,"line_end":1038,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(c.pop(), Ok(10));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35445,"byte_end":35477,"line_start":1039,"line_end":1039,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35482,"byte_end":35489,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35494,"byte_end":35497,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ Since the producer can be concurrently dropped on another thread,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35502,"byte_end":35571,"line_start":1042,"line_end":1042,"column_start":5,"column_end":74}},{"value":"/ the consumer might become abandoned at any time:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35576,"byte_end":35628,"line_start":1043,"line_end":1043,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35633,"byte_end":35636,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35641,"byte_end":35648,"line_start":1045,"line_end":1045,"column_start":5,"column_end":12}},{"value":"/ # use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35653,"byte_end":35680,"line_start":1046,"line_end":1046,"column_start":5,"column_end":32}},{"value":"/ # let (p, c) = RingBuffer::<i32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35685,"byte_end":35738,"line_start":1047,"line_end":1047,"column_start":5,"column_end":58}},{"value":"/ if !c.is_abandoned() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35743,"byte_end":35769,"line_start":1048,"line_end":1048,"column_start":5,"column_end":31}},{"value":"/     // Right now, the producer might still be alive, but it might as well not be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35774,"byte_end":35858,"line_start":1049,"line_end":1049,"column_start":5,"column_end":89}},{"value":"/     // if another thread has just dropped it.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35863,"byte_end":35912,"line_start":1050,"line_end":1050,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35917,"byte_end":35922,"line_start":1051,"line_end":1051,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35927,"byte_end":35934,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35939,"byte_end":35942,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ However, if it already is abandoned, it will stay that way:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":35947,"byte_end":36010,"line_start":1054,"line_end":1054,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36015,"byte_end":36018,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36023,"byte_end":36030,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}},{"value":"/ # use rtrb::RingBuffer;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36035,"byte_end":36062,"line_start":1057,"line_end":1057,"column_start":5,"column_end":32}},{"value":"/ # let (p, c) = RingBuffer::<i32>::new(1).split();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36067,"byte_end":36120,"line_start":1058,"line_end":1058,"column_start":5,"column_end":58}},{"value":"/ if c.is_abandoned() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36125,"byte_end":36150,"line_start":1059,"line_end":1059,"column_start":5,"column_end":30}},{"value":"/     // The producer does definitely not exist anymore.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36155,"byte_end":36213,"line_start":1060,"line_end":1060,"column_start":5,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36218,"byte_end":36223,"line_start":1061,"line_end":1061,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36228,"byte_end":36235,"line_start":1062,"line_end":1062,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36397,"byte_end":36403,"line_start":1068,"line_end":1068,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Consumer<T>>::buffer","value":"pub fn buffer(&Self) -> &RingBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a read-only reference to the ring buffer.\n","sig":null,"attributes":[{"value":"/ Returns a read-only reference to the ring buffer.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":36332,"byte_end":36385,"line_start":1067,"line_end":1067,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38133,"byte_end":38143,"line_start":1115,"line_end":1115,"column_start":12,"column_end":22},"name":"WriteChunk","qualname":"::WriteChunk","value":"","parent":null,"children":[],"decl_id":null,"docs":" Structure for writing into multiple ([`Default`]-initialized) slots in one go.","sig":null,"attributes":[{"value":"/ Structure for writing into multiple ([`Default`]-initialized) slots in one go.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37158,"byte_end":37240,"line_start":1094,"line_end":1094,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37241,"byte_end":37244,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ This is returned from [`Producer::write_chunk()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37245,"byte_end":37299,"line_start":1096,"line_end":1096,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37300,"byte_end":37303,"line_start":1097,"line_end":1097,"column_start":1,"column_end":4}},{"value":"/ For an unsafe alternative that provides uninitialized slots,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37304,"byte_end":37368,"line_start":1098,"line_end":1098,"column_start":1,"column_end":65}},{"value":"/ see [`WriteChunkUninit`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37369,"byte_end":37398,"line_start":1099,"line_end":1099,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37399,"byte_end":37402,"line_start":1100,"line_end":1100,"column_start":1,"column_end":4}},{"value":"/ The slots (which initially contain [`Default`] values) can be accessed with","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37403,"byte_end":37482,"line_start":1101,"line_end":1101,"column_start":1,"column_end":80}},{"value":"/ [`as_mut_slices()`](WriteChunk::as_mut_slices)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37483,"byte_end":37533,"line_start":1102,"line_end":1102,"column_start":1,"column_end":51}},{"value":"/ or by iteration, which yields mutable references (in other words: `&mut T`).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37534,"byte_end":37614,"line_start":1103,"line_end":1103,"column_start":1,"column_end":81}},{"value":"/ A mutable reference (`&mut`) to the `WriteChunk`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37615,"byte_end":37667,"line_start":1104,"line_end":1104,"column_start":1,"column_end":53}},{"value":"/ should be used to iterate over it.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37668,"byte_end":37706,"line_start":1105,"line_end":1105,"column_start":1,"column_end":39}},{"value":"/ Each slot can only be iterated once and the number of iterations is tracked.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37707,"byte_end":37787,"line_start":1106,"line_end":1106,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37788,"byte_end":37791,"line_start":1107,"line_end":1107,"column_start":1,"column_end":4}},{"value":"/ After writing, the provided slots are *not* automatically made available","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37792,"byte_end":37868,"line_start":1108,"line_end":1108,"column_start":1,"column_end":77}},{"value":"/ to be read by the [`Consumer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37869,"byte_end":37904,"line_start":1109,"line_end":1109,"column_start":1,"column_end":36}},{"value":"/ If desired, this has to be explicitly done by calling","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37905,"byte_end":37962,"line_start":1110,"line_end":1110,"column_start":1,"column_end":58}},{"value":"/ [`commit()`](WriteChunk::commit),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":37963,"byte_end":38000,"line_start":1111,"line_end":1111,"column_start":1,"column_end":38}},{"value":"/ [`commit_iterated()`](WriteChunk::commit_iterated) or","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38001,"byte_end":38058,"line_start":1112,"line_end":1112,"column_start":1,"column_end":58}},{"value":"/ [`commit_all()`](WriteChunk::commit_all).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38059,"byte_end":38104,"line_start":1113,"line_end":1113,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39208,"byte_end":39221,"line_start":1150,"line_end":1150,"column_start":12,"column_end":25},"name":"as_mut_slices","qualname":"<WriteChunk>::as_mut_slices","value":"pub fn as_mut_slices(&mut Self) -> (&mut [T], &mut [T])","parent":null,"children":[],"decl_id":null,"docs":" Returns two slices for writing to the requested slots.","sig":null,"attributes":[{"value":"/ Returns two slices for writing to the requested slots.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38775,"byte_end":38833,"line_start":1141,"line_end":1141,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38838,"byte_end":38841,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ All slots are initially filled with their [`Default`] value.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38846,"byte_end":38910,"line_start":1143,"line_end":1143,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38915,"byte_end":38918,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ The first slice can only be empty if `0` slots have been requested.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38923,"byte_end":38994,"line_start":1145,"line_end":1145,"column_start":5,"column_end":76}},{"value":"/ If the first slice contains all requested slots, the second one is empty.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38999,"byte_end":39076,"line_start":1146,"line_end":1146,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39081,"byte_end":39084,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ See [`RingBuffer::with_chunks()`] for a way to make sure","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39089,"byte_end":39149,"line_start":1148,"line_end":1148,"column_start":5,"column_end":65}},{"value":"/ that the second slice is always empty.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39154,"byte_end":39196,"line_start":1149,"line_end":1149,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39747,"byte_end":39753,"line_start":1165,"line_end":1165,"column_start":12,"column_end":18},"name":"commit","qualname":"<WriteChunk>::commit","value":"pub fn commit(Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Makes the first `n` slots of the chunk available for reading.","sig":null,"attributes":[{"value":"/ Makes the first `n` slots of the chunk available for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39565,"byte_end":39630,"line_start":1160,"line_end":1160,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39635,"byte_end":39638,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39643,"byte_end":39655,"line_start":1162,"line_end":1162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39660,"byte_end":39663,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ Panics if `n` is greater than the number of slots in the chunk.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39668,"byte_end":39735,"line_start":1164,"line_end":1164,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40006,"byte_end":40021,"line_start":1171,"line_end":1171,"column_start":12,"column_end":27},"name":"commit_iterated","qualname":"<WriteChunk>::commit_iterated","value":"pub fn commit_iterated(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of iterated slots and makes them available for reading.\n","sig":null,"attributes":[{"value":"/ Returns the number of iterated slots and makes them available for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":39916,"byte_end":39994,"line_start":1170,"line_end":1170,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40251,"byte_end":40261,"line_start":1177,"line_end":1177,"column_start":12,"column_end":22},"name":"commit_all","qualname":"<WriteChunk>::commit_all","value":"pub fn commit_all(Self)","parent":null,"children":[],"decl_id":null,"docs":" Makes the whole chunk available for reading.\n","sig":null,"attributes":[{"value":"/ Makes the whole chunk available for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40191,"byte_end":40239,"line_start":1176,"line_end":1176,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40445,"byte_end":40448,"line_start":1183,"line_end":1183,"column_start":12,"column_end":15},"name":"len","qualname":"<WriteChunk>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of slots in the chunk.\n","sig":null,"attributes":[{"value":"/ Returns the number of slots in the chunk.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40388,"byte_end":40433,"line_start":1182,"line_end":1182,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40561,"byte_end":40569,"line_start":1188,"line_end":1188,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<WriteChunk>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the chunk contains no slots.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the chunk contains no slots.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40499,"byte_end":40549,"line_start":1187,"line_end":1187,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41947,"byte_end":41963,"line_start":1228,"line_end":1228,"column_start":12,"column_end":28},"name":"WriteChunkUninit","qualname":"::WriteChunkUninit","value":"WriteChunkUninit {  }","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"decl_id":null,"docs":" Structure for writing into multiple (uninitialized) slots in one go.","sig":null,"attributes":[{"value":"/ Structure for writing into multiple (uninitialized) slots in one go.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40945,"byte_end":41017,"line_start":1207,"line_end":1207,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41018,"byte_end":41021,"line_start":1208,"line_end":1208,"column_start":1,"column_end":4}},{"value":"/ This is returned from [`Producer::write_chunk_uninit()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41022,"byte_end":41083,"line_start":1209,"line_end":1209,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41084,"byte_end":41087,"line_start":1210,"line_end":1210,"column_start":1,"column_end":4}},{"value":"/ For a safe alternative that provides [`Default`]-initialized slots, see [`WriteChunk`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41088,"byte_end":41179,"line_start":1211,"line_end":1211,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41180,"byte_end":41183,"line_start":1212,"line_end":1212,"column_start":1,"column_end":4}},{"value":"/ The slots can be accessed with","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41184,"byte_end":41218,"line_start":1213,"line_end":1213,"column_start":1,"column_end":35}},{"value":"/ [`as_mut_slices()`](WriteChunkUninit::as_mut_slices)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41219,"byte_end":41275,"line_start":1214,"line_end":1214,"column_start":1,"column_end":57}},{"value":"/ or by iteration, which yields mutable references to possibly uninitialized data","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41276,"byte_end":41359,"line_start":1215,"line_end":1215,"column_start":1,"column_end":84}},{"value":"/ (in other words: `&mut MaybeUninit<T>`).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41360,"byte_end":41404,"line_start":1216,"line_end":1216,"column_start":1,"column_end":45}},{"value":"/ A mutable reference (`&mut`) to the `WriteChunkUninit`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41405,"byte_end":41463,"line_start":1217,"line_end":1217,"column_start":1,"column_end":59}},{"value":"/ should be used to iterate over it.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41464,"byte_end":41502,"line_start":1218,"line_end":1218,"column_start":1,"column_end":39}},{"value":"/ Each slot can only be iterated once and the number of iterations is tracked.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41503,"byte_end":41583,"line_start":1219,"line_end":1219,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41584,"byte_end":41587,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ After writing, the provided slots are *not* automatically made available","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41588,"byte_end":41664,"line_start":1221,"line_end":1221,"column_start":1,"column_end":77}},{"value":"/ to be read by the [`Consumer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41665,"byte_end":41700,"line_start":1222,"line_end":1222,"column_start":1,"column_end":36}},{"value":"/ If desired, this has to be explicitly done by calling","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41701,"byte_end":41758,"line_start":1223,"line_end":1223,"column_start":1,"column_end":58}},{"value":"/ [`commit()`](WriteChunkUninit::commit),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41759,"byte_end":41802,"line_start":1224,"line_end":1224,"column_start":1,"column_end":44}},{"value":"/ [`commit_iterated()`](WriteChunkUninit::commit_iterated) or","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41803,"byte_end":41866,"line_start":1225,"line_end":1225,"column_start":1,"column_end":64}},{"value":"/ [`commit_all()`](WriteChunkUninit::commit_all).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":41867,"byte_end":41918,"line_start":1226,"line_end":1226,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42618,"byte_end":42631,"line_start":1247,"line_end":1247,"column_start":12,"column_end":25},"name":"as_mut_slices","qualname":"<WriteChunkUninit>::as_mut_slices","value":"pub fn as_mut_slices(&mut Self)\n-> (&mut [MaybeUninit<T>], &mut [MaybeUninit<T>])","parent":null,"children":[],"decl_id":null,"docs":" Returns two slices for writing to the requested slots.","sig":null,"attributes":[{"value":"/ Returns two slices for writing to the requested slots.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42158,"byte_end":42216,"line_start":1238,"line_end":1238,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42221,"byte_end":42224,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ The first slice can only be empty if `0` slots have been requested.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42229,"byte_end":42300,"line_start":1240,"line_end":1240,"column_start":5,"column_end":76}},{"value":"/ If the first slice contains all requested slots, the second one is empty.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42305,"byte_end":42382,"line_start":1241,"line_end":1241,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42387,"byte_end":42390,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ See [`RingBuffer::with_chunks()`] for a way to make sure","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42395,"byte_end":42455,"line_start":1243,"line_end":1243,"column_start":5,"column_end":65}},{"value":"/ that the second slice is always empty.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42460,"byte_end":42502,"line_start":1244,"line_end":1244,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42507,"byte_end":42510,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ The extension trait [`CopyToUninit`] can be used to safely copy data into those slices.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42515,"byte_end":42606,"line_start":1246,"line_end":1246,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43306,"byte_end":43312,"line_start":1266,"line_end":1266,"column_start":19,"column_end":25},"name":"commit","qualname":"<WriteChunkUninit>::commit","value":"pub unsafe fn commit(Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Makes the first `n` slots of the chunk available for reading.","sig":null,"attributes":[{"value":"/ Makes the first `n` slots of the chunk available for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42945,"byte_end":43010,"line_start":1256,"line_end":1256,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43015,"byte_end":43018,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43023,"byte_end":43035,"line_start":1258,"line_end":1258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43040,"byte_end":43043,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ Panics if `n` is greater than the number of slots in the chunk.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43048,"byte_end":43115,"line_start":1260,"line_end":1260,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43120,"byte_end":43123,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43128,"byte_end":43140,"line_start":1262,"line_end":1262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43145,"byte_end":43148,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ The user must make sure that the first `n` elements","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43153,"byte_end":43208,"line_start":1264,"line_end":1264,"column_start":5,"column_end":60}},{"value":"/ (and not more, in case `T` implements [`Drop`]) have been initialized.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43213,"byte_end":43287,"line_start":1265,"line_end":1265,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43660,"byte_end":43675,"line_start":1276,"line_end":1276,"column_start":19,"column_end":34},"name":"commit_iterated","qualname":"<WriteChunkUninit>::commit_iterated","value":"pub unsafe fn commit_iterated(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of iterated slots and makes them available for reading.","sig":null,"attributes":[{"value":"/ Returns the number of iterated slots and makes them available for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43448,"byte_end":43526,"line_start":1271,"line_end":1271,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43531,"byte_end":43534,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43539,"byte_end":43551,"line_start":1273,"line_end":1273,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43556,"byte_end":43559,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ The user must make sure that all iterated elements have been initialized.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43564,"byte_end":43641,"line_start":1275,"line_end":1275,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43949,"byte_end":43959,"line_start":1286,"line_end":1286,"column_start":19,"column_end":29},"name":"commit_all","qualname":"<WriteChunkUninit>::commit_all","value":"pub unsafe fn commit_all(Self)","parent":null,"children":[],"decl_id":null,"docs":" Makes the whole chunk available for reading.","sig":null,"attributes":[{"value":"/ Makes the whole chunk available for reading.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43776,"byte_end":43824,"line_start":1281,"line_end":1281,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43829,"byte_end":43832,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43837,"byte_end":43849,"line_start":1283,"line_end":1283,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43854,"byte_end":43857,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ The user must make sure that all elements have been initialized.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":43862,"byte_end":43930,"line_start":1285,"line_end":1285,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":44365,"byte_end":44368,"line_start":1299,"line_end":1299,"column_start":12,"column_end":15},"name":"len","qualname":"<WriteChunkUninit>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of slots in the chunk.\n","sig":null,"attributes":[{"value":"/ Returns the number of slots in the chunk.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":44308,"byte_end":44353,"line_start":1298,"line_end":1298,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":44501,"byte_end":44509,"line_start":1304,"line_end":1304,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<WriteChunkUninit>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the chunk contains no slots.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the chunk contains no slots.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":44439,"byte_end":44489,"line_start":1303,"line_end":1303,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45461,"byte_end":45473,"line_start":1336,"line_end":1336,"column_start":11,"column_end":23},"name":"CopyToUninit","qualname":"::CopyToUninit","value":"CopyToUninit<T: Copy>","parent":null,"children":[{"krate":0,"index":114}],"decl_id":null,"docs":" Extension trait used to provide a [`copy_to_uninit()`](CopyToUninit::copy_to_uninit)\n method on built-in slices.","sig":null,"attributes":[{"value":"/ Extension trait used to provide a [`copy_to_uninit()`](CopyToUninit::copy_to_uninit)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45095,"byte_end":45183,"line_start":1325,"line_end":1325,"column_start":1,"column_end":89}},{"value":"/ method on built-in slices.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45184,"byte_end":45214,"line_start":1326,"line_end":1326,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45215,"byte_end":45218,"line_start":1327,"line_end":1327,"column_start":1,"column_end":4}},{"value":"/ This can be used to safely copy data to the slices returned from","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45219,"byte_end":45287,"line_start":1328,"line_end":1328,"column_start":1,"column_end":69}},{"value":"/ [`WriteChunkUninit::as_mut_slices()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45288,"byte_end":45330,"line_start":1329,"line_end":1329,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45331,"byte_end":45334,"line_start":1330,"line_end":1330,"column_start":1,"column_end":4}},{"value":"/ To use this, the trait has to be brought into scope, e.g. with:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45335,"byte_end":45402,"line_start":1331,"line_end":1331,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45403,"byte_end":45406,"line_start":1332,"line_end":1332,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45407,"byte_end":45414,"line_start":1333,"line_end":1333,"column_start":1,"column_end":8}},{"value":"/ use rtrb::CopyToUninit;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45415,"byte_end":45442,"line_start":1334,"line_end":1334,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45443,"byte_end":45450,"line_start":1335,"line_end":1335,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45551,"byte_end":45565,"line_start":1338,"line_end":1338,"column_start":8,"column_end":22},"name":"copy_to_uninit","qualname":"::CopyToUninit::copy_to_uninit","value":"pub fn copy_to_uninit(&Self, &mut [MaybeUninit<T>])","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Copies contents to a possibly uninitialized slice.\n","sig":null,"attributes":[{"value":"/ Copies contents to a possibly uninitialized slice.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":45489,"byte_end":45543,"line_start":1337,"line_end":1337,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":219},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47053,"byte_end":47062,"line_start":1374,"line_end":1374,"column_start":12,"column_end":21},"name":"ReadChunk","qualname":"::ReadChunk","value":"ReadChunk {  }","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":" Structure for reading from multiple slots in one go.","sig":null,"attributes":[{"value":"/ Structure for reading from multiple slots in one go.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46160,"byte_end":46216,"line_start":1358,"line_end":1358,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46217,"byte_end":46220,"line_start":1359,"line_end":1359,"column_start":1,"column_end":4}},{"value":"/ This is returned from [`Consumer::read_chunk()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46221,"byte_end":46274,"line_start":1360,"line_end":1360,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46275,"byte_end":46278,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/ The slots can be accessed with [`as_slices()`](ReadChunk::as_slices)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46279,"byte_end":46351,"line_start":1362,"line_end":1362,"column_start":1,"column_end":73}},{"value":"/ or by iteration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46352,"byte_end":46372,"line_start":1363,"line_end":1363,"column_start":1,"column_end":21}},{"value":"/ Even though iterating yields immutable references (`&T`),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46373,"byte_end":46434,"line_start":1364,"line_end":1364,"column_start":1,"column_end":62}},{"value":"/ a mutable reference (`&mut`) to the `ReadChunk` should be used to iterate over it.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46435,"byte_end":46521,"line_start":1365,"line_end":1365,"column_start":1,"column_end":87}},{"value":"/ Each slot can only be iterated once and the number of iterations is tracked.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46522,"byte_end":46602,"line_start":1366,"line_end":1366,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46603,"byte_end":46606,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/ After reading, the provided slots are *not* automatically made available","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46607,"byte_end":46683,"line_start":1368,"line_end":1368,"column_start":1,"column_end":77}},{"value":"/ to be written again by the [`Producer`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46684,"byte_end":46728,"line_start":1369,"line_end":1369,"column_start":1,"column_end":45}},{"value":"/ If desired, this has to be explicitly done by calling [`commit()`](ReadChunk::commit),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46729,"byte_end":46819,"line_start":1370,"line_end":1370,"column_start":1,"column_end":91}},{"value":"/ [`commit_iterated()`](ReadChunk::commit_iterated) or [`commit_all()`](ReadChunk::commit_all).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46820,"byte_end":46917,"line_start":1371,"line_end":1371,"column_start":1,"column_end":98}},{"value":"/ Note that this runs the destructor of the committed items (if `T` implements [`Drop`]).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":46918,"byte_end":47009,"line_start":1372,"line_end":1372,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47616,"byte_end":47625,"line_start":1391,"line_end":1391,"column_start":12,"column_end":21},"name":"as_slices","qualname":"<ReadChunk>::as_slices","value":"pub fn as_slices(&Self) -> (&[T], &[T])","parent":null,"children":[],"decl_id":null,"docs":" Returns two slices for reading from the requested slots.","sig":null,"attributes":[{"value":"/ Returns two slices for reading from the requested slots.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47258,"byte_end":47318,"line_start":1384,"line_end":1384,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47323,"byte_end":47326,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ The first slice can only be empty if `0` slots have been requested.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47331,"byte_end":47402,"line_start":1386,"line_end":1386,"column_start":5,"column_end":76}},{"value":"/ If the first slice contains all requested slots, the second one is empty.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47407,"byte_end":47484,"line_start":1387,"line_end":1387,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47489,"byte_end":47492,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ See [`RingBuffer::with_chunks()`] for a way to make sure","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47497,"byte_end":47557,"line_start":1389,"line_end":1389,"column_start":5,"column_end":65}},{"value":"/ that the second slice is always empty.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47562,"byte_end":47604,"line_start":1390,"line_end":1390,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":48058,"byte_end":48064,"line_start":1403,"line_end":1403,"column_start":12,"column_end":18},"name":"commit","qualname":"<ReadChunk>::commit","value":"pub fn commit(Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Drops the first `n` slots of the chunk, making the space available for writing again.","sig":null,"attributes":[{"value":"/ Drops the first `n` slots of the chunk, making the space available for writing again.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47852,"byte_end":47941,"line_start":1398,"line_end":1398,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47946,"byte_end":47949,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47954,"byte_end":47966,"line_start":1400,"line_end":1400,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47971,"byte_end":47974,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ Panics if `n` is greater than the number of slots in the chunk.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47979,"byte_end":48046,"line_start":1402,"line_end":1402,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":48367,"byte_end":48382,"line_start":1411,"line_end":1411,"column_start":12,"column_end":27},"name":"commit_iterated","qualname":"<ReadChunk>::commit_iterated","value":"pub fn commit_iterated(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Drops all slots that have been iterated, making the space available for writing again.","sig":null,"attributes":[{"value":"/ Drops all slots that have been iterated, making the space available for writing again.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":48211,"byte_end":48301,"line_start":1408,"line_end":1408,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":48306,"byte_end":48309,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ Returns the number of iterated slots.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":48314,"byte_end":48355,"line_start":1410,"line_end":1410,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":48585,"byte_end":48595,"line_start":1417,"line_end":1417,"column_start":12,"column_end":22},"name":"commit_all","qualname":"<ReadChunk>::commit_all","value":"pub fn commit_all(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops all slots of the chunk, making the space available for writing again.\n","sig":null,"attributes":[{"value":"/ Drops all slots of the chunk, making the space available for writing again.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":48494,"byte_end":48573,"line_start":1416,"line_end":1416,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":49467,"byte_end":49470,"line_start":1442,"line_end":1442,"column_start":12,"column_end":15},"name":"len","qualname":"<ReadChunk>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of slots in the chunk.\n","sig":null,"attributes":[{"value":"/ Returns the number of slots in the chunk.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":49410,"byte_end":49455,"line_start":1441,"line_end":1441,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":49603,"byte_end":49611,"line_start":1447,"line_end":1447,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ReadChunk>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the chunk contains no slots.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the chunk contains no slots.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":49541,"byte_end":49591,"line_start":1446,"line_end":1446,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":248},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52047,"byte_end":52052,"line_start":1522,"line_end":1522,"column_start":5,"column_end":10},"name":"Empty","qualname":"::PopError::Empty","value":"PopError::Empty","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" The queue was empty.\n","sig":null,"attributes":[{"value":"/ The queue was empty.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52018,"byte_end":52042,"line_start":1521,"line_end":1521,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":247},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52003,"byte_end":52011,"line_start":1520,"line_end":1520,"column_start":10,"column_end":18},"name":"PopError","qualname":"::PopError","value":"pub enum PopError { Empty, }","parent":null,"children":[{"krate":0,"index":248}],"decl_id":null,"docs":" Error type for [`Consumer::pop()`].\n","sig":null,"attributes":[{"value":"/ Error type for [`Consumer::pop()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":51909,"byte_end":51948,"line_start":1518,"line_end":1518,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":262},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52456,"byte_end":52461,"line_start":1540,"line_end":1540,"column_start":5,"column_end":10},"name":"Empty","qualname":"::PeekError::Empty","value":"PeekError::Empty","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" The queue was empty.\n","sig":null,"attributes":[{"value":"/ The queue was empty.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52427,"byte_end":52451,"line_start":1539,"line_end":1539,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":261},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52411,"byte_end":52420,"line_start":1538,"line_end":1538,"column_start":10,"column_end":19},"name":"PeekError","qualname":"::PeekError","value":"pub enum PeekError { Empty, }","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" Error type for [`Consumer::peek()`].\n","sig":null,"attributes":[{"value":"/ Error type for [`Consumer::peek()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52316,"byte_end":52356,"line_start":1536,"line_end":1536,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":277},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52863,"byte_end":52867,"line_start":1558,"line_end":1558,"column_start":5,"column_end":9},"name":"Full","qualname":"::PushError::Full","value":"PushError::Full(T)","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" The queue was full.\n","sig":null,"attributes":[{"value":"/ The queue was full.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52835,"byte_end":52858,"line_start":1557,"line_end":1557,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":275},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52816,"byte_end":52825,"line_start":1556,"line_end":1556,"column_start":10,"column_end":19},"name":"PushError","qualname":"::PushError","value":"pub enum PushError<T> { Full(T), }","parent":null,"children":[{"krate":0,"index":277}],"decl_id":null,"docs":" Error type for [`Producer::push()`].\n","sig":null,"attributes":[{"value":"/ Error type for [`Producer::push()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52728,"byte_end":52768,"line_start":1554,"line_end":1554,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53664,"byte_end":53675,"line_start":1587,"line_end":1587,"column_start":5,"column_end":16},"name":"TooFewSlots","qualname":"::ChunkError::TooFewSlots","value":"ChunkError::TooFewSlots(usize)","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Fewer than the requested number of slots were available.","sig":null,"attributes":[{"value":"/ Fewer than the requested number of slots were available.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53533,"byte_end":53593,"line_start":1584,"line_end":1584,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53598,"byte_end":53601,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ Contains the number of slots that were available.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53606,"byte_end":53659,"line_start":1586,"line_end":1586,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":296},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53516,"byte_end":53526,"line_start":1583,"line_end":1583,"column_start":10,"column_end":20},"name":"ChunkError","qualname":"::ChunkError","value":"pub enum ChunkError { TooFewSlots(usize), }","parent":null,"children":[{"krate":0,"index":297}],"decl_id":null,"docs":" Error type for [`Consumer::read_chunk()`], [`Producer::write_chunk()`]\n and [`Producer::write_chunk_uninit()`].\n","sig":null,"attributes":[{"value":"/ Error type for [`Consumer::read_chunk()`], [`Producer::write_chunk()`]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53343,"byte_end":53417,"line_start":1580,"line_end":1580,"column_start":1,"column_end":75}},{"value":"/ and [`Producer::write_chunk_uninit()`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53418,"byte_end":53461,"line_start":1581,"line_end":1581,"column_start":1,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8198,"byte_end":8208,"line_start":239,"line_end":239,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":15345,"byte_end":15355,"line_start":447,"line_end":447,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":15966,"byte_end":15976,"line_start":468,"line_end":468,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16599,"byte_end":16609,"line_start":489,"line_end":489,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17872,"byte_end":17880,"line_start":529,"line_end":529,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17896,"byte_end":17904,"line_start":531,"line_end":531,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27591,"byte_end":27599,"line_start":808,"line_end":808,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27615,"byte_end":27623,"line_start":810,"line_end":810,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38224,"byte_end":38234,"line_start":1117,"line_end":1117,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38722,"byte_end":38732,"line_start":1137,"line_end":1137,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40647,"byte_end":40657,"line_start":1193,"line_end":1193,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42128,"byte_end":42144,"line_start":1237,"line_end":1237,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":44589,"byte_end":44605,"line_start":1309,"line_end":1309,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47235,"byte_end":47244,"line_start":1383,"line_end":1383,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":49691,"byte_end":49700,"line_start":1452,"line_end":1452,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":50205,"byte_end":50213,"line_start":1469,"line_end":1469,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":51182,"byte_end":51190,"line_start":1498,"line_end":1498,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52108,"byte_end":52116,"line_start":1526,"line_end":1526,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52143,"byte_end":52151,"line_start":1528,"line_end":1528,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52517,"byte_end":52526,"line_start":1544,"line_end":1544,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52553,"byte_end":52562,"line_start":1546,"line_end":1546,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52929,"byte_end":52938,"line_start":1562,"line_end":1562,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52969,"byte_end":52978,"line_start":1564,"line_end":1564,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53164,"byte_end":53173,"line_start":1572,"line_end":1572,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53738,"byte_end":53748,"line_start":1591,"line_end":1591,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53775,"byte_end":53785,"line_start":1593,"line_end":1593,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":8198,"byte_end":8208,"line_start":239,"line_end":239,"column_start":9,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":15345,"byte_end":15355,"line_start":447,"line_end":447,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":15966,"byte_end":15976,"line_start":468,"line_end":468,"column_start":23,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":16599,"byte_end":16609,"line_start":489,"line_end":489,"column_start":16,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17872,"byte_end":17880,"line_start":529,"line_end":529,"column_start":31,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":17896,"byte_end":17904,"line_start":531,"line_end":531,"column_start":9,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27591,"byte_end":27599,"line_start":808,"line_end":808,"column_start":31,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":27615,"byte_end":27623,"line_start":810,"line_end":810,"column_start":9,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38224,"byte_end":38234,"line_start":1117,"line_end":1117,"column_start":47,"column_end":57},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":38722,"byte_end":38732,"line_start":1137,"line_end":1137,"column_start":9,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":40647,"byte_end":40657,"line_start":1193,"line_end":1193,"column_start":26,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":42128,"byte_end":42144,"line_start":1237,"line_end":1237,"column_start":9,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":44589,"byte_end":44605,"line_start":1309,"line_end":1309,"column_start":26,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":47235,"byte_end":47244,"line_start":1383,"line_end":1383,"column_start":9,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":49691,"byte_end":49700,"line_start":1452,"line_end":1452,"column_start":26,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":7646}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":50205,"byte_end":50213,"line_start":1469,"line_end":1469,"column_start":25,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":170},"to":{"krate":1,"index":4406}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":51182,"byte_end":51190,"line_start":1498,"line_end":1498,"column_start":24,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":178},"to":{"krate":1,"index":4346}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52108,"byte_end":52116,"line_start":1526,"line_end":1526,"column_start":28,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":247},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52143,"byte_end":52151,"line_start":1528,"line_end":1528,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52517,"byte_end":52526,"line_start":1544,"line_end":1544,"column_start":28,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":261},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52553,"byte_end":52562,"line_start":1546,"line_end":1546,"column_start":23,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52929,"byte_end":52938,"line_start":1562,"line_end":1562,"column_start":31,"column_end":40},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":275},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":52969,"byte_end":52978,"line_start":1564,"line_end":1564,"column_start":24,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53164,"byte_end":53173,"line_start":1572,"line_end":1572,"column_start":26,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53738,"byte_end":53748,"line_start":1591,"line_end":1591,"column_start":28,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":296},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/rtrb-0.1.4/src/lib.rs","byte_start":53775,"byte_end":53785,"line_start":1593,"line_end":1593,"column_start":23,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":9401}}]}