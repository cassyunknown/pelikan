{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0","program":"/home/users/u6632448/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","strum","--edition=2018","/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=3bdc9d439ef5ef76","-C","extra-filename=-3bdc9d439ef5ef76","--out-dir","/home/users/u6632448/pelikan/src/rust/server/segcache/target/rls/debug/deps","-L","dependency=/home/users/u6632448/pelikan/src/rust/server/segcache/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/users/u6632448/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/users/u6632448/pelikan/src/rust/server/segcache/target/rls/debug/deps/libstrum-3bdc9d439ef5ef76.rmeta"},"prelude":{"crate_id":{"name":"strum","disambiguator":[13527944929503343688,0]},"crate_root":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src","external_crates":[{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[292688086858374235,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6438385474535706924,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13729837066422225192,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5402880783377335769,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6315666440082044202,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8715266272784128359,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2088041259338434830,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3489163311945967218,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[751421253572859800,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13041685254533870257,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[502015445408459368,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6198952210139392550,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14184030540380960994,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[18399346483724303225,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15511893313068785759,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13348528473392455417,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[12356376325519007124,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[7246437135573011264,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12319769989328939461,0]}}],"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":0,"byte_end":6506,"line_start":1,"line_end":217,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":0,"byte_end":6506,"line_start":1,"line_end":217,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":15},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26}],"decl_id":null,"docs":" # Strum","sig":null,"attributes":[{"value":"/ # Strum","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [![Build Status](https://travis-ci.org/Peternator7/strum.svg?branch=master)](https://travis-ci.org/Peternator7/strum)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":16,"byte_end":137,"line_start":3,"line_end":3,"column_start":1,"column_end":122}},{"value":"/ [![Latest Version](https://img.shields.io/crates/v/strum.svg)](https://crates.io/crates/strum)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":138,"byte_end":236,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ [![Rust Documentation](https://docs.rs/strum/badge.svg)](https://docs.rs/strum)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":237,"byte_end":320,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":321,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Strum is a set of macros and traits for working with","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":325,"byte_end":381,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/ enums and strings easier in Rust.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":382,"byte_end":419,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":420,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The full version of the README can be found on [Github](https://github.com/Peternator7/strum).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":424,"byte_end":522,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":523,"byte_end":526,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Including Strum in Your Project","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":527,"byte_end":564,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":565,"byte_end":568,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Import strum and strum_macros into your project by adding the following lines to your","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":569,"byte_end":658,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/ Cargo.toml. Strum_macros contains the macros needed to derive all the traits in Strum.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":659,"byte_end":749,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":750,"byte_end":753,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":754,"byte_end":765,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":766,"byte_end":784,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ strum = \"0.20\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":785,"byte_end":803,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ strum_macros = \"0.20\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":804,"byte_end":829,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":830,"byte_end":833,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # You can also access strum_macros exports directly through strum using the \"derive\" feature","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":834,"byte_end":930,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ strum = { version = \"0.20\", features = [\"derive\"] }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":931,"byte_end":986,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":987,"byte_end":994,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":995,"byte_end":998,"line_start":25,"line_end":25,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"additional_attributes","qualname":"::additional_attributes","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","parent":null,"children":[],"decl_id":null,"docs":" # Documentation for Additional Attributes","sig":null,"attributes":[{"value":"/ # Documentation for Additional Attributes","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6508,"byte_end":6553,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6554,"byte_end":6557,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Strum supports several custom attributes to modify the generated code. At the enum level, the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6558,"byte_end":6655,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ `#[strum(serialize_all = \"snake_case\")]` attribute can be used to change the case used when","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6656,"byte_end":6751,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ serializing to and deserializing from strings:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6752,"byte_end":6802,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6803,"byte_end":6806,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6807,"byte_end":6818,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ use std::string::ToString;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6819,"byte_end":6849,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/ use strum;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6850,"byte_end":6864,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/ use strum_macros;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6865,"byte_end":6886,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6887,"byte_end":6890,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Eq, PartialEq, strum_macros::ToString)]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6891,"byte_end":6950,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/ #[strum(serialize_all = \"snake_case\")]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6951,"byte_end":6993,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ enum Brightness {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":6994,"byte_end":7015,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/     DarkBlack,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7016,"byte_end":7034,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/     Dim {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7035,"byte_end":7048,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/         glow: usize,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7049,"byte_end":7073,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/     },","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7074,"byte_end":7084,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/     #[strum(serialize = \"bright\")]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7085,"byte_end":7123,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/     BrightWhite,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7124,"byte_end":7144,"line_start":20,"line_end":20,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7145,"byte_end":7150,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7151,"byte_end":7154,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7155,"byte_end":7170,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     String::from(\"dark_black\"),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7171,"byte_end":7206,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/     Brightness::DarkBlack.to_string().as_ref()","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7207,"byte_end":7257,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7258,"byte_end":7264,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7265,"byte_end":7280,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     String::from(\"dim\"),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7281,"byte_end":7309,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/     Brightness::Dim { glow: 0 }.to_string().as_ref()","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7310,"byte_end":7366,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7367,"byte_end":7373,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7374,"byte_end":7389,"line_start":31,"line_end":31,"column_start":1,"column_end":16}},{"value":"/     String::from(\"bright\"),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7390,"byte_end":7421,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/     Brightness::BrightWhite.to_string().as_ref()","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7422,"byte_end":7474,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7475,"byte_end":7481,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7482,"byte_end":7489,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7490,"byte_end":7493,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Custom attributes are applied to a variant by adding `#[strum(parameter=\"value\")]` to the variant.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7494,"byte_end":7596,"line_start":37,"line_end":37,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7597,"byte_end":7600,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - `serialize=\"...\"`: Changes the text that `FromStr()` looks for when parsing a string. This attribute can","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7601,"byte_end":7711,"line_start":39,"line_end":39,"column_start":1,"column_end":111}},{"value":"/    be applied multiple times to an element and the enum variant will be parsed if any of them match.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7712,"byte_end":7816,"line_start":40,"line_end":40,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7817,"byte_end":7820,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - `to_string=\"...\"`: Similar to `serialize`. This value will be included when using `FromStr()`. More importantly,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7821,"byte_end":7939,"line_start":42,"line_end":42,"column_start":1,"column_end":119}},{"value":"/    this specifies what text to use when calling `variant.to_string()` with the `ToString` derivation, or when calling `variant.as_ref()` with `AsRefStr`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":7940,"byte_end":8097,"line_start":43,"line_end":43,"column_start":1,"column_end":158}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8098,"byte_end":8101,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - `default`: Applied to a single variant of an enum. The variant must be a Tuple-like","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8102,"byte_end":8191,"line_start":45,"line_end":45,"column_start":1,"column_end":90}},{"value":"/    variant with a single piece of data that can be create from a `&str` i.e. `T: From<&str>`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8192,"byte_end":8289,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/    The generated code will now return the variant with the input string captured as shown below","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8290,"byte_end":8389,"line_start":47,"line_end":47,"column_start":1,"column_end":100}},{"value":"/    instead of failing.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8390,"byte_end":8416,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8417,"byte_end":8420,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     ```rust,ignore","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8421,"byte_end":8443,"line_start":50,"line_end":50,"column_start":1,"column_end":23}},{"value":"/     // Replaces this:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8444,"byte_end":8469,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/     _ => Err(strum::ParseError::VariantNotFound)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8470,"byte_end":8522,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/     // With this in generated code:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8523,"byte_end":8562,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/     default => Ok(Variant(default.into()))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8563,"byte_end":8609,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/     ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8610,"byte_end":8621,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/     The plugin will fail if the data doesn't implement From<&str>. You can only have one `default`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8622,"byte_end":8724,"line_start":56,"line_end":56,"column_start":1,"column_end":103}},{"value":"/     on your enum.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8725,"byte_end":8746,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8747,"byte_end":8750,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ - `disabled`: removes variant from generated code.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8751,"byte_end":8805,"line_start":59,"line_end":59,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8806,"byte_end":8809,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ - `message=\"..\"`: Adds a message to enum variant. This is used in conjunction with the `EnumMessage`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8810,"byte_end":8914,"line_start":61,"line_end":61,"column_start":1,"column_end":105}},{"value":"/    trait to associate a message with a variant. If `detailed_message` is not provided,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":8915,"byte_end":9005,"line_start":62,"line_end":62,"column_start":1,"column_end":91}},{"value":"/    then `message` will also be returned when get_detailed_message() is called.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":9006,"byte_end":9088,"line_start":63,"line_end":63,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":9089,"byte_end":9092,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ - `detailed_message=\"..\"`: Adds a more detailed message to a variant. If this value is omitted, then","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":9093,"byte_end":9197,"line_start":65,"line_end":65,"column_start":1,"column_end":105}},{"value":"/    `message` will be used in it's place.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":9198,"byte_end":9242,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":9243,"byte_end":9246,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - `props(key=\"value\")`: Enables associating additional information with a given variant.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/additional_attributes.rs","byte_start":9247,"byte_end":9339,"line_start":68,"line_end":68,"column_start":1,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":28},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":1297,"byte_end":1312,"line_start":36,"line_end":36,"column_start":5,"column_end":20},"name":"VariantNotFound","qualname":"::ParseError::VariantNotFound","value":"ParseError::VariantNotFound","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":27},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":1280,"byte_end":1290,"line_start":35,"line_end":35,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::ParseError","value":"pub enum ParseError { VariantNotFound, }","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" The ParseError enum is a collection of all the possible reasons\n an enum can fail to parse from a string.\n","sig":null,"attributes":[{"value":"/ The ParseError enum is a collection of all the possible reasons","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":1107,"byte_end":1174,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ an enum can fail to parse from a string.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":1175,"byte_end":1219,"line_start":33,"line_end":33,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2801,"byte_end":2817,"line_start":91,"line_end":91,"column_start":11,"column_end":27},"name":"IntoEnumIterator","qualname":"::IntoEnumIterator","value":"IntoEnumIterator: Sized","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" This trait designates that an `Enum` can be iterated over. It can\n be auto generated using `strum_macros` on your behalf.","sig":null,"attributes":[{"value":"/ This trait designates that an `Enum` can be iterated over. It can","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2032,"byte_end":2101,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ be auto generated using `strum_macros` on your behalf.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2102,"byte_end":2160,"line_start":61,"line_end":61,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2161,"byte_end":2164,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2165,"byte_end":2178,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2179,"byte_end":2182,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2183,"byte_end":2194,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2195,"byte_end":2221,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2222,"byte_end":2279,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/ use strum::{EnumIter, IntoEnumIterator};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2280,"byte_end":2324,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2325,"byte_end":2328,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[derive(EnumIter, Debug)]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2329,"byte_end":2359,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/ enum Color {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2360,"byte_end":2376,"line_start":71,"line_end":71,"column_start":1,"column_end":17}},{"value":"/     Red,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2377,"byte_end":2389,"line_start":72,"line_end":72,"column_start":1,"column_end":13}},{"value":"/     Green { range: usize },","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2390,"byte_end":2421,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/     Blue(usize),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2422,"byte_end":2442,"line_start":74,"line_end":74,"column_start":1,"column_end":21}},{"value":"/     Yellow,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2443,"byte_end":2458,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2459,"byte_end":2464,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2465,"byte_end":2468,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Iterate over the items in an enum and perform some function on them.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2469,"byte_end":2544,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ fn generic_iterator<E, F>(pred: F)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2545,"byte_end":2583,"line_start":79,"line_end":79,"column_start":1,"column_end":39}},{"value":"/ where","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2584,"byte_end":2593,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/     E: IntoEnumIterator,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2594,"byte_end":2622,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/     F: Fn(E),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2623,"byte_end":2640,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"/ {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2641,"byte_end":2646,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/     for e in E::iter() {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2647,"byte_end":2675,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/         pred(e)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2676,"byte_end":2695,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2696,"byte_end":2705,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2706,"byte_end":2711,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2712,"byte_end":2715,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ generic_iterator::<Color, _>(|color| println!(\"{:?}\", color));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2716,"byte_end":2782,"line_start":89,"line_end":89,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2783,"byte_end":2790,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":9},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2836,"byte_end":2844,"line_start":92,"line_end":92,"column_start":10,"column_end":18},"name":"Iterator","qualname":"::IntoEnumIterator::Iterator","value":"type Iterator: Iterator<Item = Self>;","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2877,"byte_end":2881,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"iter","qualname":"::IntoEnumIterator::iter","value":"pub fn iter() -> Self::Iterator","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3597,"byte_end":3608,"line_start":120,"line_end":120,"column_start":11,"column_end":22},"name":"EnumMessage","qualname":"::EnumMessage","value":"EnumMessage","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":" Associates additional pieces of information with an Enum. This can be\n autoimplemented by deriving `EnumMessage` and annotating your variants with\n `#[strum(message=\"...\")].","sig":null,"attributes":[{"value":"/ Associates additional pieces of information with an Enum. This can be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2906,"byte_end":2979,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ autoimplemented by deriving `EnumMessage` and annotating your variants with","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2980,"byte_end":3059,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ `#[strum(message=\"...\")].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3060,"byte_end":3089,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3090,"byte_end":3093,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3094,"byte_end":3107,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3108,"byte_end":3111,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3112,"byte_end":3123,"line_start":103,"line_end":103,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3124,"byte_end":3150,"line_start":104,"line_end":104,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3151,"byte_end":3208,"line_start":105,"line_end":105,"column_start":1,"column_end":58}},{"value":"/ use strum::EnumMessage;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3209,"byte_end":3236,"line_start":106,"line_end":106,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3237,"byte_end":3240,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Eq, Debug, EnumMessage)]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3241,"byte_end":3289,"line_start":108,"line_end":108,"column_start":1,"column_end":49}},{"value":"/ enum Pet {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3290,"byte_end":3304,"line_start":109,"line_end":109,"column_start":1,"column_end":15}},{"value":"/     #[strum(message=\"I have a dog\")]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3305,"byte_end":3345,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     #[strum(detailed_message=\"My dog's name is Spots\")]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3346,"byte_end":3405,"line_start":111,"line_end":111,"column_start":1,"column_end":60}},{"value":"/     Dog,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3406,"byte_end":3418,"line_start":112,"line_end":112,"column_start":1,"column_end":13}},{"value":"/     #[strum(message=\"I don't have a cat\")]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3419,"byte_end":3465,"line_start":113,"line_end":113,"column_start":1,"column_end":47}},{"value":"/     Cat,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3466,"byte_end":3478,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3479,"byte_end":3484,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3485,"byte_end":3488,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ let my_pet = Pet::Dog;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3489,"byte_end":3515,"line_start":117,"line_end":117,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(\"I have a dog\", my_pet.get_message().unwrap());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3516,"byte_end":3578,"line_start":118,"line_end":118,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3579,"byte_end":3586,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3618,"byte_end":3629,"line_start":121,"line_end":121,"column_start":8,"column_end":19},"name":"get_message","qualname":"::EnumMessage::get_message","value":"pub fn get_message(&Self) -> Option<&str>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3661,"byte_end":3681,"line_start":122,"line_end":122,"column_start":8,"column_end":28},"name":"get_detailed_message","qualname":"::EnumMessage::get_detailed_message","value":"pub fn get_detailed_message(&Self) -> Option<&str>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3713,"byte_end":3731,"line_start":123,"line_end":123,"column_start":8,"column_end":26},"name":"get_serializations","qualname":"::EnumMessage::get_serializations","value":"pub fn get_serializations(&Self) -> &[&str]","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4698,"byte_end":4710,"line_start":153,"line_end":153,"column_start":11,"column_end":23},"name":"EnumProperty","qualname":"::EnumProperty","value":"EnumProperty","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" EnumProperty is a trait that makes it possible to store additional information\n with enum variants. This trait is designed to be used with the macro of the same\n name in the `strum_macros` crate. Currently, the only string literals are supported\n in attributes, the other methods will be implemented as additional attribute types\n become stabilized.","sig":null,"attributes":[{"value":"/ EnumProperty is a trait that makes it possible to store additional information","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3754,"byte_end":3836,"line_start":126,"line_end":126,"column_start":1,"column_end":83}},{"value":"/ with enum variants. This trait is designed to be used with the macro of the same","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3837,"byte_end":3921,"line_start":127,"line_end":127,"column_start":1,"column_end":85}},{"value":"/ name in the `strum_macros` crate. Currently, the only string literals are supported","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":3922,"byte_end":4009,"line_start":128,"line_end":128,"column_start":1,"column_end":88}},{"value":"/ in attributes, the other methods will be implemented as additional attribute types","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4010,"byte_end":4096,"line_start":129,"line_end":129,"column_start":1,"column_end":87}},{"value":"/ become stabilized.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4097,"byte_end":4119,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4120,"byte_end":4123,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4124,"byte_end":4137,"line_start":132,"line_end":132,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4138,"byte_end":4141,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4142,"byte_end":4153,"line_start":134,"line_end":134,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4154,"byte_end":4180,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4181,"byte_end":4238,"line_start":136,"line_end":136,"column_start":1,"column_end":58}},{"value":"/ use strum::EnumProperty;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4239,"byte_end":4267,"line_start":137,"line_end":137,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4268,"byte_end":4271,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Eq, Debug, EnumProperty)]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4272,"byte_end":4321,"line_start":139,"line_end":139,"column_start":1,"column_end":50}},{"value":"/ enum Class {","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4322,"byte_end":4338,"line_start":140,"line_end":140,"column_start":1,"column_end":17}},{"value":"/     #[strum(props(Teacher=\"Ms.Frizzle\", Room=\"201\"))]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4339,"byte_end":4396,"line_start":141,"line_end":141,"column_start":1,"column_end":58}},{"value":"/     History,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4397,"byte_end":4413,"line_start":142,"line_end":142,"column_start":1,"column_end":17}},{"value":"/     #[strum(props(Teacher=\"Mr.Smith\"))]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4414,"byte_end":4457,"line_start":143,"line_end":143,"column_start":1,"column_end":44}},{"value":"/     #[strum(props(Room=\"103\"))]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4458,"byte_end":4493,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/     Mathematics,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4494,"byte_end":4514,"line_start":145,"line_end":145,"column_start":1,"column_end":21}},{"value":"/     #[strum(props(Time=\"2:30\"))]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4515,"byte_end":4551,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"/     Science,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4552,"byte_end":4568,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4569,"byte_end":4574,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4575,"byte_end":4578,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ let history = Class::History;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4579,"byte_end":4612,"line_start":150,"line_end":150,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(\"Ms.Frizzle\", history.get_str(\"Teacher\").unwrap());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4613,"byte_end":4679,"line_start":151,"line_end":151,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4680,"byte_end":4687,"line_start":152,"line_end":152,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4720,"byte_end":4727,"line_start":154,"line_end":154,"column_start":8,"column_end":15},"name":"get_str","qualname":"::EnumProperty::get_str","value":"pub fn get_str(&Self, &str) -> Option<&'static str>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4779,"byte_end":4786,"line_start":155,"line_end":155,"column_start":8,"column_end":15},"name":"get_int","qualname":"::EnumProperty::get_int","value":"pub fn get_int(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4861,"byte_end":4869,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"get_bool","qualname":"::EnumProperty::get_bool","value":"pub fn get_bool(&Self, &str) -> Option<bool>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5177,"byte_end":5188,"line_start":167,"line_end":167,"column_start":11,"column_end":22},"name":"AsStaticRef","qualname":"::AsStaticRef","value":"AsStaticRef<T>","parent":null,"children":[{"krate":0,"index":21}],"decl_id":null,"docs":" A cheap reference-to-reference conversion. Used to convert a value to a\n reference value with `'static` lifetime within generic code.\n #[deprecated(since=\"0.13.0\", note=\"please use `#[derive(IntoStaticStr)]` instead\")]\n","sig":null,"attributes":[{"value":"/ A cheap reference-to-reference conversion. Used to convert a value to a","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":4938,"byte_end":5013,"line_start":164,"line_end":164,"column_start":1,"column_end":76}},{"value":"/ reference value with `'static` lifetime within generic code.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5014,"byte_end":5078,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ #[deprecated(since=\"0.13.0\", note=\"please use `#[derive(IntoStaticStr)]` instead\")]","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5079,"byte_end":5166,"line_start":166,"line_end":166,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5222,"byte_end":5231,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"as_static","qualname":"::AsStaticRef::as_static","value":"pub fn as_static(&Self) -> &'static T","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5378,"byte_end":5387,"line_start":176,"line_end":176,"column_start":11,"column_end":20},"name":"EnumCount","qualname":"::EnumCount","value":"EnumCount","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" A trait for capturing the number of variants in Enum. This trait can be autoderived by\n `strum_macros`.\n","sig":null,"attributes":[{"value":"/ A trait for capturing the number of variants in Enum. This trait can be autoderived by","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5257,"byte_end":5347,"line_start":174,"line_end":174,"column_start":1,"column_end":91}},{"value":"/ `strum_macros`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5348,"byte_end":5367,"line_start":175,"line_end":175,"column_start":1,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":23},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5400,"byte_end":5405,"line_start":177,"line_end":177,"column_start":11,"column_end":16},"name":"COUNT","qualname":"::EnumCount::COUNT","value":"usize","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5542,"byte_end":5554,"line_start":182,"line_end":182,"column_start":11,"column_end":23},"name":"VariantNames","qualname":"::VariantNames","value":"VariantNames","parent":null,"children":[{"krate":0,"index":25}],"decl_id":null,"docs":" A trait for retrieving the names of each variant in Enum. This trait can\n be autoderived by `strum_macros`.\n","sig":null,"attributes":[{"value":"/ A trait for retrieving the names of each variant in Enum. This trait can","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5417,"byte_end":5493,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"/ be autoderived by `strum_macros`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5494,"byte_end":5531,"line_start":181,"line_end":181,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5610,"byte_end":5618,"line_start":184,"line_end":184,"column_start":11,"column_end":19},"name":"VARIANTS","qualname":"::VariantNames::VARIANTS","value":"&'static [&'static str]","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Names of the variants of this enum\n","sig":null,"attributes":[{"value":"/ Names of the variants of this enum","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":5561,"byte_end":5599,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":1344,"byte_end":1354,"line_start":39,"line_end":39,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":1700,"byte_end":1710,"line_start":49,"line_end":49,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":1083,"byte_end":1104,"line_start":30,"line_end":30,"column_start":9,"column_end":30},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":1344,"byte_end":1354,"line_start":39,"line_end":39,"column_start":28,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":1700,"byte_end":1710,"line_start":49,"line_end":49,"column_start":28,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.20.0/src/lib.rs","byte_start":2819,"byte_end":2824,"line_start":91,"line_end":91,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3021},"to":{"krate":0,"index":8}}]}