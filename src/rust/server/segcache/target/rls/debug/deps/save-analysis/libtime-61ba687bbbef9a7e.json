{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3","program":"/home/users/u6632448/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","time","--edition=2018","/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"formatting\"","--cfg","feature=\"itoa\"","--cfg","feature=\"std\"","-C","metadata=61ba687bbbef9a7e","-C","extra-filename=-61ba687bbbef9a7e","--out-dir","/home/users/u6632448/pelikan/src/rust/server/segcache/target/rls/debug/deps","-L","dependency=/home/users/u6632448/pelikan/src/rust/server/segcache/target/rls/debug/deps","--extern","itoa=/home/users/u6632448/pelikan/src/rust/server/segcache/target/rls/debug/deps/libitoa-6df2c5b73140ad16.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/users/u6632448/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/users/u6632448/pelikan/src/rust/server/segcache/target/rls/debug/deps/libtime-61ba687bbbef9a7e.rmeta"},"prelude":{"crate_id":{"name":"time","disambiguator":[7955324051584549148,0]},"crate_root":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src","external_crates":[{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[292688086858374235,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","num":2,"id":{"name":"core","disambiguator":[6438385474535706924,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13729837066422225192,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5402880783377335769,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6315666440082044202,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8715266272784128359,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2088041259338434830,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3489163311945967218,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[751421253572859800,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13041685254533870257,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[502015445408459368,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6198952210139392550,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14184030540380960994,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[18399346483724303225,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[15511893313068785759,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13348528473392455417,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[12356376325519007124,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[7246437135573011264,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12319769989328939461,0]}},{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/mod.rs","num":20,"id":{"name":"itoa","disambiguator":[9064558066898048805,0]}}],"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":0,"byte_end":11689,"line_start":1,"line_end":352,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1459},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":70868,"byte_end":70882,"line_start":18,"line_end":18,"column_start":26,"column_end":40},"alias_span":null,"name":"ComponentRange","value":"","parent":{"krate":0,"index":301}},{"kind":"Use","ref_id":{"krate":0,"index":1480},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":70910,"byte_end":70925,"line_start":19,"line_end":19,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":301}},{"kind":"Use","ref_id":{"krate":0,"index":1481},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":70910,"byte_end":70925,"line_start":19,"line_end":19,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":301}},{"kind":"Use","ref_id":{"krate":0,"index":1493},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":70974,"byte_end":70980,"line_start":21,"line_end":21,"column_start":17,"column_end":23},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":301}},{"kind":"Use","ref_id":{"krate":0,"index":1504},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71183,"byte_end":71207,"line_start":25,"line_end":25,"column_start":37,"column_end":61},"alias_span":null,"name":"InvalidFormatDescription","value":"","parent":{"krate":0,"index":301}},{"kind":"Use","ref_id":{"krate":0,"index":1541},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":91187,"byte_end":91196,"line_start":18,"line_end":18,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":435}},{"kind":"Use","ref_id":{"krate":0,"index":530},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":91245,"byte_end":91250,"line_start":20,"line_end":20,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":435}},{"kind":"Use","ref_id":{"krate":0,"index":587},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/mod.rs","byte_start":120424,"byte_end":120435,"line_start":7,"line_end":7,"column_start":28,"column_end":39},"alias_span":null,"name":"Formattable","value":"","parent":{"krate":0,"index":550}},{"kind":"Use","ref_id":{"krate":0,"index":1294},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11195,"byte_end":11199,"line_start":339,"line_end":339,"column_start":22,"column_end":26},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1342},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11226,"byte_end":11234,"line_start":340,"line_end":340,"column_start":26,"column_end":34},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11258,"byte_end":11263,"line_start":341,"line_end":341,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2067},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11313,"byte_end":11320,"line_start":343,"line_end":343,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2068},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11313,"byte_end":11320,"line_start":343,"line_end":343,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2101},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11344,"byte_end":11349,"line_start":344,"line_end":344,"column_start":23,"column_end":28},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2152},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11384,"byte_end":11398,"line_start":345,"line_end":345,"column_start":34,"column_end":48},"alias_span":null,"name":"OffsetDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2175},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11436,"byte_end":11453,"line_start":346,"line_end":346,"column_start":37,"column_end":54},"alias_span":null,"name":"PrimitiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2224},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11476,"byte_end":11480,"line_start":347,"line_end":347,"column_start":22,"column_end":26},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2255},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11509,"byte_end":11518,"line_start":348,"line_end":348,"column_start":28,"column_end":37},"alias_span":null,"name":"UtcOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2278},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11544,"byte_end":11551,"line_start":349,"line_end":349,"column_start":25,"column_end":32},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":0,"byte_end":11689,"line_start":1,"line_end":352,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":133},{"krate":0,"index":301},{"krate":0,"index":369},{"krate":0,"index":435},{"krate":0,"index":550},{"krate":0,"index":739},{"krate":0,"index":828},{"krate":0,"index":853},{"krate":0,"index":1007},{"krate":0,"index":1112},{"krate":0,"index":1187},{"krate":0,"index":1228},{"krate":0,"index":1244},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1292}],"decl_id":null,"docs":" # Feature flags","sig":null,"attributes":[{"value":"/ # Feature flags","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":20,"byte_end":23,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate exposes a number of features. These can be enabled or disabled as shown","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":24,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ [in Cargo's documentation](https://doc.rust-lang.org/cargo/reference/features.html). Features","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":111,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ are _disabled_ by default unless otherwise noted.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":209,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":263,"byte_end":266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Reliance on a given feature is always indicated alongside the item definition.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":267,"byte_end":349,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":350,"byte_end":353,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - `std` (_enabled by default, implicitly enables `alloc`_)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":354,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/   This enables a number of features that depend on the standard library.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":421,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":498,"byte_end":501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - `alloc` (_enabled by default via `std`_)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":502,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   Enables a number of features that require the ability to dynamically allocate memory.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":553,"byte_end":644,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":645,"byte_end":648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - `macros`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":649,"byte_end":663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":664,"byte_end":667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/   Enables macros that provide compile-time verification of values and intuitive syntax.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":668,"byte_end":759,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":760,"byte_end":763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `formatting` (_implicitly enables `std`_)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":764,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":812,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/   Enables formatting of most structs.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":816,"byte_end":857,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":858,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `parsing`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":862,"byte_end":877,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":878,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   Enables parsing of most structs.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":882,"byte_end":920,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":921,"byte_end":924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - `local-offset` (_implicitly enables `std`_)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":925,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":975,"byte_end":978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/   This feature enables a number of methods that allow obtaining the system's UTC offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":979,"byte_end":1071,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1072,"byte_end":1075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - `large-dates`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1076,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/   By default, only years within the ±9999 range (inclusive) are supported. If you need support","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1100,"byte_end":1199,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/   for years outside this range, consider enabling this feature; the supported range will be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1200,"byte_end":1295,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/   increased to ±999,999.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1296,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/   Note that enabling this feature has some costs, as it means forgoing some optimizations.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1330,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/   Ambiguities may be introduced when parsing that would not otherwise exist.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1425,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1506,"byte_end":1509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/   If you are using this feature, **please leave a comment**","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1510,"byte_end":1573,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/   [on this discussion](https://github.com/time-rs/time/discussions/306) with your use case. If","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1574,"byte_end":1672,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/   there is not sufficient demand for this feature, it will be dropped in a future release.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1673,"byte_end":1767,"line_start":44,"line_end":44,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1768,"byte_end":1771,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1772,"byte_end":1785,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1786,"byte_end":1789,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   Enables [serde](https://docs.rs/serde) support for all types.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1790,"byte_end":1857,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1858,"byte_end":1861,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - `serde-human-readable` (_implicitly enables `serde`, `formatting`, and `parsing`_)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1862,"byte_end":1950,"line_start":50,"line_end":50,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1951,"byte_end":1954,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   Allows serde representations to use a human-readable format. This is determined by the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":1955,"byte_end":2047,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/   serializer, not the user. If this feature is not enabled or if the serializer requests a","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2048,"byte_end":2142,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/   non-human-readable format, a format optimized for binary representation will be used.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2143,"byte_end":2234,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2235,"byte_end":2238,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ - `rand`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2239,"byte_end":2251,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2252,"byte_end":2255,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/   Enables [rand](https://docs.rs/rand) support for all types.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2256,"byte_end":2321,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2322,"byte_end":2325,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ - `quickcheck` (_implicitly enables `alloc`_)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2326,"byte_end":2375,"line_start":60,"line_end":60,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2376,"byte_end":2379,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/   Enables [quickcheck](https://docs.rs/quickcheck) support for all types except [`Instant`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2380,"byte_end":2476,"line_start":62,"line_end":62,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2477,"byte_end":2480,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ One pseudo-feature flag that is only available to end users is the `unsound_local_offset` cfg.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2481,"byte_end":2579,"line_start":64,"line_end":64,"column_start":1,"column_end":99}},{"value":"/ As the name indicates, using the feature is unsound, and [may cause unexpected segmentation","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2580,"byte_end":2675,"line_start":65,"line_end":65,"column_start":1,"column_end":96}},{"value":"/ faults](https://github.com/time-rs/time/issues/293). Unlike other flags, this is deliberately","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2676,"byte_end":2773,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ only available to end users; this is to ensure that a user doesn't have unsound behavior without","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2774,"byte_end":2874,"line_start":67,"line_end":67,"column_start":1,"column_end":101}},{"value":"/ knowing it. To enable this behavior, you must use `RUSTFLAGS=\"--cfg unsound_local_offset\" cargo","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2875,"byte_end":2974,"line_start":68,"line_end":68,"column_start":1,"column_end":100}},{"value":"/ build` or similar. Note: This flag is _not tested anywhere_, including in the regular test of","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":2975,"byte_end":3072,"line_start":69,"line_end":69,"column_start":1,"column_end":98}},{"value":"/ the powerset of all feature flags. Use at your own risk. Without this flag, any method that","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":3073,"byte_end":3168,"line_start":70,"line_end":70,"column_start":1,"column_end":96}},{"value":"/ requires the local offset will return the `Err` variant.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":3169,"byte_end":3229,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"deny(anonymous_parameters, clippy :: all, const_err,\n       illegal_floating_point_literal_pattern, late_bound_lifetime_arguments,\n       path_statements, patterns_in_fns_without_body, rust_2018_idioms,\n       trivial_casts, trivial_numeric_casts, unreachable_pub, unsafe_code,\n       unused_extern_crates)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":3493,"byte_end":3827,"line_start":80,"line_end":94,"column_start":1,"column_end":3}},{"value":"warn(clippy :: dbg_macro, clippy :: decimal_literal_representation, clippy\n       :: get_unwrap, clippy :: missing_docs_in_private_items, clippy ::\n       nursery, clippy :: print_stdout, clippy :: todo, clippy ::\n       unimplemented, clippy :: unwrap_in_result, clippy :: unwrap_used,\n       clippy :: use_debug, deprecated_in_future,\n       missing_copy_implementations, missing_debug_implementations,\n       unused_qualifications, variant_size_differences)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":3828,"byte_end":4294,"line_start":95,"line_end":112,"column_start":1,"column_end":3}},{"value":"allow(clippy :: redundant_pub_crate)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":4295,"byte_end":4333,"line_start":113,"line_end":113,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1294},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":12883,"byte_end":12887,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1295}],"decl_id":null,"docs":" Date in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Date in the proleptic Gregorian calendar.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":12514,"byte_end":12559,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":12560,"byte_end":12563,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ By default, years between ±9999 inclusive are representable. This can be expanded to ±999,999","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":12564,"byte_end":12663,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ inclusive by enabling the `large-dates` crate feature. Doing so has performance implications","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":12664,"byte_end":12760,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ and introduces some ambiguities when parsing.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":12761,"byte_end":12810,"line_start":32,"line_end":32,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":72},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13612,"byte_end":13615,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"MIN","qualname":"::date::Date::MIN","value":"Self","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" The minimum valid `Date`.","sig":null,"attributes":[{"value":"/ The minimum valid `Date`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13485,"byte_end":13514,"line_start":53,"line_end":53,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13519,"byte_end":13522,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13527,"byte_end":13597,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":73},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13806,"byte_end":13809,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"MAX","qualname":"::date::Date::MAX","value":"Self","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":" The maximum valid `Date`.","sig":null,"attributes":[{"value":"/ The maximum valid `Date`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13679,"byte_end":13708,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13713,"byte_end":13716,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13721,"byte_end":13791,"line_start":60,"line_end":60,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14079,"byte_end":14108,"line_start":67,"line_end":67,"column_start":18,"column_end":47},"name":"__from_ordinal_date_unchecked","qualname":"<Date>::__from_ordinal_date_unchecked","value":"pub const fn __from_ordinal_date_unchecked(i32, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Date` from the year and ordinal values, the validity of which must be\n guaranteed by the caller.\n","sig":null,"attributes":[{"value":"/ Construct a `Date` from the year and ordinal values, the validity of which must be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13922,"byte_end":14008,"line_start":64,"line_end":64,"column_start":5,"column_end":91}},{"value":"/ guaranteed by the caller.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14013,"byte_end":14042,"line_start":65,"line_end":65,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14710,"byte_end":14728,"line_start":85,"line_end":85,"column_start":18,"column_end":36},"name":"from_calendar_date","qualname":"<Date>::from_calendar_date","value":"pub const fn from_calendar_date(i32, Month, u8)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year, month, and day.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year, month, and day.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14229,"byte_end":14290,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14295,"byte_end":14298,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14303,"byte_end":14314,"line_start":75,"line_end":75,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14319,"byte_end":14349,"line_start":76,"line_end":76,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::January, 1).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14354,"byte_end":14425,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::December, 31).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14430,"byte_end":14503,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14508,"byte_end":14515,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14520,"byte_end":14523,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14528,"byte_end":14539,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14544,"byte_end":14574,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::February, 29).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14579,"byte_end":14680,"line_start":83,"line_end":83,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":14685,"byte_end":14692,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15919,"byte_end":15936,"line_start":118,"line_end":118,"column_start":18,"column_end":35},"name":"from_ordinal_date","qualname":"<Date>::from_ordinal_date","value":"pub const fn from_ordinal_date(i32, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year and ordinal day number.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15500,"byte_end":15568,"line_start":106,"line_end":106,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15573,"byte_end":15576,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15581,"byte_end":15592,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15597,"byte_end":15618,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 1).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15623,"byte_end":15677,"line_start":110,"line_end":110,"column_start":5,"column_end":59}},{"value":"/ assert!(Date::from_ordinal_date(2019, 365).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15682,"byte_end":15738,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15743,"byte_end":15750,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15755,"byte_end":15758,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15763,"byte_end":15774,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15779,"byte_end":15800,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 366).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15805,"byte_end":15889,"line_start":116,"line_end":116,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":15894,"byte_end":15901,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16766,"byte_end":16784,"line_start":137,"line_end":137,"column_start":18,"column_end":36},"name":"from_iso_week_date","qualname":"<Date>::from_iso_week_date","value":"pub const fn from_iso_week_date(i32, u8, Weekday)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the ISO year, week, and weekday.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the ISO year, week, and weekday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16221,"byte_end":16289,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16294,"byte_end":16297,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16302,"byte_end":16313,"line_start":126,"line_end":126,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16318,"byte_end":16353,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Monday).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16358,"byte_end":16421,"line_start":128,"line_end":128,"column_start":5,"column_end":68}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Tuesday).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16426,"byte_end":16490,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ assert!(Date::from_iso_week_date(2020, 53, Friday).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16495,"byte_end":16559,"line_start":130,"line_end":130,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16564,"byte_end":16571,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16576,"byte_end":16579,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16584,"byte_end":16595,"line_start":133,"line_end":133,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16600,"byte_end":16635,"line_start":134,"line_end":134,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 53, Monday).is_err()); // 2019 doesn't have 53 weeks.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16640,"byte_end":16736,"line_start":135,"line_end":135,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":16741,"byte_end":16748,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18659,"byte_end":18674,"line_start":184,"line_end":184,"column_start":18,"column_end":33},"name":"from_julian_day","qualname":"<Date>::from_julian_day","value":"pub const fn from_julian_day(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Date` from the Julian day.","sig":null,"attributes":[{"value":"/ Create a `Date` from the Julian day.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":17959,"byte_end":17999,"line_start":171,"line_end":171,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18004,"byte_end":18007,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18012,"byte_end":18106,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18111,"byte_end":18207,"line_start":174,"line_end":174,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18212,"byte_end":18215,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18220,"byte_end":18231,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18236,"byte_end":18273,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Date::from_julian_day(0), Ok(date!(-4713 - 11 - 24)));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18278,"byte_end":18347,"line_start":178,"line_end":178,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Date::from_julian_day(2_451_545), Ok(date!(2000 - 01 - 01)));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18352,"byte_end":18428,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_485), Ok(date!(2019 - 01 - 01)));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18433,"byte_end":18509,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_849), Ok(date!(2019 - 12 - 31)));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18514,"byte_end":18590,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":18595,"byte_end":18602,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20691,"byte_end":20695,"line_start":237,"line_end":237,"column_start":18,"column_end":22},"name":"year","qualname":"<Date>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20406,"byte_end":20435,"line_start":229,"line_end":229,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20440,"byte_end":20443,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20448,"byte_end":20459,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20464,"byte_end":20493,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).year(), 2019);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20498,"byte_end":20549,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).year(), 2019);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20554,"byte_end":20605,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).year(), 2020);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20610,"byte_end":20661,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20666,"byte_end":20673,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20996,"byte_end":21001,"line_start":248,"line_end":248,"column_start":18,"column_end":23},"name":"month","qualname":"<Date>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month.","sig":null,"attributes":[{"value":"/ Get the month.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20746,"byte_end":20764,"line_start":241,"line_end":241,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20769,"byte_end":20772,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20777,"byte_end":20788,"line_start":243,"line_end":243,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20793,"byte_end":20831,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).month(), Month::January);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20836,"byte_end":20898,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).month(), Month::December);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20903,"byte_end":20966,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":20971,"byte_end":20978,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21352,"byte_end":21355,"line_start":261,"line_end":261,"column_start":18,"column_end":21},"name":"day","qualname":"<Date>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the month.","sig":null,"attributes":[{"value":"/ Get the day of the month.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21057,"byte_end":21086,"line_start":252,"line_end":252,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21091,"byte_end":21094,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21099,"byte_end":21159,"line_start":254,"line_end":254,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21164,"byte_end":21167,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21172,"byte_end":21183,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21188,"byte_end":21217,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).day(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21222,"byte_end":21269,"line_start":258,"line_end":258,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).day(), 31);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21274,"byte_end":21322,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":21327,"byte_end":21334,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23600,"byte_end":23607,"line_start":315,"line_end":315,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<Date>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23267,"byte_end":23295,"line_start":306,"line_end":306,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23300,"byte_end":23303,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23308,"byte_end":23398,"line_start":308,"line_end":308,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23403,"byte_end":23406,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23411,"byte_end":23422,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23427,"byte_end":23456,"line_start":311,"line_end":311,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).ordinal(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23461,"byte_end":23512,"line_start":312,"line_end":312,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).ordinal(), 365);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23517,"byte_end":23570,"line_start":313,"line_end":313,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":23575,"byte_end":23582,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24560,"byte_end":24568,"line_start":342,"line_end":342,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<Date>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24083,"byte_end":24111,"line_start":330,"line_end":330,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24116,"byte_end":24119,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24124,"byte_end":24184,"line_start":332,"line_end":332,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24189,"byte_end":24192,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24197,"byte_end":24208,"line_start":334,"line_end":334,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24213,"byte_end":24242,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).iso_week(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24247,"byte_end":24299,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).iso_week(), 40);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24304,"byte_end":24357,"line_start":337,"line_end":337,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).iso_week(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24362,"byte_end":24414,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).iso_week(), 53);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24419,"byte_end":24472,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).iso_week(), 53);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24477,"byte_end":24530,"line_start":340,"line_end":340,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24535,"byte_end":24542,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25115,"byte_end":25132,"line_start":357,"line_end":357,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<Date>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24625,"byte_end":24689,"line_start":346,"line_end":346,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24694,"byte_end":24697,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24702,"byte_end":24762,"line_start":348,"line_end":348,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24767,"byte_end":24770,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24775,"byte_end":24786,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24791,"byte_end":24820,"line_start":351,"line_end":351,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24825,"byte_end":24886,"line_start":352,"line_end":352,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24891,"byte_end":24952,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).sunday_based_week(), 52);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":24957,"byte_end":25019,"line_start":354,"line_end":354,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25024,"byte_end":25085,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25090,"byte_end":25097,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25745,"byte_end":25762,"line_start":372,"line_end":372,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<Date>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25255,"byte_end":25319,"line_start":361,"line_end":361,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25324,"byte_end":25327,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25332,"byte_end":25392,"line_start":363,"line_end":363,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25397,"byte_end":25400,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25405,"byte_end":25416,"line_start":365,"line_end":365,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25421,"byte_end":25450,"line_start":366,"line_end":366,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25455,"byte_end":25516,"line_start":367,"line_end":367,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25521,"byte_end":25582,"line_start":368,"line_end":368,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).monday_based_week(), 52);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25587,"byte_end":25649,"line_start":369,"line_end":369,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25654,"byte_end":25715,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25720,"byte_end":25727,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26138,"byte_end":26154,"line_start":385,"line_end":385,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<Date>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25885,"byte_end":25918,"line_start":376,"line_end":376,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25923,"byte_end":25926,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25931,"byte_end":25942,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25947,"byte_end":25985,"line_start":379,"line_end":379,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":25990,"byte_end":26005,"line_start":380,"line_end":380,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).to_calendar_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26010,"byte_end":26059,"line_start":381,"line_end":381,"column_start":5,"column_end":54}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26064,"byte_end":26097,"line_start":382,"line_end":382,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26102,"byte_end":26108,"line_start":383,"line_end":383,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26113,"byte_end":26120,"line_start":384,"line_end":384,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26473,"byte_end":26488,"line_start":396,"line_end":396,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<Date>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26273,"byte_end":26313,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26318,"byte_end":26321,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26326,"byte_end":26337,"line_start":392,"line_end":392,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26342,"byte_end":26371,"line_start":393,"line_end":393,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_ordinal_date(), (2019, 1));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26376,"byte_end":26443,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26448,"byte_end":26455,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27196,"byte_end":27212,"line_start":416,"line_end":416,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<Date>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26560,"byte_end":26612,"line_start":400,"line_end":400,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26617,"byte_end":26620,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26625,"byte_end":26636,"line_start":402,"line_end":402,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26641,"byte_end":26684,"line_start":403,"line_end":403,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_iso_week_date(), (2019, 1, Tuesday));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26689,"byte_end":26766,"line_start":404,"line_end":404,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).to_iso_week_date(), (2019, 40, Friday));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26771,"byte_end":26848,"line_start":405,"line_end":405,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26853,"byte_end":26868,"line_start":406,"line_end":406,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26873,"byte_end":26922,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26927,"byte_end":26955,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26960,"byte_end":26966,"line_start":409,"line_end":409,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26971,"byte_end":26986,"line_start":410,"line_end":410,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":26991,"byte_end":27040,"line_start":411,"line_end":411,"column_start":5,"column_end":54}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27045,"byte_end":27073,"line_start":412,"line_end":412,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27078,"byte_end":27084,"line_start":413,"line_end":413,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).to_iso_week_date(), (2020, 53, Friday));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27089,"byte_end":27166,"line_start":414,"line_end":414,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27171,"byte_end":27178,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28484,"byte_end":28491,"line_start":444,"line_end":444,"column_start":18,"column_end":25},"name":"weekday","qualname":"<Date>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27621,"byte_end":27641,"line_start":427,"line_end":427,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27646,"byte_end":27649,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27654,"byte_end":27665,"line_start":429,"line_end":429,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27670,"byte_end":27713,"line_start":430,"line_end":430,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).weekday(), Tuesday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27718,"byte_end":27775,"line_start":431,"line_end":431,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 02 - 01).weekday(), Friday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27780,"byte_end":27836,"line_start":432,"line_end":432,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 03 - 01).weekday(), Friday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27841,"byte_end":27897,"line_start":433,"line_end":433,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 04 - 01).weekday(), Monday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27902,"byte_end":27958,"line_start":434,"line_end":434,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 05 - 01).weekday(), Wednesday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":27963,"byte_end":28022,"line_start":435,"line_end":435,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(date!(2019 - 06 - 01).weekday(), Saturday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28027,"byte_end":28085,"line_start":436,"line_end":436,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 07 - 01).weekday(), Monday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28090,"byte_end":28146,"line_start":437,"line_end":437,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 08 - 01).weekday(), Thursday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28151,"byte_end":28209,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 09 - 01).weekday(), Sunday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28214,"byte_end":28270,"line_start":439,"line_end":439,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 10 - 01).weekday(), Tuesday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28275,"byte_end":28332,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 11 - 01).weekday(), Friday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28337,"byte_end":28393,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 12 - 01).weekday(), Sunday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28398,"byte_end":28454,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28459,"byte_end":28466,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29375,"byte_end":29383,"line_start":474,"line_end":474,"column_start":18,"column_end":26},"name":"next_day","qualname":"<Date>::next_day","value":"pub const fn next_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the next calendar date.","sig":null,"attributes":[{"value":"/ Get the next calendar date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28849,"byte_end":28880,"line_start":456,"line_end":456,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28885,"byte_end":28888,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28893,"byte_end":28904,"line_start":458,"line_end":458,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28909,"byte_end":28946,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28951,"byte_end":28966,"line_start":460,"line_end":460,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).next_day(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":28971,"byte_end":29012,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 01 - 02))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29017,"byte_end":29052,"line_start":462,"line_end":462,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29057,"byte_end":29063,"line_start":463,"line_end":463,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29068,"byte_end":29083,"line_start":464,"line_end":464,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 31).next_day(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29088,"byte_end":29129,"line_start":465,"line_end":465,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 02 - 01))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29134,"byte_end":29169,"line_start":466,"line_end":466,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29174,"byte_end":29180,"line_start":467,"line_end":467,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29185,"byte_end":29200,"line_start":468,"line_end":468,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 12 - 31).next_day(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29205,"byte_end":29246,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2020 - 01 - 01))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29251,"byte_end":29286,"line_start":470,"line_end":470,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29291,"byte_end":29297,"line_start":471,"line_end":471,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MAX.next_day(), None);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29302,"byte_end":29345,"line_start":472,"line_end":472,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29350,"byte_end":29357,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30343,"byte_end":30355,"line_start":506,"line_end":506,"column_start":18,"column_end":30},"name":"previous_day","qualname":"<Date>::previous_day","value":"pub const fn previous_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the previous calendar date.","sig":null,"attributes":[{"value":"/ Get the previous calendar date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29797,"byte_end":29832,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29837,"byte_end":29840,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29845,"byte_end":29856,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29861,"byte_end":29898,"line_start":491,"line_end":491,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29903,"byte_end":29918,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 02).previous_day(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29923,"byte_end":29968,"line_start":493,"line_end":493,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 01))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":29973,"byte_end":30008,"line_start":494,"line_end":494,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30013,"byte_end":30019,"line_start":495,"line_end":495,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30024,"byte_end":30039,"line_start":496,"line_end":496,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 02 - 01).previous_day(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30044,"byte_end":30089,"line_start":497,"line_end":497,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 31))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30094,"byte_end":30129,"line_start":498,"line_end":498,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30134,"byte_end":30140,"line_start":499,"line_end":499,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30145,"byte_end":30160,"line_start":500,"line_end":500,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).previous_day(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30165,"byte_end":30210,"line_start":501,"line_end":501,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 12 - 31))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30215,"byte_end":30250,"line_start":502,"line_end":502,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30255,"byte_end":30261,"line_start":503,"line_end":503,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MIN.previous_day(), None);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30266,"byte_end":30313,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30318,"byte_end":30325,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31350,"byte_end":31363,"line_start":533,"line_end":533,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<Date>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30745,"byte_end":30781,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30786,"byte_end":30789,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30794,"byte_end":30888,"line_start":523,"line_end":523,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30893,"byte_end":30989,"line_start":524,"line_end":524,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":30994,"byte_end":30997,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31002,"byte_end":31013,"line_start":526,"line_end":526,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31018,"byte_end":31047,"line_start":527,"line_end":527,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(-4713 - 11 - 24).to_julian_day(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31052,"byte_end":31110,"line_start":528,"line_end":528,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2000 - 01 - 01).to_julian_day(), 2_451_545);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31115,"byte_end":31180,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_julian_day(), 2_458_485);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31185,"byte_end":31250,"line_start":530,"line_end":530,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).to_julian_day(), 2_458_849);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31255,"byte_end":31320,"line_start":531,"line_end":531,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31325,"byte_end":31332,"line_start":532,"line_end":532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32041,"byte_end":32049,"line_start":554,"line_end":554,"column_start":18,"column_end":26},"name":"midnight","qualname":"<Date>::midnight","value":"pub const fn midnight(Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set\n to midnight.","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31748,"byte_end":31842,"line_start":547,"line_end":547,"column_start":5,"column_end":99}},{"value":"/ to midnight.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31847,"byte_end":31863,"line_start":548,"line_end":548,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31868,"byte_end":31871,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31876,"byte_end":31887,"line_start":550,"line_end":550,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31892,"byte_end":31933,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(date!(1970-01-01).midnight(), datetime!(1970-01-01 0:00));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31938,"byte_end":32011,"line_start":552,"line_end":552,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32016,"byte_end":32023,"line_start":553,"line_end":553,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32459,"byte_end":32468,"line_start":567,"line_end":567,"column_start":18,"column_end":27},"name":"with_time","qualname":"<Date>::with_time","value":"pub const fn with_time(Self, Time) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32143,"byte_end":32228,"line_start":558,"line_end":558,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32233,"byte_end":32236,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32241,"byte_end":32252,"line_start":560,"line_end":560,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, time};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32257,"byte_end":32304,"line_start":561,"line_end":561,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32309,"byte_end":32324,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     date!(1970-01-01).with_time(time!(0:00)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32329,"byte_end":32378,"line_start":563,"line_end":563,"column_start":5,"column_end":54}},{"value":"/     datetime!(1970-01-01 0:00),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32383,"byte_end":32418,"line_start":564,"line_end":564,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32423,"byte_end":32429,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32434,"byte_end":32441,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32878,"byte_end":32886,"line_start":578,"line_end":578,"column_start":18,"column_end":26},"name":"with_hms","qualname":"<Date>::with_hms","value":"pub const fn with_hms(Self, u8, u8, u8)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32564,"byte_end":32656,"line_start":571,"line_end":571,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32661,"byte_end":32664,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32669,"byte_end":32680,"line_start":573,"line_end":573,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32685,"byte_end":32714,"line_start":574,"line_end":574,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(0, 0, 0).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32719,"byte_end":32780,"line_start":575,"line_end":575,"column_start":5,"column_end":66}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(24, 0, 0).is_err());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32785,"byte_end":32848,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":32853,"byte_end":32860,"line_start":577,"line_end":577,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33489,"byte_end":33503,"line_start":597,"line_end":597,"column_start":18,"column_end":32},"name":"with_hms_milli","qualname":"<Date>::with_hms_milli","value":"pub const fn with_hms_milli(Self, u8, u8, u8, u16)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33157,"byte_end":33249,"line_start":590,"line_end":590,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33254,"byte_end":33257,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33262,"byte_end":33273,"line_start":592,"line_end":592,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33278,"byte_end":33307,"line_start":593,"line_end":593,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(0, 0, 0, 0).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33312,"byte_end":33382,"line_start":594,"line_end":594,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(24, 0, 0, 0).is_err());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33387,"byte_end":33459,"line_start":595,"line_end":595,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33464,"byte_end":33471,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34151,"byte_end":34165,"line_start":617,"line_end":617,"column_start":18,"column_end":32},"name":"with_hms_micro","qualname":"<Date>::with_hms_micro","value":"pub const fn with_hms_micro(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33819,"byte_end":33911,"line_start":610,"line_end":610,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33916,"byte_end":33919,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33924,"byte_end":33935,"line_start":612,"line_end":612,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33940,"byte_end":33969,"line_start":613,"line_end":613,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(0, 0, 0, 0).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":33974,"byte_end":34044,"line_start":614,"line_end":614,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(24, 0, 0, 0).is_err());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34049,"byte_end":34121,"line_start":615,"line_end":615,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34126,"byte_end":34133,"line_start":616,"line_end":616,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34811,"byte_end":34824,"line_start":637,"line_end":637,"column_start":18,"column_end":31},"name":"with_hms_nano","qualname":"<Date>::with_hms_nano","value":"pub const fn with_hms_nano(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34481,"byte_end":34573,"line_start":630,"line_end":630,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34578,"byte_end":34581,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34586,"byte_end":34597,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34602,"byte_end":34631,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(0, 0, 0, 0).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34636,"byte_end":34705,"line_start":634,"line_end":634,"column_start":5,"column_end":74}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(24, 0, 0, 0).is_err());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34710,"byte_end":34781,"line_start":635,"line_end":635,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":34786,"byte_end":34793,"line_start":636,"line_end":636,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35402,"byte_end":35413,"line_start":657,"line_end":657,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Date>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable: Formattable>(Self, &mut impl io::Write,\n                                                  &impl Formattable)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35301,"byte_end":35390,"line_start":656,"line_end":656,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35986,"byte_end":35992,"line_start":673,"line_end":673,"column_start":12,"column_end":18},"name":"format","qualname":"<Date>::format","value":"pub fn format<impl Formattable: Formattable>(Self, &impl Formattable)\n-> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35611,"byte_end":35700,"line_start":665,"line_end":665,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35705,"byte_end":35708,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35713,"byte_end":35724,"line_start":667,"line_end":667,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35729,"byte_end":35780,"line_start":668,"line_end":668,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35785,"byte_end":35853,"line_start":669,"line_end":669,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(date!(2020 - 01 - 02).format(&format)?, \"2020-01-02\");","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35858,"byte_end":35927,"line_start":670,"line_end":670,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35932,"byte_end":35962,"line_start":671,"line_end":671,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35967,"byte_end":35974,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1342},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39674,"byte_end":39682,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"Duration","qualname":"::duration::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"decl_id":null,"docs":" A span of time with nanosecond precision.","sig":null,"attributes":[{"value":"/ A span of time with nanosecond precision.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39336,"byte_end":39381,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39382,"byte_end":39385,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Each `Duration` is composed of a whole number of seconds and a fractional part represented in","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39386,"byte_end":39483,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ nanoseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39484,"byte_end":39500,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39501,"byte_end":39504,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for negative durations, unlike [`core::time::Duration`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39505,"byte_end":39592,"line_start":31,"line_end":31,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":180},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40457,"byte_end":40461,"line_start":59,"line_end":59,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::duration::Duration::ZERO","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `0.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `0.seconds()`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40269,"byte_end":40301,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40306,"byte_end":40309,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40314,"byte_end":40325,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40330,"byte_end":40381,"line_start":56,"line_end":56,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::ZERO, 0.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40386,"byte_end":40430,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40435,"byte_end":40442,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":181},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40695,"byte_end":40705,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"name":"NANOSECOND","qualname":"::duration::Duration::NANOSECOND","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.nanoseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.nanoseconds()`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40493,"byte_end":40529,"line_start":61,"line_end":61,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40534,"byte_end":40537,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40542,"byte_end":40553,"line_start":63,"line_end":63,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40558,"byte_end":40609,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::NANOSECOND, 1.nanoseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40614,"byte_end":40668,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40673,"byte_end":40680,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":182},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40946,"byte_end":40957,"line_start":75,"line_end":75,"column_start":15,"column_end":26},"name":"MICROSECOND","qualname":"::duration::Duration::MICROSECOND","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.microseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.microseconds()`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40741,"byte_end":40778,"line_start":69,"line_end":69,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40783,"byte_end":40786,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40791,"byte_end":40802,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40807,"byte_end":40858,"line_start":72,"line_end":72,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MICROSECOND, 1.microseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40863,"byte_end":40919,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40924,"byte_end":40931,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":183},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41199,"byte_end":41210,"line_start":83,"line_end":83,"column_start":15,"column_end":26},"name":"MILLISECOND","qualname":"::duration::Duration::MILLISECOND","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.milliseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.milliseconds()`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40994,"byte_end":41031,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41036,"byte_end":41039,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41044,"byte_end":41055,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41060,"byte_end":41111,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MILLISECOND, 1.milliseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41116,"byte_end":41172,"line_start":81,"line_end":81,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41177,"byte_end":41184,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":184},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41437,"byte_end":41443,"line_start":91,"line_end":91,"column_start":15,"column_end":21},"name":"SECOND","qualname":"::duration::Duration::SECOND","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.seconds()`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41247,"byte_end":41279,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41284,"byte_end":41287,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41292,"byte_end":41303,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41308,"byte_end":41359,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::SECOND, 1.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41364,"byte_end":41410,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41415,"byte_end":41422,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":185},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41665,"byte_end":41671,"line_start":99,"line_end":99,"column_start":15,"column_end":21},"name":"MINUTE","qualname":"::duration::Duration::MINUTE","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.minutes()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.minutes()`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41475,"byte_end":41507,"line_start":93,"line_end":93,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41512,"byte_end":41515,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41520,"byte_end":41531,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41536,"byte_end":41587,"line_start":96,"line_end":96,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MINUTE, 1.minutes());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41592,"byte_end":41638,"line_start":97,"line_end":97,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41643,"byte_end":41650,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41887,"byte_end":41891,"line_start":107,"line_end":107,"column_start":15,"column_end":19},"name":"HOUR","qualname":"::duration::Duration::HOUR","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.hours()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.hours()`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41703,"byte_end":41733,"line_start":101,"line_end":101,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41738,"byte_end":41741,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41746,"byte_end":41757,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41762,"byte_end":41813,"line_start":104,"line_end":104,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::HOUR, 1.hours());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41818,"byte_end":41860,"line_start":105,"line_end":105,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41865,"byte_end":41872,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":187},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42102,"byte_end":42105,"line_start":115,"line_end":115,"column_start":15,"column_end":18},"name":"DAY","qualname":"::duration::Duration::DAY","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.days()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.days()`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41921,"byte_end":41950,"line_start":109,"line_end":109,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41955,"byte_end":41958,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41963,"byte_end":41974,"line_start":111,"line_end":111,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":41979,"byte_end":42030,"line_start":112,"line_end":112,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::DAY, 1.days());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42035,"byte_end":42075,"line_start":113,"line_end":113,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42080,"byte_end":42087,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":188},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42318,"byte_end":42322,"line_start":123,"line_end":123,"column_start":15,"column_end":19},"name":"WEEK","qualname":"::duration::Duration::WEEK","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Equivalent to `1.weeks()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.weeks()`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42134,"byte_end":42164,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42169,"byte_end":42172,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42177,"byte_end":42188,"line_start":119,"line_end":119,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42193,"byte_end":42244,"line_start":120,"line_end":120,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::WEEK, 1.weeks());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42249,"byte_end":42291,"line_start":121,"line_end":121,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42296,"byte_end":42303,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":189},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42462,"byte_end":42465,"line_start":126,"line_end":126,"column_start":15,"column_end":18},"name":"MIN","qualname":"::duration::Duration::MIN","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" The minimum possible duration. Adding any negative duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The minimum possible duration. Adding any negative duration to this will cause an overflow.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42352,"byte_end":42447,"line_start":125,"line_end":125,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42634,"byte_end":42637,"line_start":129,"line_end":129,"column_start":15,"column_end":18},"name":"MAX","qualname":"::duration::Duration::MAX","value":"Self","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" The maximum possible duration. Adding any positive duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The maximum possible duration. Adding any positive duration to this will cause an overflow.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42524,"byte_end":42619,"line_start":128,"line_end":128,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42970,"byte_end":42977,"line_start":140,"line_end":140,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Duration>::is_zero","value":"pub const fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is exactly zero.","sig":null,"attributes":[{"value":"/ Check if a duration is exactly zero.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42747,"byte_end":42787,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42792,"byte_end":42795,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42800,"byte_end":42811,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42816,"byte_end":42855,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ assert!(0.seconds().is_zero());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42860,"byte_end":42895,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/ assert!(!1.nanoseconds().is_zero());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42900,"byte_end":42940,"line_start":138,"line_end":138,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":42945,"byte_end":42952,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43327,"byte_end":43338,"line_start":152,"line_end":152,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<Duration>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is negative.","sig":null,"attributes":[{"value":"/ Check if a duration is negative.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43056,"byte_end":43092,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43097,"byte_end":43100,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43105,"byte_end":43116,"line_start":146,"line_end":146,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43121,"byte_end":43160,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/ assert!((-1).seconds().is_negative());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43165,"byte_end":43207,"line_start":148,"line_end":148,"column_start":5,"column_end":47}},{"value":"/ assert!(!0.seconds().is_negative());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43212,"byte_end":43252,"line_start":149,"line_end":149,"column_start":5,"column_end":45}},{"value":"/ assert!(!1.seconds().is_negative());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43257,"byte_end":43297,"line_start":150,"line_end":150,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43302,"byte_end":43309,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43686,"byte_end":43697,"line_start":164,"line_end":164,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<Duration>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is positive.","sig":null,"attributes":[{"value":"/ Check if a duration is positive.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43415,"byte_end":43451,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43456,"byte_end":43459,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43464,"byte_end":43475,"line_start":158,"line_end":158,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43480,"byte_end":43519,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/ assert!(1.seconds().is_positive());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43524,"byte_end":43563,"line_start":160,"line_end":160,"column_start":5,"column_end":44}},{"value":"/ assert!(!0.seconds().is_positive());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43568,"byte_end":43608,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/ assert!(!(-1).seconds().is_positive());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43613,"byte_end":43656,"line_start":162,"line_end":162,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43661,"byte_end":43668,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":44209,"byte_end":44212,"line_start":180,"line_end":180,"column_start":18,"column_end":21},"name":"abs","qualname":"<Duration>::abs","value":"pub const fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the absolute value of the duration.","sig":null,"attributes":[{"value":"/ Get the absolute value of the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43820,"byte_end":43863,"line_start":170,"line_end":170,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43868,"byte_end":43871,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This method saturates the returned value if it would otherwise overflow.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43876,"byte_end":43952,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43957,"byte_end":43960,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43965,"byte_end":43976,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":43981,"byte_end":44020,"line_start":175,"line_end":175,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().abs(), 1.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":44025,"byte_end":44072,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(0.seconds().abs(), 0.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":44077,"byte_end":44124,"line_start":177,"line_end":177,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().abs(), 1.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":44129,"byte_end":44179,"line_start":178,"line_end":178,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":44184,"byte_end":44191,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45579,"byte_end":45582,"line_start":213,"line_end":213,"column_start":18,"column_end":21},"name":"new","qualname":"<Duration>::new","value":"pub const fn new(i64, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at\n least ±10<sup>9</sup>, it will wrap to the number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45129,"byte_end":45220,"line_start":204,"line_end":204,"column_start":5,"column_end":96}},{"value":"/ least ±10<sup>9</sup>, it will wrap to the number of seconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45225,"byte_end":45291,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45296,"byte_end":45299,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45304,"byte_end":45315,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45320,"byte_end":45371,"line_start":208,"line_end":208,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::new(1, 0), 1.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45376,"byte_end":45425,"line_start":209,"line_end":209,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Duration::new(-1, 0), (-1).seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45430,"byte_end":45483,"line_start":210,"line_end":210,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Duration::new(1, 2_000_000_000), 3.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45488,"byte_end":45549,"line_start":211,"line_end":211,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":45554,"byte_end":45561,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46318,"byte_end":46323,"line_start":235,"line_end":235,"column_start":18,"column_end":23},"name":"weeks","qualname":"<Duration>::weeks","value":"pub const fn weeks(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of weeks. Equivalent to\n `Duration::seconds(weeks * 604_800)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of weeks. Equivalent to","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46030,"byte_end":46103,"line_start":228,"line_end":228,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(weeks * 604_800)`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46108,"byte_end":46149,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46154,"byte_end":46157,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46162,"byte_end":46173,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46178,"byte_end":46229,"line_start":232,"line_end":232,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::weeks(1), 604_800.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46234,"byte_end":46288,"line_start":233,"line_end":233,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46293,"byte_end":46300,"line_start":234,"line_end":234,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46679,"byte_end":46683,"line_start":246,"line_end":246,"column_start":18,"column_end":22},"name":"days","qualname":"<Duration>::days","value":"pub const fn days(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of days. Equivalent to\n `Duration::seconds(days * 86_400)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of days. Equivalent to","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46396,"byte_end":46468,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ `Duration::seconds(days * 86_400)`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46473,"byte_end":46512,"line_start":240,"line_end":240,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46517,"byte_end":46520,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46525,"byte_end":46536,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46541,"byte_end":46592,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::days(1), 86_400.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46597,"byte_end":46649,"line_start":244,"line_end":244,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46654,"byte_end":46661,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47037,"byte_end":47042,"line_start":257,"line_end":257,"column_start":18,"column_end":23},"name":"hours","qualname":"<Duration>::hours","value":"pub const fn hours(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of hours. Equivalent to\n `Duration::seconds(hours * 3_600)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of hours. Equivalent to","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46753,"byte_end":46826,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(hours * 3_600)`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46831,"byte_end":46870,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46875,"byte_end":46878,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46883,"byte_end":46894,"line_start":253,"line_end":253,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46899,"byte_end":46950,"line_start":254,"line_end":254,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::hours(1), 3_600.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":46955,"byte_end":47007,"line_start":255,"line_end":255,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47012,"byte_end":47019,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47397,"byte_end":47404,"line_start":268,"line_end":268,"column_start":18,"column_end":25},"name":"minutes","qualname":"<Duration>::minutes","value":"pub const fn minutes(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of minutes. Equivalent to\n `Duration::seconds(minutes * 60)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of minutes. Equivalent to","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47113,"byte_end":47188,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ `Duration::seconds(minutes * 60)`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47193,"byte_end":47231,"line_start":262,"line_end":262,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47236,"byte_end":47239,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47244,"byte_end":47255,"line_start":264,"line_end":264,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47260,"byte_end":47311,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::minutes(1), 60.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47316,"byte_end":47367,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47372,"byte_end":47379,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47711,"byte_end":47718,"line_start":278,"line_end":278,"column_start":18,"column_end":25},"name":"seconds","qualname":"<Duration>::seconds","value":"pub const fn seconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of seconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47476,"byte_end":47537,"line_start":272,"line_end":272,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47542,"byte_end":47545,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47550,"byte_end":47561,"line_start":274,"line_end":274,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47566,"byte_end":47617,"line_start":275,"line_end":275,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds(1), 1_000.milliseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47622,"byte_end":47681,"line_start":276,"line_end":276,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47686,"byte_end":47693,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48113,"byte_end":48124,"line_start":289,"line_end":289,"column_start":12,"column_end":23},"name":"seconds_f64","qualname":"<Duration>::seconds_f64","value":"pub fn seconds_f64(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f64`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f64`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47794,"byte_end":47881,"line_start":282,"line_end":282,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47886,"byte_end":47889,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47894,"byte_end":47905,"line_start":284,"line_end":284,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47910,"byte_end":47961,"line_start":285,"line_end":285,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f64(0.5), 0.5.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":47966,"byte_end":48024,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f64(-0.5), -0.5.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48029,"byte_end":48089,"line_start":287,"line_end":287,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48094,"byte_end":48101,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48563,"byte_end":48574,"line_start":300,"line_end":300,"column_start":12,"column_end":23},"name":"seconds_f32","qualname":"<Duration>::seconds_f32","value":"pub fn seconds_f32(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f32`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f32`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48242,"byte_end":48329,"line_start":293,"line_end":293,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48334,"byte_end":48337,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48342,"byte_end":48353,"line_start":295,"line_end":295,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48358,"byte_end":48409,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f32(0.5), 0.5.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48414,"byte_end":48472,"line_start":297,"line_end":297,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f32(-0.5), (-0.5).seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48477,"byte_end":48539,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48544,"byte_end":48551,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49010,"byte_end":49022,"line_start":311,"line_end":311,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"pub const fn milliseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of milliseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of milliseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48692,"byte_end":48758,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48763,"byte_end":48766,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48771,"byte_end":48782,"line_start":306,"line_end":306,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48787,"byte_end":48838,"line_start":307,"line_end":307,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::milliseconds(1), 1_000.microseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48843,"byte_end":48907,"line_start":308,"line_end":308,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::milliseconds(-1), (-1_000).microseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48912,"byte_end":48980,"line_start":309,"line_end":309,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":48985,"byte_end":48992,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49507,"byte_end":49519,"line_start":325,"line_end":325,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Duration>::microseconds","value":"pub const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of microseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of microseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49191,"byte_end":49257,"line_start":318,"line_end":318,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49262,"byte_end":49265,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49270,"byte_end":49281,"line_start":320,"line_end":320,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49286,"byte_end":49337,"line_start":321,"line_end":321,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::microseconds(1), 1_000.nanoseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49342,"byte_end":49405,"line_start":322,"line_end":322,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::microseconds(-1), (-1_000).nanoseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49410,"byte_end":49477,"line_start":323,"line_end":323,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49482,"byte_end":49489,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":50015,"byte_end":50026,"line_start":339,"line_end":339,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"pub const fn nanoseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of nanoseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of nanoseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49692,"byte_end":49757,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49762,"byte_end":49765,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49770,"byte_end":49781,"line_start":334,"line_end":334,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49786,"byte_end":49837,"line_start":335,"line_end":335,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::nanoseconds(1), 1.microseconds() / 1_000);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49842,"byte_end":49909,"line_start":336,"line_end":336,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Duration::nanoseconds(-1), (-1).microseconds() / 1_000);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49914,"byte_end":49985,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":49990,"byte_end":49997,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51025,"byte_end":51036,"line_start":368,"line_end":368,"column_start":18,"column_end":29},"name":"whole_weeks","qualname":"<Duration>::whole_weeks","value":"pub const fn whole_weeks(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole weeks in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole weeks in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":50680,"byte_end":50730,"line_start":359,"line_end":359,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":50735,"byte_end":50738,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":50743,"byte_end":50754,"line_start":361,"line_end":361,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":50759,"byte_end":50798,"line_start":362,"line_end":362,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.weeks().whole_weeks(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":50803,"byte_end":50846,"line_start":363,"line_end":363,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).weeks().whole_weeks(), -1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":50851,"byte_end":50898,"line_start":364,"line_end":364,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(6.days().whole_weeks(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":50903,"byte_end":50945,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((-6).days().whole_weeks(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":50950,"byte_end":50995,"line_start":366,"line_end":366,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51000,"byte_end":51007,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51444,"byte_end":51454,"line_start":381,"line_end":381,"column_start":18,"column_end":28},"name":"whole_days","qualname":"<Duration>::whole_days","value":"pub const fn whole_days(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole days in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole days in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51102,"byte_end":51151,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51156,"byte_end":51159,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51164,"byte_end":51175,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51180,"byte_end":51219,"line_start":375,"line_end":375,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.days().whole_days(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51224,"byte_end":51265,"line_start":376,"line_end":376,"column_start":5,"column_end":46}},{"value":"/ assert_eq!((-1).days().whole_days(), -1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51270,"byte_end":51315,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(23.hours().whole_days(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51320,"byte_end":51363,"line_start":378,"line_end":378,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-23).hours().whole_days(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51368,"byte_end":51414,"line_start":379,"line_end":379,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51419,"byte_end":51426,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51872,"byte_end":51883,"line_start":394,"line_end":394,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<Duration>::whole_hours","value":"pub const fn whole_hours(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole hours in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole hours in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51519,"byte_end":51569,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51574,"byte_end":51577,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51582,"byte_end":51593,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51598,"byte_end":51637,"line_start":388,"line_end":388,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.hours().whole_hours(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51642,"byte_end":51685,"line_start":389,"line_end":389,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).hours().whole_hours(), -1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51690,"byte_end":51737,"line_start":390,"line_end":390,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(59.minutes().whole_hours(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51742,"byte_end":51788,"line_start":391,"line_end":391,"column_start":5,"column_end":51}},{"value":"/ assert_eq!((-59).minutes().whole_hours(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51793,"byte_end":51842,"line_start":392,"line_end":392,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51847,"byte_end":51854,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52314,"byte_end":52327,"line_start":407,"line_end":407,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<Duration>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole minutes in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole minutes in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":51947,"byte_end":51999,"line_start":398,"line_end":398,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52004,"byte_end":52007,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52012,"byte_end":52023,"line_start":400,"line_end":400,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52028,"byte_end":52067,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.minutes().whole_minutes(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52072,"byte_end":52119,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).minutes().whole_minutes(), -1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52124,"byte_end":52175,"line_start":403,"line_end":403,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(59.seconds().whole_minutes(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52180,"byte_end":52228,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-59).seconds().whole_minutes(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52233,"byte_end":52284,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52289,"byte_end":52296,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52756,"byte_end":52769,"line_start":420,"line_end":420,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<Duration>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole seconds in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52388,"byte_end":52440,"line_start":411,"line_end":411,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52445,"byte_end":52448,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52453,"byte_end":52464,"line_start":413,"line_end":413,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52469,"byte_end":52508,"line_start":414,"line_end":414,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_seconds(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52513,"byte_end":52560,"line_start":415,"line_end":415,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().whole_seconds(), -1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52565,"byte_end":52616,"line_start":416,"line_end":416,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(1.minutes().whole_seconds(), 60);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52621,"byte_end":52669,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-1).minutes().whole_seconds(), -60);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52674,"byte_end":52726,"line_start":418,"line_end":418,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52731,"byte_end":52738,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53084,"byte_end":53098,"line_start":431,"line_end":431,"column_start":12,"column_end":26},"name":"as_seconds_f64","qualname":"<Duration>::as_seconds_f64","value":"pub fn as_seconds_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52817,"byte_end":52874,"line_start":424,"line_end":424,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52879,"byte_end":52882,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52887,"byte_end":52898,"line_start":426,"line_end":426,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52903,"byte_end":52942,"line_start":427,"line_end":427,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f64(), 1.5);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":52947,"byte_end":52999,"line_start":428,"line_end":428,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f64(), -1.5);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53004,"byte_end":53060,"line_start":429,"line_end":429,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53065,"byte_end":53072,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53463,"byte_end":53477,"line_start":442,"line_end":442,"column_start":12,"column_end":26},"name":"as_seconds_f32","qualname":"<Duration>::as_seconds_f32","value":"pub fn as_seconds_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53196,"byte_end":53253,"line_start":435,"line_end":435,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53258,"byte_end":53261,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53266,"byte_end":53277,"line_start":437,"line_end":437,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53282,"byte_end":53321,"line_start":438,"line_end":438,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f32(), 1.5);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53326,"byte_end":53378,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f32(), -1.5);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53383,"byte_end":53439,"line_start":440,"line_end":440,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53444,"byte_end":53451,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53984,"byte_end":54002,"line_start":455,"line_end":455,"column_start":18,"column_end":36},"name":"whole_milliseconds","qualname":"<Duration>::whole_milliseconds","value":"pub const fn whole_milliseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole milliseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole milliseconds in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53575,"byte_end":53632,"line_start":446,"line_end":446,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53637,"byte_end":53640,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53645,"byte_end":53656,"line_start":448,"line_end":448,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53661,"byte_end":53700,"line_start":449,"line_end":449,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_milliseconds(), 1_000);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53705,"byte_end":53761,"line_start":450,"line_end":450,"column_start":5,"column_end":61}},{"value":"/ assert_eq!((-1).seconds().whole_milliseconds(), -1_000);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53766,"byte_end":53826,"line_start":451,"line_end":451,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(1.milliseconds().whole_milliseconds(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53831,"byte_end":53888,"line_start":452,"line_end":452,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).milliseconds().whole_milliseconds(), -1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53893,"byte_end":53954,"line_start":453,"line_end":453,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":53959,"byte_end":53966,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54525,"byte_end":54544,"line_start":469,"line_end":469,"column_start":18,"column_end":37},"name":"subsec_milliseconds","qualname":"<Duration>::subsec_milliseconds","value":"pub const fn subsec_milliseconds(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of milliseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of milliseconds past the number of whole seconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54106,"byte_end":54174,"line_start":459,"line_end":459,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54179,"byte_end":54182,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000..1_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54187,"byte_end":54227,"line_start":461,"line_end":461,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54232,"byte_end":54235,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54240,"byte_end":54251,"line_start":463,"line_end":463,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54256,"byte_end":54295,"line_start":464,"line_end":464,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.4.seconds().subsec_milliseconds(), 400);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54300,"byte_end":54357,"line_start":465,"line_end":465,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1.4).seconds().subsec_milliseconds(), -400);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54362,"byte_end":54423,"line_start":466,"line_end":466,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54428,"byte_end":54435,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55034,"byte_end":55052,"line_start":482,"line_end":482,"column_start":18,"column_end":36},"name":"whole_microseconds","qualname":"<Duration>::whole_microseconds","value":"pub const fn whole_microseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole microseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole microseconds in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54615,"byte_end":54672,"line_start":473,"line_end":473,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54677,"byte_end":54680,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54685,"byte_end":54696,"line_start":475,"line_end":475,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54701,"byte_end":54740,"line_start":476,"line_end":476,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.milliseconds().whole_microseconds(), 1_000);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54745,"byte_end":54806,"line_start":477,"line_end":477,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((-1).milliseconds().whole_microseconds(), -1_000);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54811,"byte_end":54876,"line_start":478,"line_end":478,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.microseconds().whole_microseconds(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54881,"byte_end":54938,"line_start":479,"line_end":479,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).microseconds().whole_microseconds(), -1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":54943,"byte_end":55004,"line_start":480,"line_end":480,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55009,"byte_end":55016,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55517,"byte_end":55536,"line_start":495,"line_end":495,"column_start":18,"column_end":37},"name":"subsec_microseconds","qualname":"<Duration>::subsec_microseconds","value":"pub const fn subsec_microseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of microseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of microseconds past the number of whole seconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55156,"byte_end":55224,"line_start":486,"line_end":486,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55229,"byte_end":55232,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000_000..1_000_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55237,"byte_end":55285,"line_start":488,"line_end":488,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55290,"byte_end":55293,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55298,"byte_end":55309,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55314,"byte_end":55353,"line_start":491,"line_end":491,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.0004.seconds().subsec_microseconds(), 400);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55358,"byte_end":55418,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1.0004).seconds().subsec_microseconds(), -400);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55423,"byte_end":55487,"line_start":493,"line_end":493,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55492,"byte_end":55499,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56002,"byte_end":56019,"line_start":508,"line_end":508,"column_start":18,"column_end":35},"name":"whole_nanoseconds","qualname":"<Duration>::whole_nanoseconds","value":"pub const fn whole_nanoseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds in the duration.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55596,"byte_end":55646,"line_start":499,"line_end":499,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55651,"byte_end":55654,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55659,"byte_end":55670,"line_start":501,"line_end":501,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55675,"byte_end":55714,"line_start":502,"line_end":502,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.microseconds().whole_nanoseconds(), 1_000);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55719,"byte_end":55779,"line_start":503,"line_end":503,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).microseconds().whole_nanoseconds(), -1_000);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55784,"byte_end":55848,"line_start":504,"line_end":504,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(1.nanoseconds().whole_nanoseconds(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55853,"byte_end":55908,"line_start":505,"line_end":505,"column_start":5,"column_end":60}},{"value":"/ assert_eq!((-1).nanoseconds().whole_nanoseconds(), -1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55913,"byte_end":55972,"line_start":506,"line_end":506,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":55977,"byte_end":55984,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56526,"byte_end":56544,"line_start":521,"line_end":521,"column_start":18,"column_end":36},"name":"subsec_nanoseconds","qualname":"<Duration>::subsec_nanoseconds","value":"pub const fn subsec_nanoseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds past the number of whole seconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56119,"byte_end":56186,"line_start":512,"line_end":512,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56191,"byte_end":56194,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `-1_000_000_000..1_000_000_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56199,"byte_end":56282,"line_start":514,"line_end":514,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56287,"byte_end":56290,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56295,"byte_end":56306,"line_start":516,"line_end":516,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56311,"byte_end":56350,"line_start":517,"line_end":517,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.000_000_400.seconds().subsec_nanoseconds(), 400);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56355,"byte_end":56421,"line_start":518,"line_end":518,"column_start":5,"column_end":71}},{"value":"/ assert_eq!((-1.000_000_400).seconds().subsec_nanoseconds(), -400);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56426,"byte_end":56496,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56501,"byte_end":56508,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":57061,"byte_end":57072,"line_start":535,"line_end":535,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Duration>::checked_add","value":"pub const fn checked_add(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56655,"byte_end":56723,"line_start":527,"line_end":527,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56728,"byte_end":56731,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56736,"byte_end":56747,"line_start":529,"line_end":529,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56752,"byte_end":56803,"line_start":530,"line_end":530,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_add(5.seconds()), Some(10.seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56808,"byte_end":56881,"line_start":531,"line_end":531,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Duration::MAX.checked_add(1.nanoseconds()), None);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56886,"byte_end":56951,"line_start":532,"line_end":532,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((-5).seconds().checked_add(5.seconds()), Some(0.seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":56956,"byte_end":57031,"line_start":533,"line_end":533,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":57036,"byte_end":57043,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58111,"byte_end":58122,"line_start":558,"line_end":558,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"pub const fn checked_sub(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":57702,"byte_end":57770,"line_start":550,"line_end":550,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":57775,"byte_end":57778,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":57783,"byte_end":57794,"line_start":552,"line_end":552,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":57799,"byte_end":57850,"line_start":553,"line_end":553,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_sub(5.seconds()), Some(Duration::ZERO));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":57855,"byte_end":57930,"line_start":554,"line_end":554,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Duration::MIN.checked_sub(1.nanoseconds()), None);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":57935,"byte_end":58000,"line_start":555,"line_end":555,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(5.seconds().checked_sub(10.seconds()), Some((-5).seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58005,"byte_end":58081,"line_start":556,"line_end":556,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58086,"byte_end":58093,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58744,"byte_end":58755,"line_start":572,"line_end":572,"column_start":18,"column_end":29},"name":"checked_mul","qualname":"<Duration>::checked_mul","value":"pub const fn checked_mul(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58247,"byte_end":58315,"line_start":562,"line_end":562,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58320,"byte_end":58323,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58328,"byte_end":58339,"line_start":564,"line_end":564,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58344,"byte_end":58395,"line_start":565,"line_end":565,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_mul(2), Some(10.seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58400,"byte_end":58463,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(5.seconds().checked_mul(-2), Some((-10).seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58468,"byte_end":58535,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(5.seconds().checked_mul(0), Some(0.seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58540,"byte_end":58602,"line_start":568,"line_end":568,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.checked_mul(2), None);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58607,"byte_end":58658,"line_start":569,"line_end":569,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MIN.checked_mul(2), None);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58663,"byte_end":58714,"line_start":570,"line_end":570,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":58719,"byte_end":58726,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59692,"byte_end":59703,"line_start":593,"line_end":593,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Duration>::checked_div","value":"pub fn checked_div(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","sig":null,"attributes":[{"value":"/ Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59251,"byte_end":59341,"line_start":584,"line_end":584,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59346,"byte_end":59349,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59354,"byte_end":59365,"line_start":586,"line_end":586,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59370,"byte_end":59409,"line_start":587,"line_end":587,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(10.seconds().checked_div(2), Some(5.seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59414,"byte_end":59477,"line_start":588,"line_end":588,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(10.seconds().checked_div(-2), Some((-5).seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59482,"byte_end":59549,"line_start":589,"line_end":589,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(1.seconds().checked_div(0), None);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59554,"byte_end":59603,"line_start":590,"line_end":590,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59608,"byte_end":59615,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"allow(clippy :: missing_const_for_fn)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":59620,"byte_end":59658,"line_start":592,"line_end":592,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60733,"byte_end":60747,"line_start":616,"line_end":616,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Duration>::saturating_add","value":"pub const fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, saturating if an overflow occurred.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60205,"byte_end":60267,"line_start":604,"line_end":604,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60272,"byte_end":60275,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60280,"byte_end":60291,"line_start":606,"line_end":606,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60296,"byte_end":60347,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_add(5.seconds()), 10.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60352,"byte_end":60422,"line_start":608,"line_end":608,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Duration::MAX.saturating_add(1.nanoseconds()), Duration::MAX);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60427,"byte_end":60504,"line_start":609,"line_end":609,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60509,"byte_end":60524,"line_start":610,"line_end":610,"column_start":5,"column_end":20}},{"value":"/     Duration::MIN.saturating_add((-1).nanoseconds()),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60529,"byte_end":60586,"line_start":611,"line_end":611,"column_start":5,"column_end":62}},{"value":"/     Duration::MIN","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60591,"byte_end":60612,"line_start":612,"line_end":612,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60617,"byte_end":60623,"line_start":613,"line_end":613,"column_start":5,"column_end":11}},{"value":"/ assert_eq!((-5).seconds().saturating_add(5.seconds()), Duration::ZERO);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60628,"byte_end":60703,"line_start":614,"line_end":614,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":60708,"byte_end":60715,"line_start":615,"line_end":615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62215,"byte_end":62229,"line_start":655,"line_end":655,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Duration>::saturating_sub","value":"pub const fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, saturating if an overflow occurred.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":61687,"byte_end":61749,"line_start":643,"line_end":643,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":61754,"byte_end":61757,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":61762,"byte_end":61773,"line_start":645,"line_end":645,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":61778,"byte_end":61829,"line_start":646,"line_end":646,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_sub(5.seconds()), Duration::ZERO);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":61834,"byte_end":61906,"line_start":647,"line_end":647,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Duration::MIN.saturating_sub(1.nanoseconds()), Duration::MIN);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":61911,"byte_end":61988,"line_start":648,"line_end":648,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":61993,"byte_end":62008,"line_start":649,"line_end":649,"column_start":5,"column_end":20}},{"value":"/     Duration::MAX.saturating_sub((-1).nanoseconds()),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62013,"byte_end":62070,"line_start":650,"line_end":650,"column_start":5,"column_end":62}},{"value":"/     Duration::MAX","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62075,"byte_end":62096,"line_start":651,"line_end":651,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62101,"byte_end":62107,"line_start":652,"line_end":652,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(5.seconds().saturating_sub(10.seconds()), (-5).seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62112,"byte_end":62185,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62190,"byte_end":62197,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62996,"byte_end":63010,"line_start":671,"line_end":671,"column_start":18,"column_end":32},"name":"saturating_mul","qualname":"<Duration>::saturating_mul","value":"pub const fn saturating_mul(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, saturating if an overflow occurred.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62349,"byte_end":62411,"line_start":659,"line_end":659,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62416,"byte_end":62419,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62424,"byte_end":62435,"line_start":661,"line_end":661,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62440,"byte_end":62491,"line_start":662,"line_end":662,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_mul(2), 10.seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62496,"byte_end":62556,"line_start":663,"line_end":663,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(5.seconds().saturating_mul(-2), (-10).seconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62561,"byte_end":62625,"line_start":664,"line_end":664,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(5.seconds().saturating_mul(0), Duration::ZERO);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62630,"byte_end":62692,"line_start":665,"line_end":665,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(2), Duration::MAX);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62697,"byte_end":62760,"line_start":666,"line_end":666,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(2), Duration::MIN);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62765,"byte_end":62828,"line_start":667,"line_end":667,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(-2), Duration::MIN);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62833,"byte_end":62897,"line_start":668,"line_end":668,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(-2), Duration::MAX);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62902,"byte_end":62966,"line_start":669,"line_end":669,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":62971,"byte_end":62978,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":64135,"byte_end":64142,"line_start":699,"line_end":699,"column_start":12,"column_end":19},"name":"time_fn","qualname":"<Duration>::time_fn","value":"pub fn time_fn<T, impl FnOnce() -> T: FnOnce() -> T>(impl FnOnce() -> T)\n-> (Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Runs a closure, returning the duration of time it took to run. The return value of the\n closure is provided in the second part of the tuple.\n","sig":null,"attributes":[{"value":"/ Runs a closure, returning the duration of time it took to run. The return value of the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":63885,"byte_end":63975,"line_start":695,"line_end":695,"column_start":5,"column_end":95}},{"value":"/ closure is provided in the second part of the tuple.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":63980,"byte_end":64036,"line_start":696,"line_end":696,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":64041,"byte_end":64064,"line_start":697,"line_end":697,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":301},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":313},{"krate":0,"index":322},{"krate":0,"index":337},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":1526},{"krate":0,"index":1539},{"krate":0,"index":365},{"krate":0,"index":367}],"decl_id":null,"docs":" Various error types returned by methods in the time crate.\n","sig":null,"attributes":[{"value":"/ Various error types returned by methods in the time crate.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":9602,"byte_end":9664,"line_start":290,"line_end":290,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1459},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":75068,"byte_end":75082,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"ComponentRange","qualname":"::error::component_range::ComponentRange","value":"ComponentRange {  }","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464}],"decl_id":null,"docs":" An error type indicating that a component provided to a method was out of range, causing a\n failure.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a component provided to a method was out of range, causing a","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":74799,"byte_end":74893,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ failure.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":74894,"byte_end":74906,"line_start":6,"line_end":6,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":75604,"byte_end":75608,"line_start":25,"line_end":25,"column_start":18,"column_end":22},"name":"name","qualname":"<ComponentRange>::name","value":"pub const fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Obtain the name of the component whose value was out of range.\n","sig":null,"attributes":[{"value":"/ Obtain the name of the component whose value was out of range.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":75520,"byte_end":75586,"line_start":24,"line_end":24,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1480},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/conversion_range.rs","byte_start":77202,"byte_end":77217,"line_start":8,"line_end":8,"column_start":12,"column_end":27},"name":"ConversionRange","qualname":"::error::conversion_range::ConversionRange","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a conversion failed because the target type could not store the\n initial value.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a conversion failed because the target type could not store the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/conversion_range.rs","byte_start":77029,"byte_end":77126,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ initial value.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/conversion_range.rs","byte_start":77127,"byte_end":77145,"line_start":6,"line_end":6,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1494},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78039,"byte_end":78066,"line_start":14,"line_end":14,"column_start":5,"column_end":32},"name":"InsufficientTypeInformation","qualname":"::error::format::Format::InsufficientTypeInformation","value":"Format::InsufficientTypeInformation","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" The type being formatted does not contain sufficient information to format a component.\n","sig":null,"attributes":[{"value":"/ The type being formatted does not contain sufficient information to format a component.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":77921,"byte_end":78012,"line_start":12,"line_end":12,"column_start":5,"column_end":96}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78017,"byte_end":78034,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1496},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78241,"byte_end":78257,"line_start":18,"line_end":18,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::format::Format::InvalidComponent","value":"Format::InvalidComponent(&'static str)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" The component named has a value that cannot be formatted into the requested format.","sig":null,"attributes":[{"value":"/ The component named has a value that cannot be formatted into the requested format.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78072,"byte_end":78159,"line_start":15,"line_end":15,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78164,"byte_end":78167,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This variant is only returned when using well-known formats.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78172,"byte_end":78236,"line_start":17,"line_end":17,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1499},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78338,"byte_end":78343,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"StdIo","qualname":"::error::format::Format::StdIo","value":"Format::StdIo(io::Error)","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" A value of `std::io::Error` was returned internally.\n","sig":null,"attributes":[{"value":"/ A value of `std::io::Error` was returned internally.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78277,"byte_end":78333,"line_start":19,"line_end":19,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":1493},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":77908,"byte_end":77914,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::format::Format","value":"pub enum Format {\n    InsufficientTypeInformation,\n    InvalidComponent(&'static str),\n    StdIo(io::Error),\n}","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1499}],"decl_id":null,"docs":" An error occurred when formatting.\n","sig":null,"attributes":[{"value":"/ An error occurred when formatting.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":77724,"byte_end":77762,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":77763,"byte_end":77780,"line_start":7,"line_end":7,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":77781,"byte_end":77819,"line_start":8,"line_end":8,"column_start":1,"column_end":39}}]},{"kind":"StructVariant","id":{"krate":0,"index":1505},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80012,"byte_end":80034,"line_start":16,"line_end":16,"column_start":5,"column_end":27},"name":"UnclosedOpeningBracket","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket","value":"InvalidFormatDescription::UnclosedOpeningBracket { index }","parent":{"krate":0,"index":1504},"children":[],"decl_id":null,"docs":" There was a bracket pair that was opened but not closed.\n","sig":null,"attributes":[{"value":"/ There was a bracket pair that was opened but not closed.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":79925,"byte_end":79985,"line_start":14,"line_end":14,"column_start":5,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":79990,"byte_end":80007,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":1507},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80188,"byte_end":80208,"line_start":22,"line_end":22,"column_start":5,"column_end":25},"name":"InvalidComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName","value":"InvalidFormatDescription::InvalidComponentName { name, index }","parent":{"krate":0,"index":1504},"children":[],"decl_id":null,"docs":" A component name is not valid.\n","sig":null,"attributes":[{"value":"/ A component name is not valid.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80127,"byte_end":80161,"line_start":20,"line_end":20,"column_start":5,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80166,"byte_end":80183,"line_start":21,"line_end":21,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":1510},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80436,"byte_end":80451,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"InvalidModifier","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier","value":"InvalidFormatDescription::InvalidModifier { value, index }","parent":{"krate":0,"index":1504},"children":[],"decl_id":null,"docs":" A modifier is not valid.\n","sig":null,"attributes":[{"value":"/ A modifier is not valid.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80381,"byte_end":80409,"line_start":28,"line_end":28,"column_start":5,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80414,"byte_end":80431,"line_start":29,"line_end":29,"column_start":5,"column_end":22}}]},{"kind":"StructVariant","id":{"krate":0,"index":1513},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80673,"byte_end":80693,"line_start":38,"line_end":38,"column_start":5,"column_end":25},"name":"MissingComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName","value":"InvalidFormatDescription::MissingComponentName { index }","parent":{"krate":0,"index":1504},"children":[],"decl_id":null,"docs":" A component name is missing.\n","sig":null,"attributes":[{"value":"/ A component name is missing.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80614,"byte_end":80646,"line_start":36,"line_end":36,"column_start":5,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80651,"byte_end":80668,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":1504},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":79894,"byte_end":79918,"line_start":13,"line_end":13,"column_start":10,"column_end":34},"name":"InvalidFormatDescription","qualname":"::error::invalid_format_description::InvalidFormatDescription","value":"pub enum InvalidFormatDescription {\n    UnclosedOpeningBracket {\n        index: usize,\n    },\n    InvalidComponentName {\n        name: String,\n        index: usize,\n    },\n    InvalidModifier {\n        value: String,\n        index: usize,\n    },\n    MissingComponentName {\n        index: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1510},{"krate":0,"index":1513}],"decl_id":null,"docs":" The format description provided was not valid.\n","sig":null,"attributes":[{"value":"/ The format description provided was not valid.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":79655,"byte_end":79705,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":79828,"byte_end":79845,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1527},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71865,"byte_end":71880,"line_start":42,"line_end":42,"column_start":5,"column_end":20},"name":"ConversionRange","qualname":"::error::Error::ConversionRange","value":"Error::ConversionRange(ConversionRange)","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1530},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71903,"byte_end":71917,"line_start":43,"line_end":43,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::Error::ComponentRange","value":"Error::ComponentRange(ComponentRange)","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1533},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":72191,"byte_end":72197,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Error::Format","value":"Error::Format(Format)","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":72090,"byte_end":72120,"line_start":47,"line_end":47,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1536},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":72857,"byte_end":72881,"line_start":65,"line_end":65,"column_start":5,"column_end":29},"name":"InvalidFormatDescription","qualname":"::error::Error::InvalidFormatDescription","value":"Error::InvalidFormatDescription(InvalidFormatDescription)","parent":{"krate":0,"index":1526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(feature = \"formatting\", feature = \"parsing\"), feature =\n          \"alloc\"))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":72634,"byte_end":72714,"line_start":60,"line_end":60,"column_start":5,"column_end":85}}]},{"kind":"Enum","id":{"krate":0,"index":1526},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71853,"byte_end":71858,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    ConversionRange(ConversionRange),\n    ComponentRange(ComponentRange),\n    Format(Format),\n    InvalidFormatDescription(InvalidFormatDescription),\n}","parent":null,"children":[{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1533},{"krate":0,"index":1536}],"decl_id":null,"docs":" A unified error type for anything returned by a method in the time crate.","sig":null,"attributes":[{"value":"/ A unified error type for anything returned by a method in the time crate.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71410,"byte_end":71487,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71488,"byte_end":71491,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This can be used when you either don't know or don't care about the exact error returned.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71492,"byte_end":71585,"line_start":35,"line_end":35,"column_start":1,"column_end":94}},{"value":"/ `Result<_, time::Error>` (or its alias `time::Result<_>`) will work in these situations.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71586,"byte_end":71678,"line_start":36,"line_end":36,"column_start":1,"column_end":93}},{"value":"allow(missing_copy_implementations, variant_size_differences)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71679,"byte_end":71743,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71744,"byte_end":71791,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":71809,"byte_end":71826,"line_start":39,"line_end":39,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":369},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":381},{"krate":0,"index":390},{"krate":0,"index":399},{"krate":0,"index":408},{"krate":0,"index":417},{"krate":0,"index":426}],"decl_id":null,"docs":" Extension traits.\n","sig":null,"attributes":[{"value":"/ Extension traits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":9680,"byte_end":9701,"line_start":292,"line_end":292,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":377},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82244,"byte_end":82250,"line_start":8,"line_end":8,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait that cannot be implemented by downstream users.\n","sig":null,"attributes":[{"value":"/ A trait that cannot be implemented by downstream users.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82170,"byte_end":82229,"line_start":7,"line_end":7,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":381},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84049,"byte_end":84066,"line_start":58,"line_end":58,"column_start":11,"column_end":28},"name":"NumericalDuration","qualname":"::ext::NumericalDuration","value":"NumericalDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389}],"decl_id":null,"docs":" Create [`Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`Duration`]s from numeric literals.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82367,"byte_end":82414,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82415,"byte_end":82418,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82419,"byte_end":82433,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82434,"byte_end":82437,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`Duration`]s.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82438,"byte_end":82478,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82479,"byte_end":82482,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82483,"byte_end":82494,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82495,"byte_end":82546,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(5.nanoseconds(), Duration::nanoseconds(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82547,"byte_end":82605,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(5.microseconds(), Duration::microseconds(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82606,"byte_end":82666,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.milliseconds(), Duration::milliseconds(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82667,"byte_end":82727,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.seconds(), Duration::seconds(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82728,"byte_end":82778,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.minutes(), Duration::minutes(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82779,"byte_end":82829,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.hours(), Duration::hours(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82830,"byte_end":82876,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(5.days(), Duration::days(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82877,"byte_end":82921,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(5.weeks(), Duration::weeks(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82922,"byte_end":82968,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82969,"byte_end":82976,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82977,"byte_end":82980,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Signed integers work as well!","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":82981,"byte_end":83014,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83015,"byte_end":83018,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83019,"byte_end":83030,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83031,"byte_end":83082,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/ assert_eq!((-5).nanoseconds(), Duration::nanoseconds(-5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83083,"byte_end":83145,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/ assert_eq!((-5).microseconds(), Duration::microseconds(-5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83146,"byte_end":83210,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).milliseconds(), Duration::milliseconds(-5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83211,"byte_end":83275,"line_start":39,"line_end":39,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).seconds(), Duration::seconds(-5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83276,"byte_end":83330,"line_start":40,"line_end":40,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).minutes(), Duration::minutes(-5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83331,"byte_end":83385,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).hours(), Duration::hours(-5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83386,"byte_end":83436,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/ assert_eq!((-5).days(), Duration::days(-5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83437,"byte_end":83485,"line_start":43,"line_end":43,"column_start":1,"column_end":49}},{"value":"/ assert_eq!((-5).weeks(), Duration::weeks(-5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83486,"byte_end":83536,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83537,"byte_end":83544,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83545,"byte_end":83548,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`Duration`], they can be added, subtracted, etc.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83549,"byte_end":83622,"line_start":47,"line_end":47,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83623,"byte_end":83626,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83627,"byte_end":83638,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83639,"byte_end":83678,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(2.seconds() + 500.milliseconds(), 2_500.milliseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83679,"byte_end":83750,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(2.seconds() - 500.milliseconds(), 1_500.milliseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83751,"byte_end":83822,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83823,"byte_end":83830,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83831,"byte_end":83834,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83835,"byte_end":83926,"line_start":55,"line_end":55,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":83927,"byte_end":84024,"line_start":56,"line_end":56,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84025,"byte_end":84038,"line_start":57,"line_end":57,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84154,"byte_end":84165,"line_start":60,"line_end":60,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::ext::NumericalDuration::nanoseconds","value":"pub fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of nanoseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84089,"byte_end":84146,"line_start":59,"line_end":59,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84255,"byte_end":84267,"line_start":62,"line_end":62,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::ext::NumericalDuration::microseconds","value":"pub fn microseconds(Self) -> Duration","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of microseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84189,"byte_end":84247,"line_start":61,"line_end":61,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84357,"byte_end":84369,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::ext::NumericalDuration::milliseconds","value":"pub fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of milliseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84291,"byte_end":84349,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84454,"byte_end":84461,"line_start":66,"line_end":66,"column_start":8,"column_end":15},"name":"seconds","qualname":"::ext::NumericalDuration::seconds","value":"pub fn seconds(Self) -> Duration","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of seconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84393,"byte_end":84446,"line_start":65,"line_end":65,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84546,"byte_end":84553,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"minutes","qualname":"::ext::NumericalDuration::minutes","value":"pub fn minutes(Self) -> Duration","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of minutes.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84485,"byte_end":84538,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84636,"byte_end":84641,"line_start":70,"line_end":70,"column_start":8,"column_end":13},"name":"hours","qualname":"::ext::NumericalDuration::hours","value":"pub fn hours(Self) -> Duration","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of hours.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84577,"byte_end":84628,"line_start":69,"line_end":69,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84723,"byte_end":84727,"line_start":72,"line_end":72,"column_start":8,"column_end":12},"name":"days","qualname":"::ext::NumericalDuration::days","value":"pub fn days(Self) -> Duration","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of days.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84665,"byte_end":84715,"line_start":71,"line_end":71,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84810,"byte_end":84815,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"weeks","qualname":"::ext::NumericalDuration::weeks","value":"pub fn weeks(Self) -> Duration","parent":{"krate":0,"index":381},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of weeks.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84751,"byte_end":84802,"line_start":73,"line_end":73,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":408},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87704,"byte_end":87724,"line_start":183,"line_end":183,"column_start":11,"column_end":31},"name":"NumericalStdDuration","qualname":"::ext::NumericalStdDuration","value":"NumericalStdDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"decl_id":null,"docs":" Create [`std::time::Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`std::time::Duration`]s from numeric literals.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86385,"byte_end":86443,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86444,"byte_end":86447,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86448,"byte_end":86462,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86463,"byte_end":86466,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`std::time::Duration`]s.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86467,"byte_end":86518,"line_start":151,"line_end":151,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86519,"byte_end":86522,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86523,"byte_end":86534,"line_start":153,"line_end":153,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86535,"byte_end":86577,"line_start":154,"line_end":154,"column_start":1,"column_end":43}},{"value":"/ # use core::time::Duration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86578,"byte_end":86609,"line_start":155,"line_end":155,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(5.std_nanoseconds(), Duration::from_nanos(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86610,"byte_end":86671,"line_start":156,"line_end":156,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_microseconds(), Duration::from_micros(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86672,"byte_end":86735,"line_start":157,"line_end":157,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_milliseconds(), Duration::from_millis(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86736,"byte_end":86799,"line_start":158,"line_end":158,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_seconds(), Duration::from_secs(5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86800,"byte_end":86856,"line_start":159,"line_end":159,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(5.std_minutes(), Duration::from_secs(5 * 60));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86857,"byte_end":86918,"line_start":160,"line_end":160,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_hours(), Duration::from_secs(5 * 3_600));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86919,"byte_end":86981,"line_start":161,"line_end":161,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_days(), Duration::from_secs(5 * 86_400));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":86982,"byte_end":87044,"line_start":162,"line_end":162,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_weeks(), Duration::from_secs(5 * 604_800));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87045,"byte_end":87109,"line_start":163,"line_end":163,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87110,"byte_end":87117,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87118,"byte_end":87121,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`std::time::Duration`], they can be added, subtracted, etc.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87122,"byte_end":87206,"line_start":166,"line_end":166,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87207,"byte_end":87210,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87211,"byte_end":87222,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87223,"byte_end":87265,"line_start":169,"line_end":169,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87266,"byte_end":87281,"line_start":170,"line_end":170,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() + 500.std_milliseconds(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87282,"byte_end":87331,"line_start":171,"line_end":171,"column_start":1,"column_end":50}},{"value":"/     2_500.std_milliseconds()","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87332,"byte_end":87364,"line_start":172,"line_end":172,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87365,"byte_end":87371,"line_start":173,"line_end":173,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87372,"byte_end":87387,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() - 500.std_milliseconds(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87388,"byte_end":87437,"line_start":175,"line_end":175,"column_start":1,"column_end":50}},{"value":"/     1_500.std_milliseconds()","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87438,"byte_end":87470,"line_start":176,"line_end":176,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87471,"byte_end":87477,"line_start":177,"line_end":177,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87478,"byte_end":87485,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87486,"byte_end":87489,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87490,"byte_end":87581,"line_start":180,"line_end":180,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87582,"byte_end":87679,"line_start":181,"line_end":181,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87680,"byte_end":87693,"line_start":182,"line_end":182,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87823,"byte_end":87838,"line_start":185,"line_end":185,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"::ext::NumericalStdDuration::std_nanoseconds","value":"pub fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of nanoseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87747,"byte_end":87815,"line_start":184,"line_end":184,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87942,"byte_end":87958,"line_start":187,"line_end":187,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"::ext::NumericalStdDuration::std_microseconds","value":"pub fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of microseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87865,"byte_end":87934,"line_start":186,"line_end":186,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88062,"byte_end":88078,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"::ext::NumericalStdDuration::std_milliseconds","value":"pub fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of milliseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87985,"byte_end":88054,"line_start":188,"line_end":188,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88177,"byte_end":88188,"line_start":191,"line_end":191,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"::ext::NumericalStdDuration::std_seconds","value":"pub fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of seconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88105,"byte_end":88169,"line_start":190,"line_end":190,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88287,"byte_end":88298,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"::ext::NumericalStdDuration::std_minutes","value":"pub fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of minutes.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88215,"byte_end":88279,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88395,"byte_end":88404,"line_start":195,"line_end":195,"column_start":8,"column_end":17},"name":"std_hours","qualname":"::ext::NumericalStdDuration::std_hours","value":"pub fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of hours.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88325,"byte_end":88387,"line_start":194,"line_end":194,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88500,"byte_end":88508,"line_start":197,"line_end":197,"column_start":8,"column_end":16},"name":"std_days","qualname":"::ext::NumericalStdDuration::std_days","value":"pub fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of days.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88431,"byte_end":88492,"line_start":196,"line_end":196,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88605,"byte_end":88614,"line_start":199,"line_end":199,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"::ext::NumericalStdDuration::std_weeks","value":"pub fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":408},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of weeks.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":88535,"byte_end":88597,"line_start":198,"line_end":198,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":435},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format_description","qualname":"::format_description","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":482},{"krate":0,"index":499},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":547},{"krate":0,"index":2042},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2062},{"krate":0,"index":2064},{"krate":0,"index":548}],"decl_id":null,"docs":" Description of how types should be formatted and parsed.","sig":null,"attributes":[{"value":"cfg(any(feature = \"formatting\", feature = \"parsing\"))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":9715,"byte_end":9771,"line_start":294,"line_end":294,"column_start":1,"column_end":57}},{"value":"/ Description of how types should be formatted and parsed.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":90594,"byte_end":90654,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":90655,"byte_end":90658,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formatted value will be output to the provided writer. Format descriptions can be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":90659,"byte_end":90748,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ [well-known](crate::format_description::well_known) or obtained by using the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":90749,"byte_end":90829,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ [`format_description!`](crate::macros::format_description) macro, the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":90830,"byte_end":90903,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ [`format_description::parse`](crate::format_description::parse()) function.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":90904,"byte_end":90983,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1542},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93431,"byte_end":93434,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Day","qualname":"::format_description::component::Component::Day","value":"Component::Day(modifier::Day)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93405,"byte_end":93426,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1545},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93482,"byte_end":93487,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Month","qualname":"::format_description::component::Component::Month","value":"Component::Month(modifier::Month)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93455,"byte_end":93477,"line_start":16,"line_end":16,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1548},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93543,"byte_end":93550,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::component::Component::Ordinal","value":"Component::Ordinal(modifier::Ordinal)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93510,"byte_end":93538,"line_start":18,"line_end":18,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1551},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93600,"byte_end":93607,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Weekday","qualname":"::format_description::component::Component::Weekday","value":"Component::Weekday(modifier::Weekday)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93575,"byte_end":93595,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1554},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93662,"byte_end":93672,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"WeekNumber","qualname":"::format_description::component::Component::WeekNumber","value":"Component::WeekNumber(modifier::WeekNumber)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93632,"byte_end":93657,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1557},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93726,"byte_end":93730,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Year","qualname":"::format_description::component::Component::Year","value":"Component::Year(modifier::Year)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93700,"byte_end":93721,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1560},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93777,"byte_end":93781,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::component::Component::Hour","value":"Component::Hour(modifier::Hour)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93752,"byte_end":93772,"line_start":26,"line_end":26,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1563},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93835,"byte_end":93841,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::component::Component::Minute","value":"Component::Minute(modifier::Minute)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93803,"byte_end":93830,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1566},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93897,"byte_end":93903,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Period","qualname":"::format_description::component::Component::Period","value":"Component::Period(modifier::Period)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93865,"byte_end":93892,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1569},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93961,"byte_end":93967,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::component::Component::Second","value":"Component::Second(modifier::Second)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93927,"byte_end":93956,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1572},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":94028,"byte_end":94037,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Subsecond","qualname":"::format_description::component::Component::Subsecond","value":"Component::Subsecond(modifier::Subsecond)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93991,"byte_end":94023,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1575},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":94096,"byte_end":94106,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"OffsetHour","qualname":"::format_description::component::Component::OffsetHour","value":"Component::OffsetHour(modifier::OffsetHour)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":94064,"byte_end":94091,"line_start":36,"line_end":36,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1578},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":94184,"byte_end":94196,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"OffsetMinute","qualname":"::format_description::component::Component::OffsetMinute","value":"Component::OffsetMinute(modifier::OffsetMinute)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":94134,"byte_end":94179,"line_start":38,"line_end":38,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1581},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":94278,"byte_end":94290,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"OffsetSecond","qualname":"::format_description::component::Component::OffsetSecond","value":"Component::OffsetSecond(modifier::OffsetSecond)","parent":{"krate":0,"index":1541},"children":[],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":94226,"byte_end":94273,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1541},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93389,"byte_end":93398,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"Component","qualname":"::format_description::component::Component","value":"pub enum Component {\n    Day(modifier::Day),\n    Month(modifier::Month),\n    Ordinal(modifier::Ordinal),\n    Weekday(modifier::Weekday),\n    WeekNumber(modifier::WeekNumber),\n    Year(modifier::Year),\n    Hour(modifier::Hour),\n    Minute(modifier::Minute),\n    Period(modifier::Period),\n    Second(modifier::Second),\n    Subsecond(modifier::Subsecond),\n    OffsetHour(modifier::OffsetHour),\n    OffsetMinute(modifier::OffsetMinute),\n    OffsetSecond(modifier::OffsetSecond),\n}","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581}],"decl_id":null,"docs":" A component of a larger format description.\n","sig":null,"attributes":[{"value":"/ A component of a larger format description.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93269,"byte_end":93316,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":93317,"byte_end":93334,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":482},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"modifier","qualname":"::format_description::modifier","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1667},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1682},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1712},{"krate":0,"index":1715},{"krate":0,"index":1717},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1743},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1775},{"krate":0,"index":1777},{"krate":0,"index":1779},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":496},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":497}],"decl_id":null,"docs":" Various modifiers for components.\n","sig":null,"attributes":[{"value":"/ Various modifiers for components.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":99581,"byte_end":99618,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1596},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":99938,"byte_end":99941,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Day","qualname":"::format_description::modifier::Day","value":"Day { padding }","parent":null,"children":[{"krate":0,"index":1597}],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":99842,"byte_end":99863,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":99864,"byte_end":99881,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1597},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100001,"byte_end":100008,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Day::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":99948,"byte_end":99992,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1611},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100209,"byte_end":100218,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Numerical","qualname":"::format_description::modifier::MonthRepr::Numerical","value":"MonthRepr::Numerical","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" The number of the month (January is 1, December is 12).\n","sig":null,"attributes":[{"value":"/ The number of the month (January is 1, December is 12).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100145,"byte_end":100204,"line_start":24,"line_end":24,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1613},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100282,"byte_end":100286,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::MonthRepr::Long","value":"MonthRepr::Long","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" The long form of the month name (e.g. \"January\").\n","sig":null,"attributes":[{"value":"/ The long form of the month name (e.g. \"January\").","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100224,"byte_end":100277,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1615},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100347,"byte_end":100352,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::MonthRepr::Short","value":"MonthRepr::Short","parent":{"krate":0,"index":1610},"children":[],"decl_id":null,"docs":" The short form of the month name (e.g. \"Jan\").\n","sig":null,"attributes":[{"value":"/ The short form of the month name (e.g. \"Jan\").","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100292,"byte_end":100342,"line_start":28,"line_end":28,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":1610},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100129,"byte_end":100138,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"MonthRepr","qualname":"::format_description::modifier::MonthRepr","value":"pub enum MonthRepr { Numerical, Long, Short, }","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1615}],"decl_id":null,"docs":" The representation of a month.\n","sig":null,"attributes":[{"value":"/ The representation of a month.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100022,"byte_end":100056,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100057,"byte_end":100074,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1628},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100454,"byte_end":100459,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Month","qualname":"::format_description::modifier::Month","value":"Month { padding, repr, case_sensitive }","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631}],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100357,"byte_end":100379,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100380,"byte_end":100397,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1629},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100519,"byte_end":100526,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Month::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100466,"byte_end":100510,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1630},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100597,"byte_end":100601,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Month::repr","value":"format_description::modifier::MonthRepr","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100541,"byte_end":100588,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1631},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100672,"byte_end":100686,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Month::case_sensitive","value":"bool","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100618,"byte_end":100663,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1644},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100800,"byte_end":100807,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Ordinal","qualname":"::format_description::modifier::Ordinal","value":"Ordinal { padding }","parent":null,"children":[{"krate":0,"index":1645}],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100697,"byte_end":100725,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100726,"byte_end":100743,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1645},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100867,"byte_end":100874,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Ordinal::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1644},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100814,"byte_end":100858,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1659},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101083,"byte_end":101088,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::WeekdayRepr::Short","value":"WeekdayRepr::Short","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":" The short form of the weekday (e.g. \"Mon\").\n","sig":null,"attributes":[{"value":"/ The short form of the weekday (e.g. \"Mon\").","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101031,"byte_end":101078,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1661},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101148,"byte_end":101152,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::WeekdayRepr::Long","value":"WeekdayRepr::Long","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":" The long form of the weekday (e.g. \"Monday\").\n","sig":null,"attributes":[{"value":"/ The long form of the weekday (e.g. \"Monday\").","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101094,"byte_end":101143,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1663},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101318,"byte_end":101324,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekdayRepr::Sunday","value":"WeekdayRepr::Sunday","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":" A numerical representation using Sunday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Sunday as the first day of the week.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101158,"byte_end":101231,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101236,"byte_end":101239,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Sunday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101244,"byte_end":101313,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1665},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101490,"byte_end":101496,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekdayRepr::Monday","value":"WeekdayRepr::Monday","parent":{"krate":0,"index":1658},"children":[],"decl_id":null,"docs":" A numerical representation using Monday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Monday as the first day of the week.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101330,"byte_end":101403,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101408,"byte_end":101411,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Monday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101416,"byte_end":101485,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":1658},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101013,"byte_end":101024,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"WeekdayRepr","qualname":"::format_description::modifier::WeekdayRepr","value":"pub enum WeekdayRepr { Short, Long, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665}],"decl_id":null,"docs":" The representation used for the day of the week.\n","sig":null,"attributes":[{"value":"/ The representation used for the day of the week.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100888,"byte_end":100940,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":100941,"byte_end":100958,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1678},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101596,"byte_end":101603,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Weekday","qualname":"::format_description::modifier::Weekday","value":"Weekday { repr, one_indexed, case_sensitive }","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681}],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101501,"byte_end":101521,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101522,"byte_end":101539,"line_start":71,"line_end":71,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1679},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101666,"byte_end":101670,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Weekday::repr","value":"format_description::modifier::WeekdayRepr","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101610,"byte_end":101657,"line_start":74,"line_end":74,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1680},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101774,"byte_end":101785,"line_start":77,"line_end":77,"column_start":9,"column_end":20},"name":"one_indexed","qualname":"::format_description::modifier::Weekday::one_indexed","value":"bool","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":" When using a numerical representation, should it be zero or one-indexed?\n","sig":null,"attributes":[{"value":"/ When using a numerical representation, should it be zero or one-indexed?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101689,"byte_end":101765,"line_start":76,"line_end":76,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1681},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101851,"byte_end":101865,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Weekday::case_sensitive","value":"bool","parent":{"krate":0,"index":1678},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101797,"byte_end":101842,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1695},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102070,"byte_end":102073,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Iso","qualname":"::format_description::modifier::WeekNumberRepr::Iso","value":"WeekNumberRepr::Iso","parent":{"krate":0,"index":1694},"children":[],"decl_id":null,"docs":" Week 1 is the week that contains January 4.\n","sig":null,"attributes":[{"value":"/ Week 1 is the week that contains January 4.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102018,"byte_end":102065,"line_start":86,"line_end":86,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1697},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102143,"byte_end":102149,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekNumberRepr::Sunday","value":"WeekNumberRepr::Sunday","parent":{"krate":0,"index":1694},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Sunday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Sunday of the calendar year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102079,"byte_end":102138,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1699},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102219,"byte_end":102225,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekNumberRepr::Monday","value":"WeekNumberRepr::Monday","parent":{"krate":0,"index":1694},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Monday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Monday of the calendar year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102155,"byte_end":102214,"line_start":90,"line_end":90,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":1694},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101997,"byte_end":102011,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"WeekNumberRepr","qualname":"::format_description::modifier::WeekNumberRepr","value":"pub enum WeekNumberRepr { Iso, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1699}],"decl_id":null,"docs":" The representation used for the week number.\n","sig":null,"attributes":[{"value":"/ The representation used for the week number.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101876,"byte_end":101924,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":101925,"byte_end":101942,"line_start":83,"line_end":83,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1712},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102330,"byte_end":102340,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"WeekNumber","qualname":"::format_description::modifier::WeekNumber","value":"WeekNumber { padding, repr }","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714}],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102230,"byte_end":102255,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102256,"byte_end":102273,"line_start":95,"line_end":95,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1713},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102400,"byte_end":102407,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::WeekNumber::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102347,"byte_end":102391,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1714},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102478,"byte_end":102482,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::WeekNumber::repr","value":"format_description::modifier::WeekNumberRepr","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102422,"byte_end":102469,"line_start":100,"line_end":100,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1728},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102672,"byte_end":102676,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Full","qualname":"::format_description::modifier::YearRepr::Full","value":"YearRepr::Full","parent":{"krate":0,"index":1727},"children":[],"decl_id":null,"docs":" The full value of the year.\n","sig":null,"attributes":[{"value":"/ The full value of the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102636,"byte_end":102667,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1730},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102728,"byte_end":102735,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"LastTwo","qualname":"::format_description::modifier::YearRepr::LastTwo","value":"YearRepr::LastTwo","parent":{"krate":0,"index":1727},"children":[],"decl_id":null,"docs":" Only the last two digits of the year.\n","sig":null,"attributes":[{"value":"/ Only the last two digits of the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102682,"byte_end":102723,"line_start":110,"line_end":110,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":1727},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102621,"byte_end":102629,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"YearRepr","qualname":"::format_description::modifier::YearRepr","value":"pub enum YearRepr { Full, LastTwo, }","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1730}],"decl_id":null,"docs":" The representation used for a year value.\n","sig":null,"attributes":[{"value":"/ The representation used for a year value.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102503,"byte_end":102548,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102549,"byte_end":102566,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1743},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102836,"byte_end":102840,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"Year","qualname":"::format_description::modifier::Year","value":"Year { padding, repr, iso_week_based, sign_is_mandatory }","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747}],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102740,"byte_end":102761,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102762,"byte_end":102779,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1744},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102900,"byte_end":102907,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Year::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102847,"byte_end":102891,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102978,"byte_end":102982,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Year::repr","value":"format_description::modifier::YearRepr","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102922,"byte_end":102969,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1746},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103058,"byte_end":103072,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"name":"iso_week_based","qualname":"::format_description::modifier::Year::iso_week_based","value":"bool","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":" Whether the value based on the ISO week number.\n","sig":null,"attributes":[{"value":"/ Whether the value based on the ISO week number.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":102998,"byte_end":103049,"line_start":122,"line_end":122,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1747},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103182,"byte_end":103199,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::Year::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present when a positive year contains fewer than five digits.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present when a positive year contains fewer than five digits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103084,"byte_end":103173,"line_start":124,"line_end":124,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103359,"byte_end":103363,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Hour","qualname":"::format_description::modifier::Hour","value":"Hour { padding, is_12_hour_clock }","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762}],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103264,"byte_end":103284,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103285,"byte_end":103302,"line_start":131,"line_end":131,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1761},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103423,"byte_end":103430,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Hour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103370,"byte_end":103414,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1762},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103508,"byte_end":103524,"line_start":137,"line_end":137,"column_start":9,"column_end":25},"name":"is_12_hour_clock","qualname":"::format_description::modifier::Hour::is_12_hour_clock","value":"bool","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":" Is the hour displayed using a 12 or 24-hour clock?\n","sig":null,"attributes":[{"value":"/ Is the hour displayed using a 12 or 24-hour clock?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103445,"byte_end":103499,"line_start":136,"line_end":136,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1775},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103637,"byte_end":103643,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"Minute","qualname":"::format_description::modifier::Minute","value":"Minute { padding }","parent":null,"children":[{"krate":0,"index":1776}],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103535,"byte_end":103562,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103563,"byte_end":103580,"line_start":141,"line_end":141,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1776},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103703,"byte_end":103710,"line_start":145,"line_end":145,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Minute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1775},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103650,"byte_end":103694,"line_start":144,"line_end":144,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1789},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103826,"byte_end":103832,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"Period","qualname":"::format_description::modifier::Period","value":"Period { is_uppercase, case_sensitive }","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791}],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103724,"byte_end":103751,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103752,"byte_end":103769,"line_start":149,"line_end":149,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1790},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103889,"byte_end":103901,"line_start":153,"line_end":153,"column_start":9,"column_end":21},"name":"is_uppercase","qualname":"::format_description::modifier::Period::is_uppercase","value":"bool","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Is the period uppercase or lowercase?\n","sig":null,"attributes":[{"value":"/ Is the period uppercase or lowercase?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103839,"byte_end":103880,"line_start":152,"line_end":152,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1791},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104067,"byte_end":104081,"line_start":157,"line_end":157,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Period::case_sensitive","value":"bool","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103913,"byte_end":103958,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103963,"byte_end":103966,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that when `false`, the `is_uppercase` field has no effect on parsing behavior.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":103971,"byte_end":104058,"line_start":156,"line_end":156,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":1804},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104196,"byte_end":104202,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"Second","qualname":"::format_description::modifier::Second","value":"Second { padding }","parent":null,"children":[{"krate":0,"index":1805}],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104092,"byte_end":104121,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104122,"byte_end":104139,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1805},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104262,"byte_end":104269,"line_start":165,"line_end":165,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Second::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104209,"byte_end":104253,"line_start":164,"line_end":164,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1819},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104468,"byte_end":104471,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"One","qualname":"::format_description::modifier::SubsecondDigits::One","value":"SubsecondDigits::One","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Exactly one digit.\n","sig":null,"attributes":[{"value":"/ Exactly one digit.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104441,"byte_end":104463,"line_start":172,"line_end":172,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1821},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104505,"byte_end":104508,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Two","qualname":"::format_description::modifier::SubsecondDigits::Two","value":"SubsecondDigits::Two","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Exactly two digits.\n","sig":null,"attributes":[{"value":"/ Exactly two digits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104477,"byte_end":104500,"line_start":174,"line_end":174,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1823},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104544,"byte_end":104549,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Three","qualname":"::format_description::modifier::SubsecondDigits::Three","value":"SubsecondDigits::Three","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Exactly three digits.\n","sig":null,"attributes":[{"value":"/ Exactly three digits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104514,"byte_end":104539,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1825},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104584,"byte_end":104588,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Four","qualname":"::format_description::modifier::SubsecondDigits::Four","value":"SubsecondDigits::Four","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Exactly four digits.\n","sig":null,"attributes":[{"value":"/ Exactly four digits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104555,"byte_end":104579,"line_start":178,"line_end":178,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1827},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104623,"byte_end":104627,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Five","qualname":"::format_description::modifier::SubsecondDigits::Five","value":"SubsecondDigits::Five","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Exactly five digits.\n","sig":null,"attributes":[{"value":"/ Exactly five digits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104594,"byte_end":104618,"line_start":180,"line_end":180,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1829},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104661,"byte_end":104664,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"Six","qualname":"::format_description::modifier::SubsecondDigits::Six","value":"SubsecondDigits::Six","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Exactly six digits.\n","sig":null,"attributes":[{"value":"/ Exactly six digits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104633,"byte_end":104656,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104700,"byte_end":104705,"line_start":185,"line_end":185,"column_start":5,"column_end":10},"name":"Seven","qualname":"::format_description::modifier::SubsecondDigits::Seven","value":"SubsecondDigits::Seven","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Exactly seven digits.\n","sig":null,"attributes":[{"value":"/ Exactly seven digits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104670,"byte_end":104695,"line_start":184,"line_end":184,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1833},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104741,"byte_end":104746,"line_start":187,"line_end":187,"column_start":5,"column_end":10},"name":"Eight","qualname":"::format_description::modifier::SubsecondDigits::Eight","value":"SubsecondDigits::Eight","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Exactly eight digits.\n","sig":null,"attributes":[{"value":"/ Exactly eight digits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104711,"byte_end":104736,"line_start":186,"line_end":186,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1835},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104781,"byte_end":104785,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Nine","qualname":"::format_description::modifier::SubsecondDigits::Nine","value":"SubsecondDigits::Nine","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Exactly nine digits.\n","sig":null,"attributes":[{"value":"/ Exactly nine digits.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104752,"byte_end":104776,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1837},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104923,"byte_end":104932,"line_start":192,"line_end":192,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::format_description::modifier::SubsecondDigits::OneOrMore","value":"SubsecondDigits::OneOrMore","parent":{"krate":0,"index":1818},"children":[],"decl_id":null,"docs":" Any number of digits (up to nine) that is at least one. When formatting, the minimum digits\n necessary will be used.\n","sig":null,"attributes":[{"value":"/ Any number of digits (up to nine) that is at least one. When formatting, the minimum digits","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104791,"byte_end":104886,"line_start":190,"line_end":190,"column_start":5,"column_end":100}},{"value":"/ necessary will be used.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104891,"byte_end":104918,"line_start":191,"line_end":191,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1818},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104419,"byte_end":104434,"line_start":171,"line_end":171,"column_start":10,"column_end":25},"name":"SubsecondDigits","qualname":"::format_description::modifier::SubsecondDigits","value":"pub enum SubsecondDigits {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    OneOrMore,\n}","parent":null,"children":[{"krate":0,"index":1819},{"krate":0,"index":1821},{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1837}],"decl_id":null,"docs":" The number of digits present in a subsecond representation.\n","sig":null,"attributes":[{"value":"/ The number of digits present in a subsecond representation.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104283,"byte_end":104346,"line_start":168,"line_end":168,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104347,"byte_end":104364,"line_start":169,"line_end":169,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105044,"byte_end":105053,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"Subsecond","qualname":"::format_description::modifier::Subsecond","value":"Subsecond { digits }","parent":null,"children":[{"krate":0,"index":1851}],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104937,"byte_end":104969,"line_start":195,"line_end":195,"column_start":1,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":104970,"byte_end":104987,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1851},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105118,"byte_end":105124,"line_start":200,"line_end":200,"column_start":9,"column_end":15},"name":"digits","qualname":"::format_description::modifier::Subsecond::digits","value":"format_description::modifier::SubsecondDigits","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":" How many digits are present in the component?\n","sig":null,"attributes":[{"value":"/ How many digits are present in the component?","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105060,"byte_end":105109,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1864},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105304,"byte_end":105314,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"OffsetHour","qualname":"::format_description::modifier::OffsetHour","value":"OffsetHour { sign_is_mandatory, padding }","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866}],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105202,"byte_end":105229,"line_start":205,"line_end":205,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105230,"byte_end":105247,"line_start":206,"line_end":206,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1865},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105385,"byte_end":105402,"line_start":210,"line_end":210,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::OffsetHour::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":1864},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present on positive values.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present on positive values.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105321,"byte_end":105376,"line_start":209,"line_end":209,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1866},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105467,"byte_end":105474,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetHour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1864},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105414,"byte_end":105458,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1879},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105608,"byte_end":105620,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"OffsetMinute","qualname":"::format_description::modifier::OffsetMinute","value":"OffsetMinute { padding }","parent":null,"children":[{"krate":0,"index":1880}],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105488,"byte_end":105533,"line_start":215,"line_end":215,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105534,"byte_end":105551,"line_start":216,"line_end":216,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1880},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105680,"byte_end":105687,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetMinute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105627,"byte_end":105671,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1893},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105823,"byte_end":105835,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"OffsetSecond","qualname":"::format_description::modifier::OffsetSecond","value":"OffsetSecond { padding }","parent":null,"children":[{"krate":0,"index":1894}],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105701,"byte_end":105748,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105749,"byte_end":105766,"line_start":224,"line_end":224,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1894},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105895,"byte_end":105902,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetSecond::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":1893},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105842,"byte_end":105886,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1908},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":106138,"byte_end":106143,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Space","qualname":"::format_description::modifier::Padding::Space","value":"Padding::Space","parent":{"krate":0,"index":1907},"children":[],"decl_id":null,"docs":" A space character (` `) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A space character (` `) should be used as padding.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":106079,"byte_end":106133,"line_start":236,"line_end":236,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1910},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":106207,"byte_end":106211,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format_description::modifier::Padding::Zero","value":"Padding::Zero","parent":{"krate":0,"index":1907},"children":[],"decl_id":null,"docs":" A zero character (`0`) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A zero character (`0`) should be used as padding.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":106149,"byte_end":106202,"line_start":238,"line_end":238,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1912},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":106331,"byte_end":106335,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::modifier::Padding::None","value":"Padding::None","parent":{"krate":0,"index":1907},"children":[],"decl_id":null,"docs":" There is no padding. This can result in a width below the otherwise minimum number of\n characters.\n","sig":null,"attributes":[{"value":"/ There is no padding. This can result in a width below the otherwise minimum number of","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":106217,"byte_end":106306,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/ characters.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":106311,"byte_end":106326,"line_start":241,"line_end":241,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":1907},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":106065,"byte_end":106072,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"name":"Padding","qualname":"::format_description::modifier::Padding","value":"pub enum Padding { Space, Zero, None, }","parent":null,"children":[{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912}],"decl_id":null,"docs":" Type of padding to ensure a minimum width.\n","sig":null,"attributes":[{"value":"/ Type of padding to ensure a minimum width.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105946,"byte_end":105992,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":105993,"byte_end":106010,"line_start":233,"line_end":233,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":530},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/parse.rs","byte_start":119981,"byte_end":119986,"line_start":84,"line_end":84,"column_start":8,"column_end":13},"name":"parse","qualname":"::format_description::parse::parse","value":"pub fn parse(&str) -> Result<Vec<FormatItem>, InvalidFormatDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of items from the format description.","sig":null,"attributes":[{"value":"/ Parse a sequence of items from the format description.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/parse.rs","byte_start":119720,"byte_end":119778,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/parse.rs","byte_start":119779,"byte_end":119782,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The syntax for the format description can be found in [the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/parse.rs","byte_start":119783,"byte_end":119845,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/ book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/parse.rs","byte_start":119846,"byte_end":119916,"line_start":82,"line_end":82,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":547},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":91824,"byte_end":91834,"line_start":38,"line_end":38,"column_start":9,"column_end":19},"name":"well_known","qualname":"::format_description::well_known","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2031},{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2040}],"decl_id":null,"docs":" Well-known formats, typically RFCs.\n","sig":null,"attributes":[{"value":"/ Well-known formats, typically RFCs.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":91776,"byte_end":91815,"line_start":37,"line_end":37,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2029},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":91994,"byte_end":92001,"line_start":41,"line_end":41,"column_start":16,"column_end":23},"name":"Rfc3339","qualname":"::format_description::well_known::Rfc3339","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n","sig":null,"attributes":[{"value":"/ The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":91841,"byte_end":91929,"line_start":39,"line_end":39,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2044},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92392,"byte_end":92399,"line_start":53,"line_end":53,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format_description::FormatItem::Literal","value":"FormatItem::Literal(&'a [u8])","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" Bytes that are formatted as-is.","sig":null,"attributes":[{"value":"/ Bytes that are formatted as-is.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92199,"byte_end":92234,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92239,"byte_end":92242,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you call the `format` method that returns a `String`, these bytes will be","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92247,"byte_end":92337,"line_start":51,"line_end":51,"column_start":5,"column_end":95}},{"value":"/ passed through `String::from_utf8_lossy`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92342,"byte_end":92387,"line_start":52,"line_end":52,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2047},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92478,"byte_end":92487,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"Component","qualname":"::format_description::FormatItem::Component","value":"FormatItem::Component(Component)","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" A minimal representation of a single non-literal item.\n","sig":null,"attributes":[{"value":"/ A minimal representation of a single non-literal item.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92415,"byte_end":92473,"line_start":54,"line_end":54,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2050},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92613,"byte_end":92621,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Compound","qualname":"::format_description::FormatItem::Compound","value":"FormatItem::Compound(&'a [Self])","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" A series of literals or components that collectively form a partial or complete\n description.\n","sig":null,"attributes":[{"value":"/ A series of literals or components that collectively form a partial or complete","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92504,"byte_end":92587,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ description.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92592,"byte_end":92608,"line_start":57,"line_end":57,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":2042},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92178,"byte_end":92188,"line_start":48,"line_end":48,"column_start":10,"column_end":20},"name":"FormatItem","qualname":"::format_description::FormatItem","value":"pub enum FormatItem<'a> {\n    Literal(&'a [u8]),\n    Component(Component),\n    Compound(&'a [Self]),\n}","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2050}],"decl_id":null,"docs":" A complete description of how to format and parse a type.\n","sig":null,"attributes":[{"value":"/ A complete description of how to format and parse a type.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92006,"byte_end":92067,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92068,"byte_end":92085,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":550},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formatting","qualname":"::formatting","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/mod.rs","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":672},{"krate":0,"index":676},{"krate":0,"index":680},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736}],"decl_id":null,"docs":" Formatting for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":9898,"byte_end":9928,"line_start":300,"line_end":300,"column_start":1,"column_end":31}},{"value":"/ Formatting for various types.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/mod.rs","byte_start":120319,"byte_end":120352,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":587},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":135700,"byte_end":135711,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"Formattable","qualname":"::formatting::formattable::Formattable","value":"Formattable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be formatted.\n","sig":null,"attributes":[{"value":"/ A type that can be formatted.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":135656,"byte_end":135689,"line_start":11,"line_end":11,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":595},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":136230,"byte_end":136236,"line_start":25,"line_end":25,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::formatting::formattable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":598}],"decl_id":null,"docs":" Format the item using a format description, the intended output, and the various components.\n","sig":null,"attributes":[{"value":"/ Format the item using a format description, the intended output, and the various components.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":136053,"byte_end":136149,"line_start":23,"line_end":23,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":136343,"byte_end":136354,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"format_into","qualname":"::formatting::formattable::sealed::Sealed::format_into","value":"pub fn format_into<impl io::Write: io::Write>(&Self, &mut impl io::Write,\n                                              Option<Date>, Option<Time>,\n                                              Option<UtcOffset>)\n-> Result<usize, error::Format>","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Format the item into the provided output, returning the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Format the item into the provided output, returning the number of bytes written.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":136247,"byte_end":136331,"line_start":26,"line_end":26,"column_start":9,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":136626,"byte_end":136632,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"format","qualname":"::formatting::formattable::sealed::Sealed::format","value":"pub fn format(&Self, Option<Date>, Option<Time>, Option<UtcOffset>)\n-> Result<String, error::Format>","parent":{"krate":0,"index":595},"children":[],"decl_id":null,"docs":" Format the item directly to a `String`.\n","sig":null,"attributes":[{"value":"/ Format the item directly to a `String`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":136571,"byte_end":136614,"line_start":35,"line_end":35,"column_start":9,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2067},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143125,"byte_end":143132,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":141951,"byte_end":142051,"line_start":10,"line_end":10,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142052,"byte_end":142055,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured instant when created,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142056,"byte_end":142155,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ and are often useful for tasks such as measuring benchmarks or timing how long an operation","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142156,"byte_end":142251,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/ takes.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142252,"byte_end":142262,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142263,"byte_end":142266,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other words, each tick of","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142267,"byte_end":142365,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/ the underlying clock may not be the same length (e.g. some seconds may be longer than others).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142366,"byte_end":142464,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ An instant may jump forwards or experience time dilation (slow down or speed up), but it will","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142465,"byte_end":142562,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ never go backwards.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142563,"byte_end":142586,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142587,"byte_end":142590,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is no method to get","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142591,"byte_end":142688,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ \"the number of seconds\" from an instant. Instead, it only allows measuring the duration between","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142689,"byte_end":142788,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"/ two instants (or comparing two instants).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142789,"byte_end":142834,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142835,"byte_end":142838,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for operations with signed [`Duration`]s, but is otherwise identical","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142839,"byte_end":142938,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/ to [`std::time::Instant`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":142939,"byte_end":142969,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"repr(transparent)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143025,"byte_end":143045,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2069},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143133,"byte_end":143147,"line_start":30,"line_end":30,"column_start":20,"column_end":34},"name":"0","qualname":"::instant::Instant::0","value":"std::time::Instant","parent":{"krate":0,"index":2067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143363,"byte_end":143366,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\".","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143196,"byte_end":143244,"line_start":34,"line_end":34,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143249,"byte_end":143252,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143257,"byte_end":143268,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143273,"byte_end":143297,"line_start":37,"line_end":37,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", Instant::now());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143302,"byte_end":143339,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143344,"byte_end":143351,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143878,"byte_end":143885,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created. The duration will always\n be nonnegative if the instant is not synthetically created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created. The duration will always","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143422,"byte_end":143517,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ be nonnegative if the instant is not synthetically created.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143522,"byte_end":143585,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143590,"byte_end":143593,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143598,"byte_end":143609,"line_start":47,"line_end":47,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::{NumericalStdDuration, NumericalDuration}};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143614,"byte_end":143688,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ # use std::thread;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143693,"byte_end":143715,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/ let instant = Instant::now();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143720,"byte_end":143753,"line_start":50,"line_end":50,"column_start":5,"column_end":38}},{"value":"/ thread::sleep(1.std_milliseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143758,"byte_end":143798,"line_start":51,"line_end":51,"column_start":5,"column_end":45}},{"value":"/ assert!(instant.elapsed() >= 1.milliseconds());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143803,"byte_end":143854,"line_start":52,"line_end":52,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143859,"byte_end":143866,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144504,"byte_end":144515,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144006,"byte_end":144096,"line_start":60,"line_end":60,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144101,"byte_end":144192,"line_start":61,"line_end":61,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144197,"byte_end":144211,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144216,"byte_end":144219,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144224,"byte_end":144235,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144240,"byte_end":144290,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144295,"byte_end":144324,"line_start":66,"line_end":66,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_add(5.seconds()), Some(now + 5.seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144329,"byte_end":144399,"line_start":67,"line_end":67,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_add((-5).seconds()), Some(now + (-5).seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144404,"byte_end":144480,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144485,"byte_end":144492,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145367,"byte_end":145378,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144869,"byte_end":144959,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":144964,"byte_end":145055,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145060,"byte_end":145074,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145079,"byte_end":145082,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145087,"byte_end":145098,"line_start":85,"line_end":85,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145103,"byte_end":145153,"line_start":86,"line_end":86,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145158,"byte_end":145187,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_sub(5.seconds()), Some(now - 5.seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145192,"byte_end":145262,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_sub((-5).seconds()), Some(now - (-5).seconds()));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145267,"byte_end":145343,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145348,"byte_end":145355,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145712,"byte_end":145722,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<Instant>::into_inner","value":"pub const fn into_inner(Self) -> StdInstant","parent":null,"children":[],"decl_id":null,"docs":" Obtain the inner [`std::time::Instant`].","sig":null,"attributes":[{"value":"/ Obtain the inner [`std::time::Instant`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145506,"byte_end":145550,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145555,"byte_end":145558,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145563,"byte_end":145574,"line_start":98,"line_end":98,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145579,"byte_end":145603,"line_start":99,"line_end":99,"column_start":5,"column_end":29}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145608,"byte_end":145637,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.into_inner(), now.0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145642,"byte_end":145682,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145687,"byte_end":145694,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2102},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149237,"byte_end":149244,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2105},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149254,"byte_end":149262,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2108},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149272,"byte_end":149277,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2111},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149287,"byte_end":149292,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149302,"byte_end":149305,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2117},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149315,"byte_end":149319,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2120},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149329,"byte_end":149333,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2123},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149343,"byte_end":149349,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2126},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149359,"byte_end":149368,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2129},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149378,"byte_end":149385,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2132},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149396,"byte_end":149404,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2135},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149415,"byte_end":149423,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2101},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149225,"byte_end":149230,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"pub enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2111},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2135}],"decl_id":null,"docs":" Months of the year.\n","sig":null,"attributes":[{"value":"/ Months of the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149069,"byte_end":149092,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149093,"byte_end":149140,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"repr(u8)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149153,"byte_end":149164,"line_start":12,"line_end":12,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150380,"byte_end":150388,"line_start":61,"line_end":61,"column_start":18,"column_end":26},"name":"previous","qualname":"<Month>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous month.","sig":null,"attributes":[{"value":"/ Get the previous month.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150208,"byte_end":150235,"line_start":55,"line_end":55,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150240,"byte_end":150243,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150248,"byte_end":150259,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150264,"byte_end":150286,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.previous(), Month::December);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150291,"byte_end":150350,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150355,"byte_end":150362,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150975,"byte_end":150979,"line_start":84,"line_end":84,"column_start":18,"column_end":22},"name":"next","qualname":"<Month>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next month.","sig":null,"attributes":[{"value":"/ Get the next month.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150811,"byte_end":150834,"line_start":78,"line_end":78,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150839,"byte_end":150842,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150847,"byte_end":150858,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150863,"byte_end":150885,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.next(), Month::February);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150890,"byte_end":150945,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":150950,"byte_end":150957,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2152},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153502,"byte_end":153516,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"OffsetDateTime","qualname":"::offset_date_time::OffsetDateTime","value":"OffsetDateTime {  }","parent":null,"children":[{"krate":0,"index":2153},{"krate":0,"index":2154}],"decl_id":null,"docs":" A [`PrimitiveDateTime`] with a [`UtcOffset`].","sig":null,"attributes":[{"value":"/ A [`PrimitiveDateTime`] with a [`UtcOffset`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153117,"byte_end":153166,"line_start":22,"line_end":22,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153167,"byte_end":153170,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ All comparisons are performed using the UTC time.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153171,"byte_end":153224,"line_start":24,"line_end":24,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":916},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154002,"byte_end":154012,"line_start":43,"line_end":43,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::offset_date_time::OffsetDateTime::UNIX_EPOCH","value":"Self","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" Midnight, 1 January, 1970 (UTC).","sig":null,"attributes":[{"value":"/ Midnight, 1 January, 1970 (UTC).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153778,"byte_end":153814,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153819,"byte_end":153822,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153827,"byte_end":153838,"line_start":39,"line_end":39,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153843,"byte_end":153894,"line_start":40,"line_end":40,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(OffsetDateTime::UNIX_EPOCH, datetime!(1970-01-01 0:00 UTC),);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153899,"byte_end":153975,"line_start":41,"line_end":41,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153980,"byte_end":153987,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154523,"byte_end":154530,"line_start":57,"line_end":57,"column_start":12,"column_end":19},"name":"now_utc","qualname":"<OffsetDateTime>::now_utc","value":"pub fn now_utc() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OffsetDateTime` with the current date and time in UTC.","sig":null,"attributes":[{"value":"/ Create a new `OffsetDateTime` with the current date and time in UTC.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154133,"byte_end":154205,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154210,"byte_end":154213,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154218,"byte_end":154229,"line_start":50,"line_end":50,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154234,"byte_end":154283,"line_start":51,"line_end":51,"column_start":5,"column_end":54}},{"value":"/ assert!(OffsetDateTime::now_utc().year() >= 2019);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154288,"byte_end":154342,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(OffsetDateTime::now_utc().offset(), offset!(UTC));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154347,"byte_end":154412,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154417,"byte_end":154424,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":154429,"byte_end":154452,"line_start":55,"line_end":55,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156011,"byte_end":156020,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"name":"to_offset","qualname":"<OffsetDateTime>::to_offset","value":"pub const fn to_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155204,"byte_end":155298,"line_start":78,"line_end":78,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155303,"byte_end":155306,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155311,"byte_end":155322,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155327,"byte_end":155370,"line_start":81,"line_end":81,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155375,"byte_end":155390,"line_start":82,"line_end":82,"column_start":5,"column_end":20}},{"value":"/     datetime!(2000-01-01 0:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155395,"byte_end":155433,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155438,"byte_end":155473,"line_start":84,"line_end":84,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155478,"byte_end":155498,"line_start":85,"line_end":85,"column_start":5,"column_end":25}},{"value":"/     1999,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155503,"byte_end":155516,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155521,"byte_end":155527,"line_start":87,"line_end":87,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155532,"byte_end":155535,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ // Let's see what time Sydney's new year's celebration is in New York // and Los Angeles.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155540,"byte_end":155633,"line_start":89,"line_end":89,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155638,"byte_end":155641,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ // Construct midnight on new year's in Sydney.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155646,"byte_end":155696,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ let sydney = datetime!(2000-01-01 0:00 +11);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155701,"byte_end":155749,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/ let new_york = sydney.to_offset(offset!(-5));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155754,"byte_end":155803,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let los_angeles = sydney.to_offset(offset!(-8));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155808,"byte_end":155860,"line_start":94,"line_end":94,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(sydney.hour(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155865,"byte_end":155898,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(new_york.hour(), 8);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155903,"byte_end":155938,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(los_angeles.hour(), 5);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155943,"byte_end":155981,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":155986,"byte_end":155993,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":157202,"byte_end":157221,"line_start":134,"line_end":134,"column_start":18,"column_end":37},"name":"from_unix_timestamp","qualname":"<OffsetDateTime>::from_unix_timestamp","value":"pub const fn from_unix_timestamp(i64) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the\n resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156185,"byte_end":156276,"line_start":107,"line_end":107,"column_start":5,"column_end":96}},{"value":"/ resulting value is guaranteed to return UTC.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156281,"byte_end":156329,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156334,"byte_end":156337,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156342,"byte_end":156353,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156358,"byte_end":156409,"line_start":111,"line_end":111,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156414,"byte_end":156429,"line_start":112,"line_end":112,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(0),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156434,"byte_end":156481,"line_start":113,"line_end":113,"column_start":5,"column_end":52}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156486,"byte_end":156525,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156530,"byte_end":156536,"line_start":115,"line_end":115,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156541,"byte_end":156556,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(1_546_300_800),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156561,"byte_end":156620,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156625,"byte_end":156668,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156673,"byte_end":156679,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156684,"byte_end":156691,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156696,"byte_end":156699,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ If you have a timestamp-nanosecond pair, you can use something along the lines of the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156704,"byte_end":156793,"line_start":122,"line_end":122,"column_start":5,"column_end":94}},{"value":"/ following:","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156798,"byte_end":156812,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156817,"byte_end":156820,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156825,"byte_end":156836,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, OffsetDateTime, ext::NumericalDuration};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156841,"byte_end":156908,"line_start":126,"line_end":126,"column_start":5,"column_end":72}},{"value":"/ let (timestamp, nanos) = (1, 500_000_000);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156913,"byte_end":156959,"line_start":127,"line_end":127,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156964,"byte_end":156979,"line_start":128,"line_end":128,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(timestamp)? + Duration::nanoseconds(nanos),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":156984,"byte_end":157071,"line_start":129,"line_end":129,"column_start":5,"column_end":92}},{"value":"/     OffsetDateTime::UNIX_EPOCH + 1.5.seconds()","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":157076,"byte_end":157126,"line_start":130,"line_end":130,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":157131,"byte_end":157137,"line_start":131,"line_end":131,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":157142,"byte_end":157172,"line_start":132,"line_end":132,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":157177,"byte_end":157184,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158899,"byte_end":158924,"line_start":175,"line_end":175,"column_start":18,"column_end":43},"name":"from_unix_timestamp_nanos","qualname":"<OffsetDateTime>::from_unix_timestamp_nanos","value":"pub const fn from_unix_timestamp_nanos(i128)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling\n `.offset()` on the resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158331,"byte_end":158423,"line_start":161,"line_end":161,"column_start":5,"column_end":97}},{"value":"/ `.offset()` on the resulting value is guaranteed to return UTC.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158428,"byte_end":158495,"line_start":162,"line_end":162,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158500,"byte_end":158503,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158508,"byte_end":158519,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158524,"byte_end":158575,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158580,"byte_end":158595,"line_start":166,"line_end":166,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(0),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158600,"byte_end":158653,"line_start":167,"line_end":167,"column_start":5,"column_end":58}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158658,"byte_end":158697,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158702,"byte_end":158708,"line_start":169,"line_end":169,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158713,"byte_end":158728,"line_start":170,"line_end":170,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(1_546_300_800_000_000_000),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158733,"byte_end":158810,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158815,"byte_end":158858,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158863,"byte_end":158869,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":158874,"byte_end":158881,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159805,"byte_end":159811,"line_start":200,"line_end":200,"column_start":18,"column_end":24},"name":"offset","qualname":"<OffsetDateTime>::offset","value":"pub const fn offset(Self) -> UtcOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Get the [`UtcOffset`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159529,"byte_end":159555,"line_start":193,"line_end":193,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159560,"byte_end":159563,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159568,"byte_end":159579,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159584,"byte_end":159627,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).offset(), offset!(UTC));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159632,"byte_end":159702,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 +1).offset(), offset!(+1));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159707,"byte_end":159775,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159780,"byte_end":159787,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160173,"byte_end":160187,"line_start":211,"line_end":211,"column_start":18,"column_end":32},"name":"unix_timestamp","qualname":"<OffsetDateTime>::unix_timestamp","value":"pub const fn unix_timestamp(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","sig":null,"attributes":[{"value":"/ Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159864,"byte_end":159934,"line_start":204,"line_end":204,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159939,"byte_end":159942,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159947,"byte_end":159958,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":159963,"byte_end":159996,"line_start":207,"line_end":207,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160001,"byte_end":160068,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 -1).unix_timestamp(), 3_600);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160073,"byte_end":160143,"line_start":209,"line_end":209,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160148,"byte_end":160155,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160888,"byte_end":160908,"line_start":230,"line_end":230,"column_start":18,"column_end":38},"name":"unix_timestamp_nanos","qualname":"<OffsetDateTime>::unix_timestamp_nanos","value":"pub const fn unix_timestamp_nanos(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the Unix timestamp in nanoseconds.","sig":null,"attributes":[{"value":"/ Get the Unix timestamp in nanoseconds.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160550,"byte_end":160592,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160597,"byte_end":160600,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160605,"byte_end":160616,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/ use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160621,"byte_end":160652,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp_nanos(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160657,"byte_end":160730,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160735,"byte_end":160750,"line_start":225,"line_end":225,"column_start":5,"column_end":20}},{"value":"/     datetime!(1970-01-01 0:00 -1).unix_timestamp_nanos(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160755,"byte_end":160816,"line_start":226,"line_end":226,"column_start":5,"column_end":66}},{"value":"/     3_600_000_000_000,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160821,"byte_end":160847,"line_start":227,"line_end":227,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160852,"byte_end":160858,"line_start":228,"line_end":228,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":160863,"byte_end":160870,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161429,"byte_end":161433,"line_start":246,"line_end":246,"column_start":18,"column_end":22},"name":"date","qualname":"<OffsetDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Date`] in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161031,"byte_end":161073,"line_start":234,"line_end":234,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161078,"byte_end":161081,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161086,"byte_end":161097,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161102,"byte_end":161151,"line_start":237,"line_end":237,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).date(), date!(2019-01-01));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161156,"byte_end":161229,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161234,"byte_end":161249,"line_start":239,"line_end":239,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161254,"byte_end":161292,"line_start":240,"line_end":240,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161297,"byte_end":161332,"line_start":241,"line_end":241,"column_start":5,"column_end":40}},{"value":"/         .date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161337,"byte_end":161357,"line_start":242,"line_end":242,"column_start":5,"column_end":25}},{"value":"/     date!(2018-12-31),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161362,"byte_end":161388,"line_start":243,"line_end":243,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161393,"byte_end":161399,"line_start":244,"line_end":244,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":161404,"byte_end":161411,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162426,"byte_end":162430,"line_start":272,"line_end":272,"column_start":18,"column_end":22},"name":"time","qualname":"<OffsetDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Time`] in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162040,"byte_end":162082,"line_start":260,"line_end":260,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162087,"byte_end":162090,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162095,"byte_end":162106,"line_start":262,"line_end":262,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset, time};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162111,"byte_end":162160,"line_start":263,"line_end":263,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).time(), time!(0:00));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162165,"byte_end":162232,"line_start":264,"line_end":264,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162237,"byte_end":162252,"line_start":265,"line_end":265,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162257,"byte_end":162295,"line_start":266,"line_end":266,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162300,"byte_end":162335,"line_start":267,"line_end":267,"column_start":5,"column_end":40}},{"value":"/         .time(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162340,"byte_end":162360,"line_start":268,"line_end":268,"column_start":5,"column_end":25}},{"value":"/     time!(23:00)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162365,"byte_end":162385,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162390,"byte_end":162396,"line_start":270,"line_end":270,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":162401,"byte_end":162408,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163473,"byte_end":163477,"line_start":302,"line_end":302,"column_start":18,"column_end":22},"name":"year","qualname":"<OffsetDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the year of the date in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163033,"byte_end":163083,"line_start":289,"line_end":289,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163088,"byte_end":163091,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163096,"byte_end":163107,"line_start":291,"line_end":291,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163112,"byte_end":163155,"line_start":292,"line_end":292,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).year(), 2019);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163160,"byte_end":163220,"line_start":293,"line_end":293,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163225,"byte_end":163240,"line_start":294,"line_end":294,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163245,"byte_end":163284,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163289,"byte_end":163324,"line_start":296,"line_end":296,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163329,"byte_end":163349,"line_start":297,"line_end":297,"column_start":5,"column_end":25}},{"value":"/     2020,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163354,"byte_end":163367,"line_start":298,"line_end":298,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163372,"byte_end":163378,"line_start":299,"line_end":299,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).year(), 2020);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163383,"byte_end":163443,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":163448,"byte_end":163455,"line_start":301,"line_end":301,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164462,"byte_end":164467,"line_start":329,"line_end":329,"column_start":18,"column_end":23},"name":"month","qualname":"<OffsetDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the month of the date in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164037,"byte_end":164088,"line_start":316,"line_end":316,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164093,"byte_end":164096,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164101,"byte_end":164112,"line_start":318,"line_end":318,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164117,"byte_end":164139,"line_start":319,"line_end":319,"column_start":5,"column_end":27}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164144,"byte_end":164187,"line_start":320,"line_end":320,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).month(), Month::January);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164192,"byte_end":164263,"line_start":321,"line_end":321,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164268,"byte_end":164283,"line_start":322,"line_end":322,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164288,"byte_end":164327,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164332,"byte_end":164367,"line_start":324,"line_end":324,"column_start":5,"column_end":40}},{"value":"/         .month(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164372,"byte_end":164393,"line_start":325,"line_end":325,"column_start":5,"column_end":26}},{"value":"/     Month::January,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164398,"byte_end":164421,"line_start":326,"line_end":326,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164426,"byte_end":164432,"line_start":327,"line_end":327,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164437,"byte_end":164444,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164963,"byte_end":164966,"line_start":347,"line_end":347,"column_start":18,"column_end":21},"name":"day","qualname":"<OffsetDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the date in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164524,"byte_end":164573,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164578,"byte_end":164581,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164586,"byte_end":164646,"line_start":335,"line_end":335,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164651,"byte_end":164654,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164659,"byte_end":164670,"line_start":337,"line_end":337,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164675,"byte_end":164718,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).day(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164723,"byte_end":164779,"line_start":339,"line_end":339,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164784,"byte_end":164799,"line_start":340,"line_end":340,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164804,"byte_end":164843,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164848,"byte_end":164883,"line_start":342,"line_end":342,"column_start":5,"column_end":40}},{"value":"/         .day(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164888,"byte_end":164907,"line_start":343,"line_end":343,"column_start":5,"column_end":24}},{"value":"/     1,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164912,"byte_end":164922,"line_start":344,"line_end":344,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164927,"byte_end":164933,"line_start":345,"line_end":345,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":164938,"byte_end":164945,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165478,"byte_end":165485,"line_start":365,"line_end":365,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<OffsetDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the year of the date in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165018,"byte_end":165079,"line_start":351,"line_end":351,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165084,"byte_end":165087,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165092,"byte_end":165153,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165158,"byte_end":165161,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165166,"byte_end":165177,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165182,"byte_end":165225,"line_start":356,"line_end":356,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).ordinal(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165230,"byte_end":165290,"line_start":357,"line_end":357,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165295,"byte_end":165310,"line_start":358,"line_end":358,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165315,"byte_end":165354,"line_start":359,"line_end":359,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165359,"byte_end":165394,"line_start":360,"line_end":360,"column_start":5,"column_end":40}},{"value":"/         .ordinal(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165399,"byte_end":165422,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/     1,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165427,"byte_end":165437,"line_start":362,"line_end":362,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165442,"byte_end":165448,"line_start":363,"line_end":363,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":165453,"byte_end":165460,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166540,"byte_end":166548,"line_start":390,"line_end":390,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<OffsetDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the ISO week number of the date in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166048,"byte_end":166109,"line_start":379,"line_end":379,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166114,"byte_end":166117,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166122,"byte_end":166182,"line_start":381,"line_end":381,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166187,"byte_end":166190,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166195,"byte_end":166206,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166211,"byte_end":166244,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166249,"byte_end":166310,"line_start":385,"line_end":385,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166315,"byte_end":166376,"line_start":386,"line_end":386,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).iso_week(), 53);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166381,"byte_end":166443,"line_start":387,"line_end":387,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).iso_week(), 53);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166448,"byte_end":166510,"line_start":388,"line_end":388,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166515,"byte_end":166522,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167135,"byte_end":167152,"line_start":405,"line_end":405,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<OffsetDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166605,"byte_end":166669,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166674,"byte_end":166677,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166682,"byte_end":166742,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166747,"byte_end":166750,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166755,"byte_end":166766,"line_start":398,"line_end":398,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166771,"byte_end":166804,"line_start":399,"line_end":399,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166809,"byte_end":166879,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166884,"byte_end":166954,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).sunday_based_week(), 52);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":166959,"byte_end":167030,"line_start":402,"line_end":402,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167035,"byte_end":167105,"line_start":403,"line_end":403,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167110,"byte_end":167117,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167748,"byte_end":167765,"line_start":420,"line_end":420,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<OffsetDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167218,"byte_end":167282,"line_start":409,"line_end":409,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167287,"byte_end":167290,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167295,"byte_end":167355,"line_start":411,"line_end":411,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167360,"byte_end":167363,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167368,"byte_end":167379,"line_start":413,"line_end":413,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167384,"byte_end":167417,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167422,"byte_end":167492,"line_start":415,"line_end":415,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167497,"byte_end":167567,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).monday_based_week(), 52);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167572,"byte_end":167643,"line_start":417,"line_end":417,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167648,"byte_end":167718,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167723,"byte_end":167730,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168097,"byte_end":168113,"line_start":433,"line_end":433,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<OffsetDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167831,"byte_end":167864,"line_start":424,"line_end":424,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167869,"byte_end":167872,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167877,"byte_end":167888,"line_start":426,"line_end":426,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167893,"byte_end":167935,"line_start":427,"line_end":427,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167940,"byte_end":167955,"line_start":428,"line_end":428,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_calendar_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":167960,"byte_end":168018,"line_start":429,"line_end":429,"column_start":5,"column_end":63}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168023,"byte_end":168056,"line_start":430,"line_end":430,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168061,"byte_end":168067,"line_start":431,"line_end":431,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168072,"byte_end":168079,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168439,"byte_end":168454,"line_start":446,"line_end":446,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<OffsetDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168192,"byte_end":168232,"line_start":437,"line_end":437,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168237,"byte_end":168240,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168245,"byte_end":168256,"line_start":439,"line_end":439,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168261,"byte_end":168294,"line_start":440,"line_end":440,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168299,"byte_end":168314,"line_start":441,"line_end":441,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_ordinal_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168319,"byte_end":168376,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/     (2019, 1)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168381,"byte_end":168398,"line_start":443,"line_end":443,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168403,"byte_end":168409,"line_start":444,"line_end":444,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168414,"byte_end":168421,"line_start":445,"line_end":445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169313,"byte_end":169329,"line_start":475,"line_end":475,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<OffsetDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168526,"byte_end":168578,"line_start":450,"line_end":450,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168583,"byte_end":168586,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168591,"byte_end":168602,"line_start":452,"line_end":452,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168607,"byte_end":168654,"line_start":453,"line_end":453,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168659,"byte_end":168674,"line_start":454,"line_end":454,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168679,"byte_end":168737,"line_start":455,"line_end":455,"column_start":5,"column_end":63}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168742,"byte_end":168768,"line_start":456,"line_end":456,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168773,"byte_end":168779,"line_start":457,"line_end":457,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168784,"byte_end":168799,"line_start":458,"line_end":458,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168804,"byte_end":168862,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168867,"byte_end":168893,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168898,"byte_end":168904,"line_start":461,"line_end":461,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168909,"byte_end":168924,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168929,"byte_end":168987,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":168992,"byte_end":169020,"line_start":464,"line_end":464,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169025,"byte_end":169031,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169036,"byte_end":169051,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169056,"byte_end":169114,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169119,"byte_end":169147,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169152,"byte_end":169158,"line_start":469,"line_end":469,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169163,"byte_end":169178,"line_start":470,"line_end":470,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169183,"byte_end":169241,"line_start":471,"line_end":471,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169246,"byte_end":169272,"line_start":472,"line_end":472,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169277,"byte_end":169283,"line_start":473,"line_end":473,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169288,"byte_end":169295,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169780,"byte_end":169787,"line_start":487,"line_end":487,"column_start":18,"column_end":25},"name":"weekday","qualname":"<OffsetDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the weekday of the date in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169410,"byte_end":169463,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169468,"byte_end":169471,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169476,"byte_end":169487,"line_start":481,"line_end":481,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169492,"byte_end":169539,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).weekday(), Tuesday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169544,"byte_end":169610,"line_start":483,"line_end":483,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169615,"byte_end":169680,"line_start":484,"line_end":484,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169685,"byte_end":169750,"line_start":485,"line_end":485,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169755,"byte_end":169762,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170550,"byte_end":170563,"line_start":503,"line_end":503,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<OffsetDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169848,"byte_end":169941,"line_start":491,"line_end":491,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169946,"byte_end":169949,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":169954,"byte_end":170048,"line_start":493,"line_end":493,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170053,"byte_end":170149,"line_start":494,"line_end":494,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170154,"byte_end":170157,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170162,"byte_end":170173,"line_start":496,"line_end":496,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170178,"byte_end":170211,"line_start":497,"line_end":497,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00 UTC).to_julian_day(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170216,"byte_end":170283,"line_start":498,"line_end":498,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00 UTC).to_julian_day(), 2_451_545);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170288,"byte_end":170362,"line_start":499,"line_end":499,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).to_julian_day(), 2_458_485);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170367,"byte_end":170441,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00 UTC).to_julian_day(), 2_458_849);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170446,"byte_end":170520,"line_start":501,"line_end":501,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170525,"byte_end":170532,"line_start":502,"line_end":502,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170973,"byte_end":170979,"line_start":516,"line_end":516,"column_start":18,"column_end":24},"name":"to_hms","qualname":"<OffsetDateTime>::to_hms","value":"pub const fn to_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170684,"byte_end":170727,"line_start":509,"line_end":509,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170732,"byte_end":170735,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170740,"byte_end":170751,"line_start":511,"line_end":511,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170756,"byte_end":170789,"line_start":512,"line_end":512,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00 UTC).to_hms(), (0, 0, 0));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170794,"byte_end":170864,"line_start":513,"line_end":513,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59 UTC).to_hms(), (23, 59, 59));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170869,"byte_end":170943,"line_start":514,"line_end":514,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":170948,"byte_end":170955,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171438,"byte_end":171450,"line_start":533,"line_end":533,"column_start":18,"column_end":30},"name":"to_hms_milli","qualname":"<OffsetDateTime>::to_hms_milli","value":"pub const fn to_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171044,"byte_end":171100,"line_start":520,"line_end":520,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171105,"byte_end":171108,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171113,"byte_end":171124,"line_start":522,"line_end":522,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171129,"byte_end":171162,"line_start":523,"line_end":523,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171167,"byte_end":171182,"line_start":524,"line_end":524,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_milli(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171187,"byte_end":171244,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171249,"byte_end":171269,"line_start":526,"line_end":526,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171274,"byte_end":171280,"line_start":527,"line_end":527,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171285,"byte_end":171300,"line_start":528,"line_end":528,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999 UTC).to_hms_milli(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171305,"byte_end":171367,"line_start":529,"line_end":529,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171372,"byte_end":171397,"line_start":530,"line_end":530,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171402,"byte_end":171408,"line_start":531,"line_end":531,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171413,"byte_end":171420,"line_start":532,"line_end":532,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171928,"byte_end":171940,"line_start":550,"line_end":550,"column_start":18,"column_end":30},"name":"to_hms_micro","qualname":"<OffsetDateTime>::to_hms_micro","value":"pub const fn to_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171526,"byte_end":171582,"line_start":537,"line_end":537,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171587,"byte_end":171590,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171595,"byte_end":171606,"line_start":539,"line_end":539,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171611,"byte_end":171644,"line_start":540,"line_end":540,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171649,"byte_end":171664,"line_start":541,"line_end":541,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_micro(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171669,"byte_end":171726,"line_start":542,"line_end":542,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171731,"byte_end":171751,"line_start":543,"line_end":543,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171756,"byte_end":171762,"line_start":544,"line_end":544,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171767,"byte_end":171782,"line_start":545,"line_end":545,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999 UTC).to_hms_micro(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171787,"byte_end":171853,"line_start":546,"line_end":546,"column_start":5,"column_end":71}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171858,"byte_end":171887,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171892,"byte_end":171898,"line_start":548,"line_end":548,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":171903,"byte_end":171910,"line_start":549,"line_end":549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172423,"byte_end":172434,"line_start":567,"line_end":567,"column_start":18,"column_end":29},"name":"to_hms_nano","qualname":"<OffsetDateTime>::to_hms_nano","value":"pub const fn to_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172016,"byte_end":172071,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172076,"byte_end":172079,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172084,"byte_end":172095,"line_start":556,"line_end":556,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172100,"byte_end":172133,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172138,"byte_end":172153,"line_start":558,"line_end":558,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_nano(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172158,"byte_end":172214,"line_start":559,"line_end":559,"column_start":5,"column_end":61}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172219,"byte_end":172239,"line_start":560,"line_end":560,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172244,"byte_end":172250,"line_start":561,"line_end":561,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172255,"byte_end":172270,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999 UTC).to_hms_nano(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172275,"byte_end":172344,"line_start":563,"line_end":563,"column_start":5,"column_end":74}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172349,"byte_end":172382,"line_start":564,"line_end":564,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172387,"byte_end":172393,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172398,"byte_end":172405,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172948,"byte_end":172952,"line_start":585,"line_end":585,"column_start":18,"column_end":22},"name":"hour","qualname":"<OffsetDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the clock hour in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172509,"byte_end":172553,"line_start":571,"line_end":571,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172558,"byte_end":172561,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172566,"byte_end":172625,"line_start":573,"line_end":573,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172630,"byte_end":172633,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172638,"byte_end":172649,"line_start":575,"line_end":575,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172654,"byte_end":172697,"line_start":576,"line_end":576,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).hour(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172702,"byte_end":172759,"line_start":577,"line_end":577,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172764,"byte_end":172779,"line_start":578,"line_end":578,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172784,"byte_end":172826,"line_start":579,"line_end":579,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(-2))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172831,"byte_end":172866,"line_start":580,"line_end":580,"column_start":5,"column_end":40}},{"value":"/         .hour(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172871,"byte_end":172891,"line_start":581,"line_end":581,"column_start":5,"column_end":25}},{"value":"/     21,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172896,"byte_end":172907,"line_start":582,"line_end":582,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172912,"byte_end":172918,"line_start":583,"line_end":583,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":172923,"byte_end":172930,"line_start":584,"line_end":584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173831,"byte_end":173837,"line_start":609,"line_end":609,"column_start":18,"column_end":24},"name":"minute","qualname":"<OffsetDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the minute within the hour in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173373,"byte_end":173429,"line_start":595,"line_end":595,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173434,"byte_end":173437,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173442,"byte_end":173501,"line_start":597,"line_end":597,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173506,"byte_end":173509,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173514,"byte_end":173525,"line_start":599,"line_end":599,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173530,"byte_end":173573,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).minute(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173578,"byte_end":173637,"line_start":601,"line_end":601,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173642,"byte_end":173657,"line_start":602,"line_end":602,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173662,"byte_end":173704,"line_start":603,"line_end":603,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:30))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173709,"byte_end":173747,"line_start":604,"line_end":604,"column_start":5,"column_end":43}},{"value":"/         .minute(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173752,"byte_end":173774,"line_start":605,"line_end":605,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173779,"byte_end":173790,"line_start":606,"line_end":606,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173795,"byte_end":173801,"line_start":607,"line_end":607,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":173806,"byte_end":173813,"line_start":608,"line_end":608,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174597,"byte_end":174603,"line_start":631,"line_end":631,"column_start":18,"column_end":24},"name":"second","qualname":"<OffsetDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute in the stored offset.","sig":null,"attributes":[{"value":"/ Get the second within the minute in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174134,"byte_end":174192,"line_start":617,"line_end":617,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174197,"byte_end":174200,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174205,"byte_end":174264,"line_start":619,"line_end":619,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174269,"byte_end":174272,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174277,"byte_end":174288,"line_start":621,"line_end":621,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174293,"byte_end":174336,"line_start":622,"line_end":622,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).second(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174341,"byte_end":174400,"line_start":623,"line_end":623,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174405,"byte_end":174420,"line_start":624,"line_end":624,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174425,"byte_end":174467,"line_start":625,"line_end":625,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:00:30))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174472,"byte_end":174513,"line_start":626,"line_end":626,"column_start":5,"column_end":46}},{"value":"/         .second(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174518,"byte_end":174540,"line_start":627,"line_end":627,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174545,"byte_end":174556,"line_start":628,"line_end":628,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174561,"byte_end":174567,"line_start":629,"line_end":629,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174572,"byte_end":174579,"line_start":630,"line_end":630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175280,"byte_end":175291,"line_start":648,"line_end":648,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<OffsetDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174901,"byte_end":174965,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174970,"byte_end":174973,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":174978,"byte_end":175040,"line_start":641,"line_end":641,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175045,"byte_end":175048,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175053,"byte_end":175064,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175069,"byte_end":175102,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).millisecond(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175107,"byte_end":175171,"line_start":645,"line_end":645,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999 UTC).millisecond(), 999);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175176,"byte_end":175250,"line_start":646,"line_end":646,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175255,"byte_end":175262,"line_start":647,"line_end":647,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175784,"byte_end":175795,"line_start":664,"line_end":664,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<OffsetDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175358,"byte_end":175422,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175427,"byte_end":175430,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175435,"byte_end":175501,"line_start":654,"line_end":654,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175506,"byte_end":175509,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175514,"byte_end":175525,"line_start":656,"line_end":656,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175530,"byte_end":175563,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).microsecond(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175568,"byte_end":175632,"line_start":658,"line_end":658,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175637,"byte_end":175652,"line_start":659,"line_end":659,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999 UTC).microsecond(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175657,"byte_end":175722,"line_start":660,"line_end":660,"column_start":5,"column_end":70}},{"value":"/     999_999,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175727,"byte_end":175743,"line_start":661,"line_end":661,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175748,"byte_end":175754,"line_start":662,"line_end":662,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175759,"byte_end":175766,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176297,"byte_end":176307,"line_start":680,"line_end":680,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<OffsetDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second in the stored offset.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175862,"byte_end":175925,"line_start":668,"line_end":668,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175930,"byte_end":175933,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":175938,"byte_end":176008,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176013,"byte_end":176016,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176021,"byte_end":176032,"line_start":672,"line_end":672,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176037,"byte_end":176070,"line_start":673,"line_end":673,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).nanosecond(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176075,"byte_end":176138,"line_start":674,"line_end":674,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176143,"byte_end":176158,"line_start":675,"line_end":675,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999 UTC).nanosecond(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176163,"byte_end":176231,"line_start":676,"line_end":676,"column_start":5,"column_end":73}},{"value":"/     999_999_999,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176236,"byte_end":176256,"line_start":677,"line_end":677,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176261,"byte_end":176267,"line_start":678,"line_end":678,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176272,"byte_end":176279,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177262,"byte_end":177274,"line_start":709,"line_end":709,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<OffsetDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, which is assumed to be in the stored offset. The date and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the time, which is assumed to be in the stored offset. The date and offset","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176530,"byte_end":176616,"line_start":690,"line_end":690,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176621,"byte_end":176650,"line_start":691,"line_end":691,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176655,"byte_end":176658,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176663,"byte_end":176674,"line_start":693,"line_end":693,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176679,"byte_end":176720,"line_start":694,"line_end":694,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176725,"byte_end":176740,"line_start":695,"line_end":695,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 5:00 UTC).replace_time(time!(12:00)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176745,"byte_end":176811,"line_start":696,"line_end":696,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-01 12:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176816,"byte_end":176855,"line_start":697,"line_end":697,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176860,"byte_end":176866,"line_start":698,"line_end":698,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176871,"byte_end":176886,"line_start":699,"line_end":699,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 -5).replace_time(time!(7:00)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176891,"byte_end":176956,"line_start":700,"line_end":700,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 7:00 -5)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176961,"byte_end":176998,"line_start":701,"line_end":701,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177003,"byte_end":177009,"line_start":702,"line_end":702,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177014,"byte_end":177029,"line_start":703,"line_end":703,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_time(time!(12:00)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177034,"byte_end":177099,"line_start":704,"line_end":704,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 12:00 +1)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177104,"byte_end":177142,"line_start":705,"line_end":705,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177147,"byte_end":177153,"line_start":706,"line_end":706,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177158,"byte_end":177165,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177170,"byte_end":177244,"line_start":708,"line_end":708,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178051,"byte_end":178063,"line_start":731,"line_end":731,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<OffsetDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, which is assumed to be in the stored offset. The time and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the date, which is assumed to be in the stored offset. The time and offset","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177452,"byte_end":177538,"line_start":716,"line_end":716,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177543,"byte_end":177572,"line_start":717,"line_end":717,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177577,"byte_end":177580,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177585,"byte_end":177596,"line_start":719,"line_end":719,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177601,"byte_end":177642,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177647,"byte_end":177662,"line_start":721,"line_end":721,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date(date!(2020-01-30)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177667,"byte_end":177739,"line_start":722,"line_end":722,"column_start":5,"column_end":77}},{"value":"/     datetime!(2020-01-30 12:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177744,"byte_end":177783,"line_start":723,"line_end":723,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177788,"byte_end":177794,"line_start":724,"line_end":724,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177799,"byte_end":177814,"line_start":725,"line_end":725,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_date(date!(2020-01-30)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177819,"byte_end":177889,"line_start":726,"line_end":726,"column_start":5,"column_end":75}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177894,"byte_end":177931,"line_start":727,"line_end":727,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177936,"byte_end":177942,"line_start":728,"line_end":728,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177947,"byte_end":177954,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":177959,"byte_end":178033,"line_start":730,"line_end":730,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178866,"byte_end":178883,"line_start":753,"line_end":753,"column_start":18,"column_end":35},"name":"replace_date_time","qualname":"<OffsetDateTime>::replace_date_time","value":"pub const fn replace_date_time(Self, PrimitiveDateTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date and time, which are assumed to be in the stored offset. The offset\n component remains unchanged.","sig":null,"attributes":[{"value":"/ Replace the date and time, which are assumed to be in the stored offset. The offset","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178241,"byte_end":178328,"line_start":738,"line_end":738,"column_start":5,"column_end":92}},{"value":"/ component remains unchanged.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178333,"byte_end":178365,"line_start":739,"line_end":739,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178370,"byte_end":178373,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178378,"byte_end":178389,"line_start":741,"line_end":741,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178394,"byte_end":178427,"line_start":742,"line_end":742,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178432,"byte_end":178447,"line_start":743,"line_end":743,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date_time(datetime!(2020-01-30 16:00)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178452,"byte_end":178539,"line_start":744,"line_end":744,"column_start":5,"column_end":92}},{"value":"/     datetime!(2020-01-30 16:00 UTC)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178544,"byte_end":178583,"line_start":745,"line_end":745,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178588,"byte_end":178594,"line_start":746,"line_end":746,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178599,"byte_end":178614,"line_start":747,"line_end":747,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 +1).replace_date_time(datetime!(2020-01-30 0:00)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178619,"byte_end":178704,"line_start":748,"line_end":748,"column_start":5,"column_end":90}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178709,"byte_end":178746,"line_start":749,"line_end":749,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178751,"byte_end":178757,"line_start":750,"line_end":750,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178762,"byte_end":178769,"line_start":751,"line_end":751,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178774,"byte_end":178848,"line_start":752,"line_end":752,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179382,"byte_end":179396,"line_start":767,"line_end":767,"column_start":18,"column_end":32},"name":"replace_offset","qualname":"<OffsetDateTime>::replace_offset","value":"pub const fn replace_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the offset. The date and time components remain unchanged.","sig":null,"attributes":[{"value":"/ Replace the offset. The date and time components remain unchanged.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":178986,"byte_end":179056,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179061,"byte_end":179064,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179069,"byte_end":179080,"line_start":759,"line_end":759,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179085,"byte_end":179128,"line_start":760,"line_end":760,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179133,"byte_end":179148,"line_start":761,"line_end":761,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).replace_offset(offset!(-5)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179153,"byte_end":179220,"line_start":762,"line_end":762,"column_start":5,"column_end":72}},{"value":"/     datetime!(2020-01-01 0:00 -5)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179225,"byte_end":179262,"line_start":763,"line_end":763,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179267,"byte_end":179273,"line_start":764,"line_end":764,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179278,"byte_end":179285,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179290,"byte_end":179364,"line_start":766,"line_end":766,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179784,"byte_end":179795,"line_start":779,"line_end":779,"column_start":12,"column_end":23},"name":"format_into","qualname":"<OffsetDateTime>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable: Formattable>(Self, &mut impl io::Write,\n                                                  &impl Formattable)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179665,"byte_end":179723,"line_start":777,"line_end":777,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179728,"byte_end":179772,"line_start":778,"line_end":778,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180746,"byte_end":180752,"line_start":808,"line_end":808,"column_start":12,"column_end":18},"name":"format","qualname":"<OffsetDateTime>::format","value":"pub fn format<impl Formattable: Formattable>(Self, &impl Formattable)\n-> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180149,"byte_end":180207,"line_start":793,"line_end":793,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180212,"byte_end":180256,"line_start":794,"line_end":794,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180261,"byte_end":180264,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180269,"byte_end":180280,"line_start":796,"line_end":796,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180285,"byte_end":180340,"line_start":797,"line_end":797,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180345,"byte_end":180388,"line_start":798,"line_end":798,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180393,"byte_end":180462,"line_start":799,"line_end":799,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180467,"byte_end":180529,"line_start":800,"line_end":800,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180534,"byte_end":180541,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180546,"byte_end":180561,"line_start":802,"line_end":802,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08).format(&format)?,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180566,"byte_end":180632,"line_start":803,"line_end":803,"column_start":5,"column_end":71}},{"value":"/     \"2020-01-02 03:04:05 +06:07:08\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180637,"byte_end":180676,"line_start":804,"line_end":804,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180681,"byte_end":180687,"line_start":805,"line_end":805,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180692,"byte_end":180722,"line_start":806,"line_end":806,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":180727,"byte_end":180734,"line_start":807,"line_end":807,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2175},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187542,"byte_end":187559,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"PrimitiveDateTime","qualname":"::primitive_date_time::PrimitiveDateTime","value":"PrimitiveDateTime {  }","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177}],"decl_id":null,"docs":" Combined date and time.\n","sig":null,"attributes":[{"value":"/ Combined date and time.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187435,"byte_end":187462,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188095,"byte_end":188098,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"name":"new","qualname":"<PrimitiveDateTime>::new","value":"pub const fn new(Date, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","sig":null,"attributes":[{"value":"/ Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187752,"byte_end":187829,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187834,"byte_end":187837,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187842,"byte_end":187853,"line_start":27,"line_end":27,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::{date, datetime, time}};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187858,"byte_end":187926,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187931,"byte_end":187946,"line_start":29,"line_end":29,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::new(date!(2019-01-01), time!(0:00)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187951,"byte_end":188014,"line_start":30,"line_end":30,"column_start":5,"column_end":68}},{"value":"/     datetime!(2019-01-01 0:00),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188019,"byte_end":188054,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188059,"byte_end":188065,"line_start":32,"line_end":32,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188070,"byte_end":188077,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188437,"byte_end":188441,"line_start":45,"line_end":45,"column_start":18,"column_end":22},"name":"date","qualname":"<PrimitiveDateTime>::date","value":"pub const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Date`] component of the `PrimitiveDateTime`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188205,"byte_end":188263,"line_start":39,"line_end":39,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188268,"byte_end":188271,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188276,"byte_end":188287,"line_start":41,"line_end":41,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188292,"byte_end":188333,"line_start":42,"line_end":42,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).date(), date!(2019-01-01));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188338,"byte_end":188407,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188412,"byte_end":188419,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188701,"byte_end":188705,"line_start":54,"line_end":54,"column_start":18,"column_end":22},"name":"time","qualname":"<PrimitiveDateTime>::time","value":"pub const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Time`] component of the `PrimitiveDateTime`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188487,"byte_end":188545,"line_start":49,"line_end":49,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188550,"byte_end":188553,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188558,"byte_end":188569,"line_start":51,"line_end":51,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188574,"byte_end":188615,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).time(), time!(0:00));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188620,"byte_end":188683,"line_start":53,"line_end":53,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189118,"byte_end":189122,"line_start":68,"line_end":68,"column_start":18,"column_end":22},"name":"year","qualname":"<PrimitiveDateTime>::year","value":"pub const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188814,"byte_end":188843,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188848,"byte_end":188851,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188856,"byte_end":188867,"line_start":62,"line_end":62,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188872,"byte_end":188905,"line_start":63,"line_end":63,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).year(), 2019);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188910,"byte_end":188966,"line_start":64,"line_end":64,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).year(), 2019);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":188971,"byte_end":189027,"line_start":65,"line_end":65,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).year(), 2020);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189032,"byte_end":189088,"line_start":66,"line_end":66,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189093,"byte_end":189100,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189450,"byte_end":189455,"line_start":79,"line_end":79,"column_start":18,"column_end":23},"name":"month","qualname":"<PrimitiveDateTime>::month","value":"pub const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date.","sig":null,"attributes":[{"value":"/ Get the month of the date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189174,"byte_end":189204,"line_start":72,"line_end":72,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189209,"byte_end":189212,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189217,"byte_end":189228,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189233,"byte_end":189275,"line_start":75,"line_end":75,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).month(), Month::January);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189280,"byte_end":189347,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).month(), Month::December);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189352,"byte_end":189420,"line_start":77,"line_end":77,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189425,"byte_end":189432,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189818,"byte_end":189821,"line_start":92,"line_end":92,"column_start":18,"column_end":21},"name":"day","qualname":"<PrimitiveDateTime>::day","value":"pub const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date.","sig":null,"attributes":[{"value":"/ Get the day of the date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189510,"byte_end":189538,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189543,"byte_end":189546,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189551,"byte_end":189611,"line_start":85,"line_end":85,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189616,"byte_end":189619,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189624,"byte_end":189635,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189640,"byte_end":189673,"line_start":88,"line_end":88,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).day(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189678,"byte_end":189730,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).day(), 31);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189735,"byte_end":189788,"line_start":90,"line_end":90,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189793,"byte_end":189800,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190218,"byte_end":190225,"line_start":105,"line_end":105,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<PrimitiveDateTime>::ordinal","value":"pub const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189871,"byte_end":189899,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189904,"byte_end":189907,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":189912,"byte_end":190002,"line_start":98,"line_end":98,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190007,"byte_end":190010,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190015,"byte_end":190026,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190031,"byte_end":190064,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).ordinal(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190069,"byte_end":190125,"line_start":102,"line_end":102,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).ordinal(), 365);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190130,"byte_end":190188,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190193,"byte_end":190200,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190786,"byte_end":190794,"line_start":121,"line_end":121,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<PrimitiveDateTime>::iso_week","value":"pub const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190280,"byte_end":190308,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190313,"byte_end":190316,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190321,"byte_end":190381,"line_start":111,"line_end":111,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190386,"byte_end":190389,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190394,"byte_end":190405,"line_start":113,"line_end":113,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190410,"byte_end":190443,"line_start":114,"line_end":114,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).iso_week(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190448,"byte_end":190505,"line_start":115,"line_end":115,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2019-10-04 0:00).iso_week(), 40);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190510,"byte_end":190568,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).iso_week(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190573,"byte_end":190630,"line_start":117,"line_end":117,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).iso_week(), 53);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190635,"byte_end":190693,"line_start":118,"line_end":118,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).iso_week(), 53);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190698,"byte_end":190756,"line_start":119,"line_end":119,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190761,"byte_end":190768,"line_start":120,"line_end":120,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191363,"byte_end":191380,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<PrimitiveDateTime>::sunday_based_week","value":"pub const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190849,"byte_end":190913,"line_start":125,"line_end":125,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190918,"byte_end":190921,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190926,"byte_end":190986,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190991,"byte_end":190994,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":190999,"byte_end":191010,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191015,"byte_end":191048,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191053,"byte_end":191119,"line_start":131,"line_end":131,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191124,"byte_end":191190,"line_start":132,"line_end":132,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).sunday_based_week(), 52);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191195,"byte_end":191262,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191267,"byte_end":191333,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191338,"byte_end":191345,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191958,"byte_end":191975,"line_start":151,"line_end":151,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<PrimitiveDateTime>::monday_based_week","value":"pub const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191444,"byte_end":191508,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191513,"byte_end":191516,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191521,"byte_end":191581,"line_start":142,"line_end":142,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191586,"byte_end":191589,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191594,"byte_end":191605,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191610,"byte_end":191643,"line_start":145,"line_end":145,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191648,"byte_end":191714,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191719,"byte_end":191785,"line_start":147,"line_end":147,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).monday_based_week(), 52);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191790,"byte_end":191857,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191862,"byte_end":191928,"line_start":149,"line_end":149,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":191933,"byte_end":191940,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192301,"byte_end":192317,"line_start":164,"line_end":164,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<PrimitiveDateTime>::to_calendar_date","value":"pub const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192039,"byte_end":192072,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192077,"byte_end":192080,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192085,"byte_end":192096,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192101,"byte_end":192143,"line_start":158,"line_end":158,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192148,"byte_end":192163,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_calendar_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192168,"byte_end":192222,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192227,"byte_end":192260,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192265,"byte_end":192271,"line_start":162,"line_end":162,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192276,"byte_end":192283,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192603,"byte_end":192618,"line_start":174,"line_end":174,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<PrimitiveDateTime>::to_ordinal_date","value":"pub const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192394,"byte_end":192434,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192439,"byte_end":192442,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192447,"byte_end":192458,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192463,"byte_end":192496,"line_start":171,"line_end":171,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_ordinal_date(), (2019, 1));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192501,"byte_end":192573,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192578,"byte_end":192585,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193455,"byte_end":193471,"line_start":203,"line_end":203,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<PrimitiveDateTime>::to_iso_week_date","value":"pub const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192688,"byte_end":192740,"line_start":178,"line_end":178,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192745,"byte_end":192748,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192753,"byte_end":192764,"line_start":180,"line_end":180,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192769,"byte_end":192816,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192821,"byte_end":192836,"line_start":182,"line_end":182,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192841,"byte_end":192895,"line_start":183,"line_end":183,"column_start":5,"column_end":59}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192900,"byte_end":192926,"line_start":184,"line_end":184,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192931,"byte_end":192937,"line_start":185,"line_end":185,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192942,"byte_end":192957,"line_start":186,"line_end":186,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":192962,"byte_end":193016,"line_start":187,"line_end":187,"column_start":5,"column_end":59}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193021,"byte_end":193047,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193052,"byte_end":193058,"line_start":189,"line_end":189,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193063,"byte_end":193078,"line_start":190,"line_end":190,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193083,"byte_end":193137,"line_start":191,"line_end":191,"column_start":5,"column_end":59}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193142,"byte_end":193170,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193175,"byte_end":193181,"line_start":193,"line_end":193,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193186,"byte_end":193201,"line_start":194,"line_end":194,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193206,"byte_end":193260,"line_start":195,"line_end":195,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193265,"byte_end":193293,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193298,"byte_end":193304,"line_start":197,"line_end":197,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193309,"byte_end":193324,"line_start":198,"line_end":198,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193329,"byte_end":193383,"line_start":199,"line_end":199,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193388,"byte_end":193414,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193419,"byte_end":193425,"line_start":201,"line_end":201,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193430,"byte_end":193437,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194477,"byte_end":194484,"line_start":224,"line_end":224,"column_start":18,"column_end":25},"name":"weekday","qualname":"<PrimitiveDateTime>::weekday","value":"pub const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193550,"byte_end":193570,"line_start":207,"line_end":207,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193575,"byte_end":193578,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193583,"byte_end":193594,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193599,"byte_end":193646,"line_start":210,"line_end":210,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).weekday(), Tuesday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193651,"byte_end":193713,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00).weekday(), Friday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193718,"byte_end":193779,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00).weekday(), Friday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193784,"byte_end":193845,"line_start":213,"line_end":213,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-04-01 0:00).weekday(), Monday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193850,"byte_end":193911,"line_start":214,"line_end":214,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-05-01 0:00).weekday(), Wednesday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193916,"byte_end":193980,"line_start":215,"line_end":215,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-06-01 0:00).weekday(), Saturday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":193985,"byte_end":194048,"line_start":216,"line_end":216,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-07-01 0:00).weekday(), Monday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194053,"byte_end":194114,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-08-01 0:00).weekday(), Thursday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194119,"byte_end":194182,"line_start":218,"line_end":218,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-09-01 0:00).weekday(), Sunday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194187,"byte_end":194248,"line_start":219,"line_end":219,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-10-01 0:00).weekday(), Tuesday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194253,"byte_end":194315,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-11-01 0:00).weekday(), Friday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194320,"byte_end":194381,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-12-01 0:00).weekday(), Sunday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194386,"byte_end":194447,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194452,"byte_end":194459,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195229,"byte_end":195242,"line_start":240,"line_end":240,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<PrimitiveDateTime>::to_julian_day","value":"pub const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194543,"byte_end":194636,"line_start":228,"line_end":228,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194641,"byte_end":194644,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194649,"byte_end":194743,"line_start":230,"line_end":230,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194748,"byte_end":194844,"line_start":231,"line_end":231,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194849,"byte_end":194852,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194857,"byte_end":194868,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194873,"byte_end":194906,"line_start":234,"line_end":234,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00).to_julian_day(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194911,"byte_end":194974,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00).to_julian_day(), 2_451_545);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":194979,"byte_end":195049,"line_start":236,"line_end":236,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_julian_day(), 2_458_485);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195054,"byte_end":195124,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).to_julian_day(), 2_458_849);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195129,"byte_end":195199,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195204,"byte_end":195211,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195642,"byte_end":195648,"line_start":253,"line_end":253,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<PrimitiveDateTime>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195361,"byte_end":195404,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195409,"byte_end":195412,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195417,"byte_end":195428,"line_start":248,"line_end":248,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195433,"byte_end":195466,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195471,"byte_end":195537,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195542,"byte_end":195612,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195617,"byte_end":195624,"line_start":252,"line_end":252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196063,"byte_end":196075,"line_start":267,"line_end":267,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<PrimitiveDateTime>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195711,"byte_end":195767,"line_start":257,"line_end":257,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195772,"byte_end":195775,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195780,"byte_end":195791,"line_start":259,"line_end":259,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195796,"byte_end":195829,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195834,"byte_end":195909,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195914,"byte_end":195929,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999).as_hms_milli(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195934,"byte_end":195992,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":195997,"byte_end":196022,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196027,"byte_end":196033,"line_start":265,"line_end":265,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196038,"byte_end":196045,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196509,"byte_end":196521,"line_start":281,"line_end":281,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<PrimitiveDateTime>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196149,"byte_end":196205,"line_start":271,"line_end":271,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196210,"byte_end":196213,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196218,"byte_end":196229,"line_start":273,"line_end":273,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196234,"byte_end":196267,"line_start":274,"line_end":274,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196272,"byte_end":196347,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196352,"byte_end":196367,"line_start":276,"line_end":276,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196372,"byte_end":196434,"line_start":277,"line_end":277,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196439,"byte_end":196468,"line_start":278,"line_end":278,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196473,"byte_end":196479,"line_start":279,"line_end":279,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196484,"byte_end":196491,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196960,"byte_end":196971,"line_start":295,"line_end":295,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<PrimitiveDateTime>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196595,"byte_end":196650,"line_start":285,"line_end":285,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196655,"byte_end":196658,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196663,"byte_end":196674,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196679,"byte_end":196712,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196717,"byte_end":196791,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196796,"byte_end":196811,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196816,"byte_end":196881,"line_start":291,"line_end":291,"column_start":5,"column_end":70}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196886,"byte_end":196919,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196924,"byte_end":196930,"line_start":293,"line_end":293,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":196935,"byte_end":196942,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197352,"byte_end":197356,"line_start":308,"line_end":308,"column_start":18,"column_end":22},"name":"hour","qualname":"<PrimitiveDateTime>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197044,"byte_end":197067,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197072,"byte_end":197075,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197080,"byte_end":197139,"line_start":301,"line_end":301,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197144,"byte_end":197147,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197152,"byte_end":197163,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197168,"byte_end":197201,"line_start":304,"line_end":304,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).hour(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197206,"byte_end":197259,"line_start":305,"line_end":305,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).hour(), 23);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197264,"byte_end":197322,"line_start":306,"line_end":306,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197327,"byte_end":197334,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197731,"byte_end":197737,"line_start":321,"line_end":321,"column_start":18,"column_end":24},"name":"minute","qualname":"<PrimitiveDateTime>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197407,"byte_end":197442,"line_start":312,"line_end":312,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197447,"byte_end":197450,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197455,"byte_end":197514,"line_start":314,"line_end":314,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197519,"byte_end":197522,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197527,"byte_end":197538,"line_start":316,"line_end":316,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197543,"byte_end":197576,"line_start":317,"line_end":317,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).minute(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197581,"byte_end":197636,"line_start":318,"line_end":318,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).minute(), 59);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197641,"byte_end":197701,"line_start":319,"line_end":319,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197706,"byte_end":197713,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198116,"byte_end":198122,"line_start":334,"line_end":334,"column_start":18,"column_end":24},"name":"second","qualname":"<PrimitiveDateTime>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197790,"byte_end":197827,"line_start":325,"line_end":325,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197832,"byte_end":197835,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197840,"byte_end":197899,"line_start":327,"line_end":327,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197904,"byte_end":197907,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197912,"byte_end":197923,"line_start":329,"line_end":329,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197928,"byte_end":197961,"line_start":330,"line_end":330,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).second(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":197966,"byte_end":198021,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).second(), 59);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198026,"byte_end":198086,"line_start":332,"line_end":332,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198091,"byte_end":198098,"line_start":333,"line_end":333,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198525,"byte_end":198536,"line_start":347,"line_end":347,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<PrimitiveDateTime>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198175,"byte_end":198218,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198223,"byte_end":198226,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198231,"byte_end":198293,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198298,"byte_end":198301,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198306,"byte_end":198317,"line_start":342,"line_end":342,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198322,"byte_end":198355,"line_start":343,"line_end":343,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).millisecond(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198360,"byte_end":198420,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999).millisecond(), 999);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198425,"byte_end":198495,"line_start":345,"line_end":345,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198500,"byte_end":198507,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198991,"byte_end":199002,"line_start":363,"line_end":363,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<PrimitiveDateTime>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198595,"byte_end":198638,"line_start":351,"line_end":351,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198643,"byte_end":198646,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198651,"byte_end":198717,"line_start":353,"line_end":353,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198722,"byte_end":198725,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198730,"byte_end":198741,"line_start":355,"line_end":355,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198746,"byte_end":198779,"line_start":356,"line_end":356,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).microsecond(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198784,"byte_end":198844,"line_start":357,"line_end":357,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198849,"byte_end":198864,"line_start":358,"line_end":358,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999).microsecond(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198869,"byte_end":198930,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/     999_999","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198935,"byte_end":198950,"line_start":360,"line_end":360,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198955,"byte_end":198961,"line_start":361,"line_end":361,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":198966,"byte_end":198973,"line_start":362,"line_end":362,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199467,"byte_end":199477,"line_start":379,"line_end":379,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<PrimitiveDateTime>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199061,"byte_end":199103,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199108,"byte_end":199111,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199116,"byte_end":199186,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199191,"byte_end":199194,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199199,"byte_end":199210,"line_start":371,"line_end":371,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199215,"byte_end":199248,"line_start":372,"line_end":372,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).nanosecond(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199253,"byte_end":199312,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199317,"byte_end":199332,"line_start":374,"line_end":374,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999).nanosecond(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199337,"byte_end":199401,"line_start":375,"line_end":375,"column_start":5,"column_end":69}},{"value":"/     999_999_999,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199406,"byte_end":199426,"line_start":376,"line_end":376,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199431,"byte_end":199437,"line_start":377,"line_end":377,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199442,"byte_end":199449,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200188,"byte_end":200201,"line_start":403,"line_end":403,"column_start":18,"column_end":31},"name":"assume_offset","qualname":"<PrimitiveDateTime>::assume_offset","value":"pub const fn assume_offset(Self, UtcOffset) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in the provided\n [`UtcOffset`], return an [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in the provided","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199594,"byte_end":199680,"line_start":385,"line_end":385,"column_start":5,"column_end":91}},{"value":"/ [`UtcOffset`], return an [`OffsetDateTime`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199685,"byte_end":199733,"line_start":386,"line_end":386,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199738,"byte_end":199741,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199746,"byte_end":199757,"line_start":388,"line_end":388,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199762,"byte_end":199805,"line_start":389,"line_end":389,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199810,"byte_end":199825,"line_start":390,"line_end":390,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199830,"byte_end":199864,"line_start":391,"line_end":391,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(UTC))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199869,"byte_end":199909,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199914,"byte_end":199944,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/     1_546_300_800,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199949,"byte_end":199971,"line_start":394,"line_end":394,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199976,"byte_end":199982,"line_start":395,"line_end":395,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":199987,"byte_end":200002,"line_start":396,"line_end":396,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200007,"byte_end":200041,"line_start":397,"line_end":397,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(-1))","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200046,"byte_end":200085,"line_start":398,"line_end":398,"column_start":5,"column_end":44}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200090,"byte_end":200120,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/     1_546_304_400,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200125,"byte_end":200147,"line_start":400,"line_end":400,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200152,"byte_end":200158,"line_start":401,"line_end":401,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200163,"byte_end":200170,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200703,"byte_end":200713,"line_start":420,"line_end":420,"column_start":18,"column_end":28},"name":"assume_utc","qualname":"<PrimitiveDateTime>::assume_utc","value":"pub const fn assume_utc(Self) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an\n [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200367,"byte_end":200455,"line_start":410,"line_end":410,"column_start":5,"column_end":93}},{"value":"/ [`OffsetDateTime`].","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200460,"byte_end":200483,"line_start":411,"line_end":411,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200488,"byte_end":200491,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200496,"byte_end":200507,"line_start":413,"line_end":413,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200512,"byte_end":200545,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200550,"byte_end":200565,"line_start":415,"line_end":415,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).assume_utc().unix_timestamp(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200570,"byte_end":200635,"line_start":416,"line_end":416,"column_start":5,"column_end":70}},{"value":"/     1_546_300_800,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200640,"byte_end":200662,"line_start":417,"line_end":417,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200667,"byte_end":200673,"line_start":418,"line_end":418,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200678,"byte_end":200685,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201354,"byte_end":201366,"line_start":442,"line_end":442,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<PrimitiveDateTime>::replace_time","value":"pub const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, preserving the date.","sig":null,"attributes":[{"value":"/ Replace the time, preserving the date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200993,"byte_end":201035,"line_start":432,"line_end":432,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201040,"byte_end":201043,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201048,"byte_end":201059,"line_start":434,"line_end":434,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201064,"byte_end":201105,"line_start":435,"line_end":435,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201110,"byte_end":201125,"line_start":436,"line_end":436,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 17:00).replace_time(time!(5:00)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201130,"byte_end":201192,"line_start":437,"line_end":437,"column_start":5,"column_end":67}},{"value":"/     datetime!(2020-01-01 5:00)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201197,"byte_end":201231,"line_start":438,"line_end":438,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201236,"byte_end":201242,"line_start":439,"line_end":439,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201247,"byte_end":201254,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201259,"byte_end":201336,"line_start":441,"line_end":441,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201808,"byte_end":201820,"line_start":456,"line_end":456,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<PrimitiveDateTime>::replace_date","value":"pub const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, preserving the time.","sig":null,"attributes":[{"value":"/ Replace the date, preserving the time.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201440,"byte_end":201482,"line_start":446,"line_end":446,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201487,"byte_end":201490,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201495,"byte_end":201506,"line_start":448,"line_end":448,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201511,"byte_end":201552,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201557,"byte_end":201572,"line_start":450,"line_end":450,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00).replace_date(date!(2020-01-30)),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201577,"byte_end":201645,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/     datetime!(2020-01-30 12:00)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201650,"byte_end":201685,"line_start":452,"line_end":452,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201690,"byte_end":201696,"line_start":453,"line_end":453,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201701,"byte_end":201708,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":201713,"byte_end":201790,"line_start":455,"line_end":455,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":203748,"byte_end":203759,"line_start":507,"line_end":507,"column_start":12,"column_end":23},"name":"format_into","qualname":"<PrimitiveDateTime>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable: Formattable>(Self, &mut impl io::Write,\n                                                  &impl Formattable)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":203626,"byte_end":203687,"line_start":505,"line_end":505,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":203692,"byte_end":203736,"line_start":506,"line_end":506,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204450,"byte_end":204456,"line_start":527,"line_end":527,"column_start":12,"column_end":18},"name":"format","qualname":"<PrimitiveDateTime>::format","value":"pub fn format<impl Formattable: Formattable>(Self, &impl Formattable)\n-> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":203973,"byte_end":204034,"line_start":515,"line_end":515,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204039,"byte_end":204083,"line_start":516,"line_end":516,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204088,"byte_end":204091,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204096,"byte_end":204107,"line_start":518,"line_end":518,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204112,"byte_end":204167,"line_start":519,"line_end":519,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204172,"byte_end":204265,"line_start":520,"line_end":520,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204270,"byte_end":204285,"line_start":521,"line_end":521,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05).format(&format)?,","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204290,"byte_end":204346,"line_start":522,"line_end":522,"column_start":5,"column_end":61}},{"value":"/     \"2020-01-02 03:04:05\"","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204351,"byte_end":204380,"line_start":523,"line_end":523,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204385,"byte_end":204391,"line_start":524,"line_end":524,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204396,"byte_end":204426,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":204431,"byte_end":204438,"line_start":526,"line_end":526,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2224},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":208759,"byte_end":208763,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Time","qualname":"::time::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229}],"decl_id":null,"docs":" The clock time within a given date. Nanosecond precision.","sig":null,"attributes":[{"value":"/ The clock time within a given date. Nanosecond precision.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":208402,"byte_end":208463,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":208464,"byte_end":208467,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ All minutes are assumed to have exactly 60 seconds; no attempt is made to handle leap seconds","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":208468,"byte_end":208565,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/ (either positive or negative).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":208566,"byte_end":208600,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":208601,"byte_end":208604,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ When comparing two `Time`s, they are assumed to be in the same calendar date.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":208605,"byte_end":208686,"line_start":28,"line_end":28,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":1145},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209649,"byte_end":209657,"line_start":61,"line_end":61,"column_start":15,"column_end":23},"name":"MIDNIGHT","qualname":"::time::Time::MIDNIGHT","value":"Self","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" Create a `Time` that is exactly midnight.","sig":null,"attributes":[{"value":"/ Create a `Time` that is exactly midnight.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209462,"byte_end":209507,"line_start":55,"line_end":55,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209512,"byte_end":209515,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209520,"byte_end":209531,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::{Time, macros::time};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209536,"byte_end":209573,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Time::MIDNIGHT, time!(0:00));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209578,"byte_end":209622,"line_start":59,"line_end":59,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209627,"byte_end":209634,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209822,"byte_end":209848,"line_start":66,"line_end":66,"column_start":18,"column_end":44},"name":"__from_hms_nanos_unchecked","qualname":"<Time>::__from_hms_nanos_unchecked","value":"pub const fn __from_hms_nanos_unchecked(u8, u8, u8, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Time` from its components.\n","sig":null,"attributes":[{"value":"/ Create a `Time` from its components.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209745,"byte_end":209785,"line_start":64,"line_end":64,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210602,"byte_end":210610,"line_start":94,"line_end":94,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<Time>::from_hms","value":"pub const fn from_hms(u8, u8, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, and second.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, and second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210107,"byte_end":210172,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210177,"byte_end":210180,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210185,"byte_end":210196,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210201,"byte_end":210222,"line_start":84,"line_end":84,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(1, 2, 3).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210227,"byte_end":210272,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210277,"byte_end":210284,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210289,"byte_end":210292,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210297,"byte_end":210308,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210313,"byte_end":210334,"line_start":89,"line_end":89,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(24, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210339,"byte_end":210412,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ assert!(Time::from_hms(0, 60, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210417,"byte_end":210492,"line_start":91,"line_end":91,"column_start":5,"column_end":80}},{"value":"/ assert!(Time::from_hms(0, 0, 60).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210497,"byte_end":210572,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210577,"byte_end":210584,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211562,"byte_end":211576,"line_start":115,"line_end":115,"column_start":18,"column_end":32},"name":"from_hms_milli","qualname":"<Time>::from_hms_milli","value":"pub const fn from_hms_milli(u8, u8, u8, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and millisecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":210918,"byte_end":210996,"line_start":101,"line_end":101,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211001,"byte_end":211004,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211009,"byte_end":211020,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211025,"byte_end":211046,"line_start":104,"line_end":104,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(1, 2, 3, 4).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211051,"byte_end":211105,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211110,"byte_end":211117,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211122,"byte_end":211125,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211130,"byte_end":211141,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211146,"byte_end":211167,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211172,"byte_end":211254,"line_start":110,"line_end":110,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_milli(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211259,"byte_end":211343,"line_start":111,"line_end":111,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211348,"byte_end":211432,"line_start":112,"line_end":112,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 0, 1_000).is_err()); // 1_000 isn't a valid millisecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211437,"byte_end":211532,"line_start":113,"line_end":113,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":211537,"byte_end":211544,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212738,"byte_end":212752,"line_start":147,"line_end":147,"column_start":18,"column_end":32},"name":"from_hms_micro","qualname":"<Time>::from_hms_micro","value":"pub const fn from_hms_micro(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and microsecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212086,"byte_end":212164,"line_start":133,"line_end":133,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212169,"byte_end":212172,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212177,"byte_end":212188,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212193,"byte_end":212214,"line_start":136,"line_end":136,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(1, 2, 3, 4).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212219,"byte_end":212273,"line_start":137,"line_end":137,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212278,"byte_end":212285,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212290,"byte_end":212293,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212298,"byte_end":212309,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212314,"byte_end":212335,"line_start":141,"line_end":141,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212340,"byte_end":212422,"line_start":142,"line_end":142,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_micro(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212427,"byte_end":212511,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212516,"byte_end":212600,"line_start":144,"line_end":144,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 0, 1_000_000).is_err()); // 1_000_000 isn't a valid microsecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212605,"byte_end":212708,"line_start":145,"line_end":145,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":212713,"byte_end":212720,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213908,"byte_end":213921,"line_start":179,"line_end":179,"column_start":18,"column_end":31},"name":"from_hms_nano","qualname":"<Time>::from_hms_nano","value":"pub const fn from_hms_nano(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and nanosecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213255,"byte_end":213332,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213337,"byte_end":213340,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213345,"byte_end":213356,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213361,"byte_end":213382,"line_start":168,"line_end":168,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(1, 2, 3, 4).is_ok());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213387,"byte_end":213440,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213445,"byte_end":213452,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213457,"byte_end":213460,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213465,"byte_end":213476,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213481,"byte_end":213502,"line_start":173,"line_end":173,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213507,"byte_end":213588,"line_start":174,"line_end":174,"column_start":5,"column_end":86}},{"value":"/ assert!(Time::from_hms_nano(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213593,"byte_end":213676,"line_start":175,"line_end":175,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213681,"byte_end":213764,"line_start":176,"line_end":176,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 0, 1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213769,"byte_end":213878,"line_start":177,"line_end":177,"column_start":5,"column_end":114}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":213883,"byte_end":213890,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214681,"byte_end":214687,"line_start":203,"line_end":203,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<Time>::as_hms","value":"pub const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214434,"byte_end":214477,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214482,"byte_end":214485,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214490,"byte_end":214501,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214506,"byte_end":214535,"line_start":199,"line_end":199,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214540,"byte_end":214591,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(time!(23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214596,"byte_end":214651,"line_start":201,"line_end":201,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214656,"byte_end":214663,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215053,"byte_end":215065,"line_start":214,"line_end":214,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<Time>::as_hms_milli","value":"pub const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214769,"byte_end":214825,"line_start":207,"line_end":207,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214830,"byte_end":214833,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214838,"byte_end":214849,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214854,"byte_end":214883,"line_start":210,"line_end":210,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214888,"byte_end":214948,"line_start":211,"line_end":211,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(time!(23:59:59.999).as_hms_milli(), (23, 59, 59, 999));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":214953,"byte_end":215023,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215028,"byte_end":215035,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215575,"byte_end":215587,"line_start":233,"line_end":233,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<Time>::as_hms_micro","value":"pub const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215249,"byte_end":215305,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215310,"byte_end":215313,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215318,"byte_end":215329,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215334,"byte_end":215363,"line_start":226,"line_end":226,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215368,"byte_end":215428,"line_start":227,"line_end":227,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215433,"byte_end":215448,"line_start":228,"line_end":228,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215453,"byte_end":215500,"line_start":229,"line_end":229,"column_start":5,"column_end":52}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215505,"byte_end":215534,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215539,"byte_end":215545,"line_start":231,"line_end":231,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215550,"byte_end":215557,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216030,"byte_end":216041,"line_start":247,"line_end":247,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<Time>::as_hms_nano","value":"pub const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215699,"byte_end":215754,"line_start":237,"line_end":237,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215759,"byte_end":215762,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215767,"byte_end":215778,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215783,"byte_end":215812,"line_start":240,"line_end":240,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215817,"byte_end":215876,"line_start":241,"line_end":241,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215881,"byte_end":215896,"line_start":242,"line_end":242,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215901,"byte_end":215951,"line_start":243,"line_end":243,"column_start":5,"column_end":55}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215956,"byte_end":215989,"line_start":244,"line_end":244,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":215994,"byte_end":216000,"line_start":245,"line_end":245,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216005,"byte_end":216012,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216422,"byte_end":216426,"line_start":260,"line_end":260,"column_start":18,"column_end":22},"name":"hour","qualname":"<Time>::hour","value":"pub const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216145,"byte_end":216168,"line_start":251,"line_end":251,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216173,"byte_end":216176,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216181,"byte_end":216240,"line_start":253,"line_end":253,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216245,"byte_end":216248,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216253,"byte_end":216264,"line_start":255,"line_end":255,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216269,"byte_end":216298,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).hour(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216303,"byte_end":216344,"line_start":257,"line_end":257,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(time!(23:59:59).hour(), 23);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216349,"byte_end":216392,"line_start":258,"line_end":258,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216397,"byte_end":216404,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216763,"byte_end":216769,"line_start":273,"line_end":273,"column_start":18,"column_end":24},"name":"minute","qualname":"<Time>::minute","value":"pub const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216470,"byte_end":216505,"line_start":264,"line_end":264,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216510,"byte_end":216513,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216518,"byte_end":216577,"line_start":266,"line_end":266,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216582,"byte_end":216585,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216590,"byte_end":216601,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216606,"byte_end":216635,"line_start":269,"line_end":269,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).minute(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216640,"byte_end":216683,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).minute(), 59);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216688,"byte_end":216733,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216738,"byte_end":216745,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217110,"byte_end":217116,"line_start":286,"line_end":286,"column_start":18,"column_end":24},"name":"second","qualname":"<Time>::second","value":"pub const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216815,"byte_end":216852,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216857,"byte_end":216860,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216865,"byte_end":216924,"line_start":279,"line_end":279,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216929,"byte_end":216932,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216937,"byte_end":216948,"line_start":281,"line_end":281,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216953,"byte_end":216982,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).second(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":216987,"byte_end":217030,"line_start":283,"line_end":283,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).second(), 59);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217035,"byte_end":217080,"line_start":284,"line_end":284,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217085,"byte_end":217092,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217478,"byte_end":217489,"line_start":299,"line_end":299,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<Time>::millisecond","value":"pub const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217162,"byte_end":217205,"line_start":290,"line_end":290,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217210,"byte_end":217213,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217218,"byte_end":217280,"line_start":292,"line_end":292,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217285,"byte_end":217288,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217293,"byte_end":217304,"line_start":294,"line_end":294,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217309,"byte_end":217338,"line_start":295,"line_end":295,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).millisecond(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217343,"byte_end":217388,"line_start":296,"line_end":296,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999).millisecond(), 999);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217393,"byte_end":217448,"line_start":297,"line_end":297,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217453,"byte_end":217460,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217887,"byte_end":217898,"line_start":312,"line_end":312,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<Time>::microsecond","value":"pub const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217559,"byte_end":217602,"line_start":303,"line_end":303,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217607,"byte_end":217610,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217615,"byte_end":217681,"line_start":305,"line_end":305,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217686,"byte_end":217689,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217694,"byte_end":217705,"line_start":307,"line_end":307,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217710,"byte_end":217739,"line_start":308,"line_end":308,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).microsecond(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217744,"byte_end":217789,"line_start":309,"line_end":309,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999_999).microsecond(), 999_999);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217794,"byte_end":217857,"line_start":310,"line_end":310,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217862,"byte_end":217869,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":218294,"byte_end":218304,"line_start":325,"line_end":325,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<Time>::nanosecond","value":"pub const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":217957,"byte_end":217999,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":218004,"byte_end":218007,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":218012,"byte_end":218082,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":218087,"byte_end":218090,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":218095,"byte_end":218106,"line_start":320,"line_end":320,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":218111,"byte_end":218140,"line_start":321,"line_end":321,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).nanosecond(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":218145,"byte_end":218189,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(time!(23:59:59.999_999_999).nanosecond(), 999_999_999);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":218194,"byte_end":218264,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":218269,"byte_end":218276,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":221980,"byte_end":221991,"line_start":415,"line_end":415,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Time>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable: Formattable>(Self, &mut impl io::Write,\n                                                  &impl Formattable)\n-> Result<usize, crate::error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":221879,"byte_end":221968,"line_start":414,"line_end":414,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":222564,"byte_end":222570,"line_start":431,"line_end":431,"column_start":12,"column_end":18},"name":"format","qualname":"<Time>::format","value":"pub fn format<impl Formattable: Formattable>(Self, &impl Formattable)\n-> Result<String, crate::error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":222196,"byte_end":222285,"line_start":423,"line_end":423,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":222290,"byte_end":222293,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":222298,"byte_end":222309,"line_start":425,"line_end":425,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":222314,"byte_end":222365,"line_start":426,"line_end":426,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":222370,"byte_end":222442,"line_start":427,"line_end":427,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(time!(12:00).format(&format)?, \"12:00:00\");","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":222447,"byte_end":222505,"line_start":428,"line_end":428,"column_start":5,"column_end":63}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":222510,"byte_end":222540,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":222545,"byte_end":222552,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2255},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228083,"byte_end":228092,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"name":"UtcOffset","qualname":"::utc_offset::UtcOffset","value":"UtcOffset {  }","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258}],"decl_id":null,"docs":" An offset from UTC.","sig":null,"attributes":[{"value":"/ An offset from UTC.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":227789,"byte_end":227812,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":227813,"byte_end":227816,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This struct can store values up to ±23:59:59. If you need support outside this range, please","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":227817,"byte_end":227914,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ file an issue with your use case.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":227915,"byte_end":227952,"line_start":17,"line_end":17,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":1204},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228504,"byte_end":228507,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"UTC","qualname":"::utc_offset::UtcOffset::UTC","value":"Self","parent":{"krate":0,"index":1203},"children":[],"decl_id":null,"docs":" A `UtcOffset` that is UTC.","sig":null,"attributes":[{"value":"/ A `UtcOffset` that is UTC.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228324,"byte_end":228354,"line_start":30,"line_end":30,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228359,"byte_end":228362,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228367,"byte_end":228378,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, macros::offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228383,"byte_end":228427,"line_start":33,"line_end":33,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(UtcOffset::UTC, offset!(UTC));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228432,"byte_end":228477,"line_start":34,"line_end":34,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228482,"byte_end":228489,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228833,"byte_end":228853,"line_start":43,"line_end":43,"column_start":18,"column_end":38},"name":"__from_hms_unchecked","qualname":"<UtcOffset>::__from_hms_unchecked","value":"pub const fn __from_hms_unchecked(i8, i8, i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the\n validity of which must be guaranteed by the caller. All three parameters must have the same\n sign.\n","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228586,"byte_end":228682,"line_start":39,"line_end":39,"column_start":5,"column_end":101}},{"value":"/ validity of which must be guaranteed by the caller. All three parameters must have the same","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228687,"byte_end":228782,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ sign.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228787,"byte_end":228796,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229513,"byte_end":229521,"line_start":63,"line_end":63,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<UtcOffset>::from_hms","value":"pub const fn from_hms(i8, i8, i8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds\n provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228998,"byte_end":229090,"line_start":51,"line_end":51,"column_start":5,"column_end":97}},{"value":"/ provided.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229095,"byte_end":229108,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229113,"byte_end":229116,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The sign of all three components should match. If they do not, all smaller components will","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229121,"byte_end":229215,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ have their signs flipped.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229220,"byte_end":229249,"line_start":55,"line_end":55,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229254,"byte_end":229257,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229262,"byte_end":229273,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229278,"byte_end":229304,"line_start":58,"line_end":58,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, 2, 3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229309,"byte_end":229375,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, -2, -3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229380,"byte_end":229448,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229453,"byte_end":229483,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":229488,"byte_end":229495,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230479,"byte_end":230497,"line_start":93,"line_end":93,"column_start":18,"column_end":36},"name":"from_whole_seconds","qualname":"<UtcOffset>::from_whole_seconds","value":"pub const fn from_whole_seconds(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of seconds provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of seconds provided.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230198,"byte_end":230280,"line_start":86,"line_end":86,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230285,"byte_end":230288,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230293,"byte_end":230304,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230309,"byte_end":230335,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_whole_seconds(3_723)?.as_hms(), (1, 2, 3));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230340,"byte_end":230414,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230419,"byte_end":230449,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230454,"byte_end":230461,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231245,"byte_end":231251,"line_start":113,"line_end":113,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<UtcOffset>::as_hms","value":"pub const fn as_hms(Self) -> (i8, i8, i8)","parent":null,"children":[],"decl_id":null,"docs":" Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components\n will always match. A positive value indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230839,"byte_end":230933,"line_start":105,"line_end":105,"column_start":5,"column_end":99}},{"value":"/ will always match. A positive value indicates an offset to the east; a negative to the west.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":230938,"byte_end":231034,"line_start":106,"line_end":106,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231039,"byte_end":231042,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231047,"byte_end":231058,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231063,"byte_end":231094,"line_start":109,"line_end":109,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).as_hms(), (1, 2, 3));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231099,"byte_end":231153,"line_start":110,"line_end":110,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).as_hms(), (-1, -2, -3));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231158,"byte_end":231215,"line_start":111,"line_end":111,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231220,"byte_end":231227,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231681,"byte_end":231692,"line_start":125,"line_end":125,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<UtcOffset>::whole_hours","value":"pub const fn whole_hours(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole hours the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole hours the offset is from UTC. A positive value indicates an","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231336,"byte_end":231426,"line_start":117,"line_end":117,"column_start":5,"column_end":95}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231431,"byte_end":231478,"line_start":118,"line_end":118,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231483,"byte_end":231486,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231491,"byte_end":231502,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231507,"byte_end":231538,"line_start":121,"line_end":121,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_hours(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231543,"byte_end":231594,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_hours(), -1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231599,"byte_end":231651,"line_start":123,"line_end":123,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231656,"byte_end":231663,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232090,"byte_end":232103,"line_start":137,"line_end":137,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<UtcOffset>::whole_minutes","value":"pub const fn whole_minutes(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole minutes the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole minutes the offset is from UTC. A positive value indicates an","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231737,"byte_end":231829,"line_start":129,"line_end":129,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231834,"byte_end":231881,"line_start":130,"line_end":130,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231886,"byte_end":231889,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231894,"byte_end":231905,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231910,"byte_end":231941,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_minutes(), 62);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":231946,"byte_end":232000,"line_start":134,"line_end":134,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_minutes(), -62);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232005,"byte_end":232060,"line_start":135,"line_end":135,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232065,"byte_end":232072,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232550,"byte_end":232567,"line_start":149,"line_end":149,"column_start":18,"column_end":35},"name":"minutes_past_hour","qualname":"<UtcOffset>::minutes_past_hour","value":"pub const fn minutes_past_hour(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of minutes past the hour the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of minutes past the hour the offset is from UTC. A positive value","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232183,"byte_end":232270,"line_start":141,"line_end":141,"column_start":5,"column_end":92}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232275,"byte_end":232335,"line_start":142,"line_end":142,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232340,"byte_end":232343,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232348,"byte_end":232359,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232364,"byte_end":232395,"line_start":145,"line_end":145,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).minutes_past_hour(), 2);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232400,"byte_end":232457,"line_start":146,"line_end":146,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(offset!(-1:02:03).minutes_past_hour(), -2);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232462,"byte_end":232520,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232525,"byte_end":232532,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233103,"byte_end":233116,"line_start":163,"line_end":163,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<UtcOffset>::whole_seconds","value":"pub const fn whole_seconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole seconds the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole seconds the offset is from UTC. A positive value indicates an","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232614,"byte_end":232706,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232711,"byte_end":232758,"line_start":154,"line_end":154,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232763,"byte_end":232766,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232771,"byte_end":232782,"line_start":156,"line_end":156,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232787,"byte_end":232818,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_seconds(), 3723);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232823,"byte_end":232879,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_seconds(), -3723);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232884,"byte_end":232941,"line_start":159,"line_end":159,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":232946,"byte_end":232953,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233599,"byte_end":233618,"line_start":175,"line_end":175,"column_start":18,"column_end":37},"name":"seconds_past_minute","qualname":"<UtcOffset>::seconds_past_minute","value":"pub const fn seconds_past_minute(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of seconds past the minute the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of seconds past the minute the offset is from UTC. A positive value","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233226,"byte_end":233315,"line_start":167,"line_end":167,"column_start":5,"column_end":94}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233320,"byte_end":233380,"line_start":168,"line_end":168,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233385,"byte_end":233388,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233393,"byte_end":233404,"line_start":170,"line_end":170,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233409,"byte_end":233440,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).seconds_past_minute(), 3);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233445,"byte_end":233504,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(offset!(-1:02:03).seconds_past_minute(), -3);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233509,"byte_end":233569,"line_start":173,"line_end":173,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233574,"byte_end":233581,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1214},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233984,"byte_end":233990,"line_start":190,"line_end":190,"column_start":18,"column_end":24},"name":"is_utc","qualname":"<UtcOffset>::is_utc","value":"pub const fn is_utc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is exactly UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is exactly UTC.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233715,"byte_end":233754,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233759,"byte_end":233762,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233767,"byte_end":233770,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233775,"byte_end":233786,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233791,"byte_end":233822,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_utc());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233827,"byte_end":233868,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/ assert!(!offset!(-1:02:03).is_utc());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233873,"byte_end":233914,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/ assert!(offset!(UTC).is_utc());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233919,"byte_end":233954,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":233959,"byte_end":233966,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234373,"byte_end":234384,"line_start":202,"line_end":202,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<UtcOffset>::is_positive","value":"pub const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is positive, or east of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is positive, or east of UTC.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234084,"byte_end":234136,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234141,"byte_end":234144,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234149,"byte_end":234160,"line_start":196,"line_end":196,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234165,"byte_end":234196,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/ assert!(offset!(+1:02:03).is_positive());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234201,"byte_end":234246,"line_start":198,"line_end":198,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(-1:02:03).is_positive());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234251,"byte_end":234297,"line_start":199,"line_end":199,"column_start":5,"column_end":51}},{"value":"/ assert!(!offset!(UTC).is_positive());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234302,"byte_end":234343,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234348,"byte_end":234355,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234764,"byte_end":234775,"line_start":214,"line_end":214,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<UtcOffset>::is_negative","value":"pub const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is negative, or west of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is negative, or west of UTC.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234475,"byte_end":234527,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234532,"byte_end":234535,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234540,"byte_end":234551,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234556,"byte_end":234587,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_negative());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234592,"byte_end":234638,"line_start":210,"line_end":210,"column_start":5,"column_end":51}},{"value":"/ assert!(offset!(-1:02:03).is_negative());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234643,"byte_end":234688,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(UTC).is_negative());","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234693,"byte_end":234734,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":234739,"byte_end":234746,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236490,"byte_end":236501,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"format_into","qualname":"<UtcOffset>::format_into","value":"pub fn format_into<impl io::Write: io::Write,\n                   impl Formattable: Formattable>(Self, &mut impl io::Write,\n                                                  &impl Formattable)\n-> Result<usize, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236384,"byte_end":236478,"line_start":259,"line_end":259,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":237091,"byte_end":237097,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"format","qualname":"<UtcOffset>::format","value":"pub fn format<impl Formattable: Formattable>(Self, &impl Formattable)\n-> Result<String, error::Format>","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236699,"byte_end":236793,"line_start":268,"line_end":268,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236798,"byte_end":236801,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236806,"byte_end":236817,"line_start":270,"line_end":270,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236822,"byte_end":236875,"line_start":271,"line_end":271,"column_start":5,"column_end":58}},{"value":"/ let format = format_description::parse(\"[offset_hour sign:mandatory]:[offset_minute]\")?;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236880,"byte_end":236972,"line_start":272,"line_end":272,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(offset!(+1).format(&format)?, \"+01:00\");","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236977,"byte_end":237032,"line_start":273,"line_end":273,"column_start":5,"column_end":60}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":237037,"byte_end":237067,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":237072,"byte_end":237079,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1228},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243}],"decl_id":null,"docs":" Utility functions.\n","sig":null,"attributes":[{"value":"/ Utility functions.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":246781,"byte_end":246803,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":1239},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247298,"byte_end":247316,"line_start":21,"line_end":21,"column_start":14,"column_end":32},"name":"days_in_year_month","qualname":"::util::days_in_year_month","value":"pub const fn days_in_year_month(i32, Month) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of days in the month of a given year.","sig":null,"attributes":[{"value":"/ Get the number of days in the month of a given year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247104,"byte_end":247160,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247161,"byte_end":247164,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247165,"byte_end":247176,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use time::{Month, util};","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247177,"byte_end":247207,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(util::days_in_year_month(2020, Month::February), 29);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247208,"byte_end":247276,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247277,"byte_end":247284,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1241},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248015,"byte_end":248027,"line_start":42,"line_end":42,"column_start":14,"column_end":26},"name":"is_leap_year","qualname":"::util::is_leap_year","value":"pub const fn is_leap_year(i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses\n [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","sig":null,"attributes":[{"value":"/ Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247590,"byte_end":247679,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247680,"byte_end":247773,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247774,"byte_end":247777,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247778,"byte_end":247789,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # use time::util::is_leap_year;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247790,"byte_end":247825,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert!(!is_leap_year(1900));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247826,"byte_end":247859,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ assert!(is_leap_year(2000));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247860,"byte_end":247892,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ assert!(is_leap_year(2004));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247893,"byte_end":247925,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert!(!is_leap_year(2005));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247926,"byte_end":247959,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ assert!(!is_leap_year(2100));","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247960,"byte_end":247993,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":247994,"byte_end":248001,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1242},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248502,"byte_end":248514,"line_start":58,"line_end":58,"column_start":14,"column_end":26},"name":"days_in_year","qualname":"::util::days_in_year","value":"pub const fn days_in_year(i32) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of calendar days in a given year.","sig":null,"attributes":[{"value":"/ Get the number of calendar days in a given year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248110,"byte_end":248162,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248163,"byte_end":248166,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 365 or 366.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248167,"byte_end":248223,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248224,"byte_end":248227,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248228,"byte_end":248239,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use time::util::days_in_year;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248240,"byte_end":248275,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(days_in_year(1900), 365);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248276,"byte_end":248316,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2000), 366);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248317,"byte_end":248357,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2004), 366);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248358,"byte_end":248398,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2005), 365);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248399,"byte_end":248439,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2100), 365);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248440,"byte_end":248480,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248481,"byte_end":248488,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1243},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248845,"byte_end":248858,"line_start":71,"line_end":71,"column_start":14,"column_end":27},"name":"weeks_in_year","qualname":"::util::weeks_in_year","value":"pub const fn weeks_in_year(i32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of weeks in the ISO year.","sig":null,"attributes":[{"value":"/ Get the number of weeks in the ISO year.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248585,"byte_end":248629,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248630,"byte_end":248633,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 52 or 53.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248634,"byte_end":248688,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248689,"byte_end":248692,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248693,"byte_end":248704,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use time::util::weeks_in_year;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248705,"byte_end":248741,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(weeks_in_year(2019), 52);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248742,"byte_end":248782,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(weeks_in_year(2020), 53);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248783,"byte_end":248823,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/util.rs","byte_start":248824,"byte_end":248831,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2279},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249753,"byte_end":249759,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Monday","qualname":"::weekday::Weekday::Monday","value":"Weekday::Monday","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249701,"byte_end":249748,"line_start":11,"line_end":11,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2281},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249817,"byte_end":249824,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"name":"Tuesday","qualname":"::weekday::Weekday::Tuesday","value":"Weekday::Tuesday","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249765,"byte_end":249812,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2283},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249882,"byte_end":249891,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"name":"Wednesday","qualname":"::weekday::Weekday::Wednesday","value":"Weekday::Wednesday","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249830,"byte_end":249877,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2285},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249949,"byte_end":249957,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Thursday","qualname":"::weekday::Weekday::Thursday","value":"Weekday::Thursday","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249897,"byte_end":249944,"line_start":17,"line_end":17,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2287},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250015,"byte_end":250021,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Friday","qualname":"::weekday::Weekday::Friday","value":"Weekday::Friday","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249963,"byte_end":250010,"line_start":19,"line_end":19,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2289},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250079,"byte_end":250087,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Saturday","qualname":"::weekday::Weekday::Saturday","value":"Weekday::Saturday","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250027,"byte_end":250074,"line_start":21,"line_end":21,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2291},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250145,"byte_end":250151,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::weekday::Weekday::Sunday","value":"Weekday::Sunday","parent":{"krate":0,"index":2278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250093,"byte_end":250140,"line_start":23,"line_end":23,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2278},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249687,"byte_end":249694,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"pub enum Weekday {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n}","parent":null,"children":[{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2283},{"krate":0,"index":2285},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2291}],"decl_id":null,"docs":" Days of the week.","sig":null,"attributes":[{"value":"/ Days of the week.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249440,"byte_end":249461,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249462,"byte_end":249465,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As order is dependent on context (Sunday could be either two days after or five days before","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249466,"byte_end":249561,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/ Friday), this type does not implement `PartialOrd` or `Ord`.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":249562,"byte_end":249626,"line_start":8,"line_end":8,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250353,"byte_end":250361,"line_start":34,"line_end":34,"column_start":18,"column_end":26},"name":"previous","qualname":"<Weekday>::previous","value":"pub const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous weekday.","sig":null,"attributes":[{"value":"/ Get the previous weekday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250175,"byte_end":250204,"line_start":28,"line_end":28,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250209,"byte_end":250212,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250217,"byte_end":250228,"line_start":30,"line_end":30,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250233,"byte_end":250257,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Tuesday.previous(), Weekday::Monday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250262,"byte_end":250323,"line_start":32,"line_end":32,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250328,"byte_end":250335,"line_start":33,"line_end":33,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250816,"byte_end":250820,"line_start":52,"line_end":52,"column_start":18,"column_end":22},"name":"next","qualname":"<Weekday>::next","value":"pub const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next weekday.","sig":null,"attributes":[{"value":"/ Get the next weekday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250646,"byte_end":250671,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250676,"byte_end":250679,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250684,"byte_end":250695,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250700,"byte_end":250724,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.next(), Weekday::Tuesday);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250729,"byte_end":250786,"line_start":50,"line_end":50,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250791,"byte_end":250798,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251341,"byte_end":251359,"line_start":71,"line_end":71,"column_start":18,"column_end":36},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"pub const fn number_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Monday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251105,"byte_end":251156,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251161,"byte_end":251164,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251169,"byte_end":251180,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251185,"byte_end":251209,"line_start":67,"line_end":67,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_monday(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251214,"byte_end":251270,"line_start":68,"line_end":68,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251275,"byte_end":251282,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251623,"byte_end":251641,"line_start":81,"line_end":81,"column_start":18,"column_end":36},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"pub const fn number_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Sunday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251428,"byte_end":251479,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251484,"byte_end":251487,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251492,"byte_end":251503,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251508,"byte_end":251532,"line_start":78,"line_end":78,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_sunday(), 2);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251537,"byte_end":251593,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251598,"byte_end":251605,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251911,"byte_end":251934,"line_start":91,"line_end":91,"column_start":18,"column_end":41},"name":"number_days_from_monday","qualname":"<Weekday>::number_days_from_monday","value":"pub const fn number_days_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Monday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251710,"byte_end":251762,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251767,"byte_end":251770,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251775,"byte_end":251786,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251791,"byte_end":251815,"line_start":88,"line_end":88,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_monday(), 0);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251820,"byte_end":251881,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251886,"byte_end":251893,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":252179,"byte_end":252202,"line_start":101,"line_end":101,"column_start":18,"column_end":41},"name":"number_days_from_sunday","qualname":"<Weekday>::number_days_from_sunday","value":"pub const fn number_days_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Sunday.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":251978,"byte_end":252030,"line_start":95,"line_end":95,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":252035,"byte_end":252038,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":252043,"byte_end":252054,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":252059,"byte_end":252083,"line_start":98,"line_end":98,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_sunday(), 1);","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":252088,"byte_end":252149,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":252154,"byte_end":252161,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":1292},"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11646,"byte_end":11652,"line_start":352,"line_end":352,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for [`std::result::Result`] with a generic error from the time crate.\n","sig":null,"attributes":[{"value":"/ An alias for [`std::result::Result`] with a generic error from the time crate.","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11554,"byte_end":11636,"line_start":351,"line_end":351,"column_start":1,"column_end":83}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13238,"byte_end":13242,"line_start":43,"line_end":43,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13474,"byte_end":13478,"line_start":52,"line_end":52,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31737,"byte_end":31741,"line_start":546,"line_end":546,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35290,"byte_end":35294,"line_start":655,"line_end":655,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":36786,"byte_end":36790,"line_start":695,"line_end":695,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":37470,"byte_end":37474,"line_start":720,"line_end":720,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":37731,"byte_end":37735,"line_start":729,"line_end":729,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":38048,"byte_end":38052,"line_start":740,"line_end":740,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":38195,"byte_end":38199,"line_start":748,"line_end":748,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":38509,"byte_end":38513,"line_start":759,"line_end":759,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39267,"byte_end":39274,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39986,"byte_end":39994,"line_start":42,"line_end":42,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40229,"byte_end":40237,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":64385,"byte_end":64393,"line_start":709,"line_end":709,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":64761,"byte_end":64772,"line_start":723,"line_end":723,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":65212,"byte_end":65220,"line_start":740,"line_end":740,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":65413,"byte_end":65421,"line_start":749,"line_end":749,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":65672,"byte_end":65683,"line_start":758,"line_end":758,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":65858,"byte_end":65866,"line_start":768,"line_end":768,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":66013,"byte_end":66021,"line_start":776,"line_end":776,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":66219,"byte_end":66227,"line_start":785,"line_end":785,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":66460,"byte_end":66471,"line_start":794,"line_end":794,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":66779,"byte_end":66790,"line_start":806,"line_end":806,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":68046,"byte_end":68054,"line_start":849,"line_end":849,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":68345,"byte_end":68353,"line_start":865,"line_end":865,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":68711,"byte_end":68719,"line_start":883,"line_end":883,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":68874,"byte_end":68882,"line_start":891,"line_end":891,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69099,"byte_end":69107,"line_start":901,"line_end":901,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69268,"byte_end":69276,"line_start":909,"line_end":909,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69438,"byte_end":69449,"line_start":917,"line_end":917,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69617,"byte_end":69625,"line_start":925,"line_end":925,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69754,"byte_end":69765,"line_start":931,"line_end":931,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69873,"byte_end":69881,"line_start":937,"line_end":937,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":70259,"byte_end":70270,"line_start":951,"line_end":951,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":75499,"byte_end":75513,"line_start":23,"line_end":23,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":75682,"byte_end":75696,"line_start":30,"line_end":30,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":76075,"byte_end":76080,"line_start":46,"line_end":46,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":76966,"byte_end":76980,"line_start":77,"line_end":77,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/conversion_range.rs","byte_start":77242,"byte_end":77257,"line_start":10,"line_end":10,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/conversion_range.rs","byte_start":77510,"byte_end":77525,"line_start":18,"line_end":18,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/conversion_range.rs","byte_start":77568,"byte_end":77573,"line_start":20,"line_end":20,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78381,"byte_end":78387,"line_start":23,"line_end":23,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78965,"byte_end":78971,"line_start":40,"line_end":40,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":79152,"byte_end":79158,"line_start":48,"line_end":48,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":79492,"byte_end":79497,"line_start":58,"line_end":58,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80969,"byte_end":80974,"line_start":48,"line_end":48,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":81115,"byte_end":81139,"line_start":54,"line_end":54,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":82004,"byte_end":82028,"line_start":78,"line_end":78,"column_start":28,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":72934,"byte_end":72939,"line_start":68,"line_end":68,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":73905,"byte_end":73910,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":95215,"byte_end":95229,"line_start":80,"line_end":80,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":109625,"byte_end":109634,"line_start":336,"line_end":336,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92684,"byte_end":92694,"line_start":62,"line_end":62,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":135752,"byte_end":135762,"line_start":13,"line_end":13,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":135832,"byte_end":135839,"line_start":15,"line_end":15,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":135874,"byte_end":135875,"line_start":16,"line_end":16,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":137032,"byte_end":137042,"line_start":50,"line_end":50,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":137995,"byte_end":137996,"line_start":82,"line_end":82,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":138391,"byte_end":138398,"line_start":99,"line_end":99,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143156,"byte_end":143163,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145818,"byte_end":145825,"line_start":109,"line_end":109,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145925,"byte_end":145935,"line_start":115,"line_end":115,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":146018,"byte_end":146025,"line_start":121,"line_end":121,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":146561,"byte_end":146568,"line_start":136,"line_end":136,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":146712,"byte_end":146722,"line_start":144,"line_end":144,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":146867,"byte_end":146874,"line_start":152,"line_end":152,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147204,"byte_end":147214,"line_start":166,"line_end":166,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147369,"byte_end":147376,"line_start":174,"line_end":174,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147617,"byte_end":147624,"line_start":185,"line_end":185,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147764,"byte_end":147774,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147929,"byte_end":147936,"line_start":201,"line_end":201,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148185,"byte_end":148192,"line_start":212,"line_end":212,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148300,"byte_end":148310,"line_start":218,"line_end":218,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148420,"byte_end":148427,"line_start":224,"line_end":224,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148566,"byte_end":148576,"line_start":230,"line_end":230,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148711,"byte_end":148718,"line_start":236,"line_end":236,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148812,"byte_end":148819,"line_start":242,"line_end":242,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149438,"byte_end":149443,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":151422,"byte_end":151427,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":152045,"byte_end":152050,"line_start":127,"line_end":127,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153757,"byte_end":153771,"line_start":36,"line_end":36,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176509,"byte_end":176523,"line_start":689,"line_end":689,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179644,"byte_end":179658,"line_start":776,"line_end":776,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":181900,"byte_end":181914,"line_start":837,"line_end":837,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182134,"byte_end":182148,"line_start":845,"line_end":845,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182267,"byte_end":182281,"line_start":851,"line_end":851,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182394,"byte_end":182408,"line_start":857,"line_end":857,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182527,"byte_end":182541,"line_start":863,"line_end":863,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182800,"byte_end":182814,"line_start":871,"line_end":871,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":183132,"byte_end":183146,"line_start":886,"line_end":886,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":183458,"byte_end":183472,"line_start":901,"line_end":901,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":183706,"byte_end":183716,"line_start":911,"line_end":911,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":184289,"byte_end":184299,"line_start":934,"line_end":934,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":184683,"byte_end":184697,"line_start":950,"line_end":950,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":184929,"byte_end":184939,"line_start":960,"line_end":960,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":185187,"byte_end":185201,"line_start":970,"line_end":970,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":185406,"byte_end":185416,"line_start":978,"line_end":978,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":185632,"byte_end":185646,"line_start":986,"line_end":986,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":185887,"byte_end":185897,"line_start":994,"line_end":994,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":186141,"byte_end":186155,"line_start":1002,"line_end":1002,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":186582,"byte_end":186592,"line_start":1014,"line_end":1014,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187728,"byte_end":187745,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200969,"byte_end":200986,"line_start":431,"line_end":431,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":202038,"byte_end":202055,"line_start":464,"line_end":464,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":203602,"byte_end":203619,"line_start":504,"line_end":504,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":205404,"byte_end":205421,"line_start":552,"line_end":552,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":205625,"byte_end":205642,"line_start":560,"line_end":560,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":206326,"byte_end":206343,"line_start":582,"line_end":582,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":206881,"byte_end":206898,"line_start":603,"line_end":603,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":207041,"byte_end":207058,"line_start":611,"line_end":611,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":207598,"byte_end":207615,"line_start":632,"line_end":632,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209138,"byte_end":209142,"line_start":43,"line_end":43,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209451,"byte_end":209455,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":221868,"byte_end":221872,"line_start":413,"line_end":413,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":223364,"byte_end":223368,"line_start":453,"line_end":453,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":224392,"byte_end":224396,"line_start":480,"line_end":480,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":224862,"byte_end":224866,"line_start":495,"line_end":495,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":225403,"byte_end":225407,"line_start":512,"line_end":512,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":225866,"byte_end":225870,"line_start":527,"line_end":527,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":226404,"byte_end":226408,"line_start":544,"line_end":544,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228308,"byte_end":228317,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236368,"byte_end":236377,"line_start":258,"line_end":258,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":237913,"byte_end":237922,"line_start":298,"line_end":298,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":238269,"byte_end":238278,"line_start":312,"line_end":312,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250161,"byte_end":250168,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":252457,"byte_end":252464,"line_start":114,"line_end":114,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":9673,"byte_end":9678,"line_start":291,"line_end":291,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":301}},{"kind":"Mod","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":9710,"byte_end":9713,"line_start":293,"line_end":293,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":369}},{"kind":"Mod","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":9878,"byte_end":9896,"line_start":299,"line_end":299,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":435}},{"kind":"Mod","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":91008,"byte_end":91016,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":482}},{"kind":"Mod","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":9999,"byte_end":10009,"line_start":302,"line_end":302,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":550}},{"kind":"Mod","span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/lib.rs","byte_start":11132,"byte_end":11136,"line_start":335,"line_end":335,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1228}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13238,"byte_end":13242,"line_start":43,"line_end":43,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":13474,"byte_end":13478,"line_start":52,"line_end":52,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":31737,"byte_end":31741,"line_start":546,"line_end":546,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":35290,"byte_end":35294,"line_start":655,"line_end":655,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":36786,"byte_end":36790,"line_start":695,"line_end":695,"column_start":23,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":37470,"byte_end":37474,"line_start":720,"line_end":720,"column_start":24,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":37731,"byte_end":37735,"line_start":729,"line_end":729,"column_start":27,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":38048,"byte_end":38052,"line_start":740,"line_end":740,"column_start":24,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":38195,"byte_end":38199,"line_start":748,"line_end":748,"column_start":27,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/date.rs","byte_start":38509,"byte_end":38513,"line_start":759,"line_end":759,"column_start":14,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39267,"byte_end":39274,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1321},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":39986,"byte_end":39994,"line_start":42,"line_end":42,"column_start":21,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":40229,"byte_end":40237,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":64385,"byte_end":64393,"line_start":709,"line_end":709,"column_start":31,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":2929}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":64761,"byte_end":64772,"line_start":723,"line_end":723,"column_start":28,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":46029},"to":{"krate":2,"index":2929}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":65212,"byte_end":65220,"line_start":740,"line_end":740,"column_start":14,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":65413,"byte_end":65421,"line_start":749,"line_end":749,"column_start":27,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":65672,"byte_end":65683,"line_start":758,"line_end":758,"column_start":24,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":2,"index":46029},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":65858,"byte_end":65866,"line_start":768,"line_end":768,"column_start":14,"column_end":22},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":66013,"byte_end":66021,"line_start":776,"line_end":776,"column_start":14,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":66219,"byte_end":66227,"line_start":785,"line_end":785,"column_start":27,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":66460,"byte_end":66471,"line_start":794,"line_end":794,"column_start":24,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":2,"index":46029},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":66779,"byte_end":66790,"line_start":806,"line_end":806,"column_start":30,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":46029},"to":{"krate":2,"index":3118}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":68046,"byte_end":68054,"line_start":849,"line_end":849,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3093}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":68345,"byte_end":68353,"line_start":865,"line_end":865,"column_start":19,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3093}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":68711,"byte_end":68719,"line_start":883,"line_end":883,"column_start":19,"column_end":27},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":68874,"byte_end":68882,"line_start":891,"line_end":891,"column_start":19,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69099,"byte_end":69107,"line_start":901,"line_end":901,"column_start":14,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69268,"byte_end":69276,"line_start":909,"line_end":909,"column_start":27,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69438,"byte_end":69449,"line_start":917,"line_end":917,"column_start":24,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":2,"index":46029},"to":{"krate":2,"index":3098}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69617,"byte_end":69625,"line_start":925,"line_end":925,"column_start":33,"column_end":41},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69754,"byte_end":69765,"line_start":931,"line_end":931,"column_start":30,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":2,"index":46029},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":69873,"byte_end":69881,"line_start":937,"line_end":937,"column_start":34,"column_end":42},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1342},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/duration.rs","byte_start":70259,"byte_end":70270,"line_start":951,"line_end":951,"column_start":31,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":2,"index":46029},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":75499,"byte_end":75513,"line_start":23,"line_end":23,"column_start":6,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":75682,"byte_end":75696,"line_start":30,"line_end":30,"column_start":23,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1459},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":76075,"byte_end":76080,"line_start":46,"line_end":46,"column_start":38,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/component_range.rs","byte_start":76966,"byte_end":76980,"line_start":77,"line_end":77,"column_start":28,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1459},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/conversion_range.rs","byte_start":77242,"byte_end":77257,"line_start":10,"line_end":10,"column_start":23,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/conversion_range.rs","byte_start":77510,"byte_end":77525,"line_start":18,"line_end":18,"column_start":28,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1480},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/conversion_range.rs","byte_start":77568,"byte_end":77573,"line_start":20,"line_end":20,"column_start":39,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78381,"byte_end":78387,"line_start":23,"line_end":23,"column_start":23,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":78965,"byte_end":78971,"line_start":40,"line_end":40,"column_start":26,"column_end":32},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":79152,"byte_end":79158,"line_start":48,"line_end":48,"column_start":28,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1493},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/format.rs","byte_start":79492,"byte_end":79497,"line_start":58,"line_end":58,"column_start":30,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":80969,"byte_end":80974,"line_start":48,"line_end":48,"column_start":48,"column_end":53},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":81115,"byte_end":81139,"line_start":54,"line_end":54,"column_start":23,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1504},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/invalid_format_description.rs","byte_start":82004,"byte_end":82028,"line_start":78,"line_end":78,"column_start":28,"column_end":52},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1504},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":72934,"byte_end":72939,"line_start":68,"line_end":68,"column_start":23,"column_end":28},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1526},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/error/mod.rs","byte_start":73905,"byte_end":73910,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1526},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":84076,"byte_end":84082,"line_start":58,"line_end":58,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":377},"to":{"krate":0,"index":381}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/ext.rs","byte_start":87734,"byte_end":87740,"line_start":183,"line_end":183,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":377},"to":{"krate":0,"index":408}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/component.rs","byte_start":95215,"byte_end":95229,"line_start":80,"line_end":80,"column_start":6,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/modifier.rs","byte_start":109625,"byte_end":109634,"line_start":336,"line_end":336,"column_start":6,"column_end":15},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/format_description/mod.rs","byte_start":92684,"byte_end":92694,"line_start":62,"line_end":62,"column_start":21,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2042},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":135721,"byte_end":135727,"line_start":12,"line_end":12,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":595},"to":{"krate":0,"index":587}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":135752,"byte_end":135762,"line_start":13,"line_end":13,"column_start":22,"column_end":32},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2042},"to":{"krate":0,"index":587}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":135832,"byte_end":135839,"line_start":15,"line_end":15,"column_start":22,"column_end":29},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2029},"to":{"krate":0,"index":587}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":135874,"byte_end":135875,"line_start":16,"line_end":16,"column_start":32,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":592},"to":{"krate":0,"index":587}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":137032,"byte_end":137042,"line_start":50,"line_end":50,"column_start":29,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2042},"to":{"krate":0,"index":595}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":137995,"byte_end":137996,"line_start":82,"line_end":82,"column_start":35,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":608},"to":{"krate":0,"index":595}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/formatting/formattable.rs","byte_start":138391,"byte_end":138398,"line_start":99,"line_end":99,"column_start":25,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2029},"to":{"krate":0,"index":595}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":143156,"byte_end":143163,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145818,"byte_end":145825,"line_start":109,"line_end":109,"column_start":27,"column_end":34},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":145925,"byte_end":145935,"line_start":115,"line_end":115,"column_start":24,"column_end":34},"kind":{"Impl":{"id":143}},"from":{"krate":1,"index":11785},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":146018,"byte_end":146025,"line_start":121,"line_end":121,"column_start":14,"column_end":21},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":146561,"byte_end":146568,"line_start":136,"line_end":136,"column_start":26,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":146712,"byte_end":146722,"line_start":144,"line_end":144,"column_start":23,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":1,"index":11785},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":146867,"byte_end":146874,"line_start":152,"line_end":152,"column_start":24,"column_end":31},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147204,"byte_end":147214,"line_start":166,"line_end":166,"column_start":24,"column_end":34},"kind":{"Impl":{"id":148}},"from":{"krate":1,"index":11785},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147369,"byte_end":147376,"line_start":174,"line_end":174,"column_start":27,"column_end":34},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147617,"byte_end":147624,"line_start":185,"line_end":185,"column_start":24,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147764,"byte_end":147774,"line_start":193,"line_end":193,"column_start":24,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":1,"index":11785},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":147929,"byte_end":147936,"line_start":201,"line_end":201,"column_start":27,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148185,"byte_end":148192,"line_start":212,"line_end":212,"column_start":32,"column_end":39},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148300,"byte_end":148310,"line_start":218,"line_end":218,"column_start":29,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":1,"index":11785},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148420,"byte_end":148427,"line_start":224,"line_end":224,"column_start":33,"column_end":40},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148566,"byte_end":148576,"line_start":230,"line_end":230,"column_start":30,"column_end":40},"kind":{"Impl":{"id":162}},"from":{"krate":1,"index":11785},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148711,"byte_end":148718,"line_start":236,"line_end":236,"column_start":28,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":2913}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/instant.rs","byte_start":148812,"byte_end":148819,"line_start":242,"line_end":242,"column_start":29,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":149438,"byte_end":149443,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":151422,"byte_end":151427,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2101},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/month.rs","byte_start":152045,"byte_end":152050,"line_start":127,"line_end":127,"column_start":22,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2101},"to":{"krate":2,"index":2929}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":153757,"byte_end":153771,"line_start":36,"line_end":36,"column_start":6,"column_end":20},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":176509,"byte_end":176523,"line_start":689,"line_end":689,"column_start":6,"column_end":20},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":179644,"byte_end":179658,"line_start":776,"line_end":776,"column_start":6,"column_end":20},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":181900,"byte_end":181914,"line_start":837,"line_end":837,"column_start":23,"column_end":37},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182134,"byte_end":182148,"line_start":845,"line_end":845,"column_start":20,"column_end":34},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182267,"byte_end":182281,"line_start":851,"line_end":851,"column_start":21,"column_end":35},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182394,"byte_end":182408,"line_start":857,"line_end":857,"column_start":14,"column_end":28},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":2703}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182527,"byte_end":182541,"line_start":863,"line_end":863,"column_start":15,"column_end":29},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":9600}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":182800,"byte_end":182814,"line_start":871,"line_end":871,"column_start":20,"column_end":34},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":183132,"byte_end":183146,"line_start":886,"line_end":886,"column_start":20,"column_end":34},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":183458,"byte_end":183472,"line_start":901,"line_end":901,"column_start":14,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":183706,"byte_end":183716,"line_start":911,"line_end":911,"column_start":24,"column_end":34},"kind":{"Impl":{"id":184}},"from":{"krate":1,"index":11805},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":184289,"byte_end":184299,"line_start":934,"line_end":934,"column_start":24,"column_end":34},"kind":{"Impl":{"id":186}},"from":{"krate":1,"index":11805},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":184683,"byte_end":184697,"line_start":950,"line_end":950,"column_start":26,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":184929,"byte_end":184939,"line_start":960,"line_end":960,"column_start":30,"column_end":40},"kind":{"Impl":{"id":189}},"from":{"krate":1,"index":11805},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":185187,"byte_end":185201,"line_start":970,"line_end":970,"column_start":32,"column_end":46},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":185406,"byte_end":185416,"line_start":978,"line_end":978,"column_start":36,"column_end":46},"kind":{"Impl":{"id":191}},"from":{"krate":1,"index":11805},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":185632,"byte_end":185646,"line_start":986,"line_end":986,"column_start":33,"column_end":47},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":185887,"byte_end":185897,"line_start":994,"line_end":994,"column_start":37,"column_end":47},"kind":{"Impl":{"id":193}},"from":{"krate":1,"index":11805},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":186141,"byte_end":186155,"line_start":1002,"line_end":1002,"column_start":27,"column_end":41},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2152},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/offset_date_time.rs","byte_start":186582,"byte_end":186592,"line_start":1014,"line_end":1014,"column_start":31,"column_end":41},"kind":{"Impl":{"id":195}},"from":{"krate":1,"index":11805},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":187728,"byte_end":187745,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":200969,"byte_end":200986,"line_start":431,"line_end":431,"column_start":6,"column_end":23},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":202038,"byte_end":202055,"line_start":464,"line_end":464,"column_start":6,"column_end":23},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":203602,"byte_end":203619,"line_start":504,"line_end":504,"column_start":6,"column_end":23},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":205404,"byte_end":205421,"line_start":552,"line_end":552,"column_start":23,"column_end":40},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":205625,"byte_end":205642,"line_start":560,"line_end":560,"column_start":24,"column_end":41},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":206326,"byte_end":206343,"line_start":582,"line_end":582,"column_start":27,"column_end":44},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":206881,"byte_end":206898,"line_start":603,"line_end":603,"column_start":24,"column_end":41},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":207041,"byte_end":207058,"line_start":611,"line_end":611,"column_start":27,"column_end":44},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/primitive_date_time.rs","byte_start":207598,"byte_end":207615,"line_start":632,"line_end":632,"column_start":14,"column_end":31},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2175},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209138,"byte_end":209142,"line_start":43,"line_end":43,"column_start":21,"column_end":25},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":9394}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":209451,"byte_end":209455,"line_start":54,"line_end":54,"column_start":6,"column_end":10},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":221868,"byte_end":221872,"line_start":413,"line_end":413,"column_start":6,"column_end":10},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":223364,"byte_end":223368,"line_start":453,"line_end":453,"column_start":23,"column_end":27},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":224392,"byte_end":224396,"line_start":480,"line_end":480,"column_start":24,"column_end":28},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":224862,"byte_end":224866,"line_start":495,"line_end":495,"column_start":27,"column_end":31},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":3083}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":225403,"byte_end":225407,"line_start":512,"line_end":512,"column_start":24,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":225866,"byte_end":225870,"line_start":527,"line_end":527,"column_start":27,"column_end":31},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/time.rs","byte_start":226404,"byte_end":226408,"line_start":544,"line_end":544,"column_start":14,"column_end":18},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":3088}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":228308,"byte_end":228317,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":236368,"byte_end":236377,"line_start":258,"line_end":258,"column_start":6,"column_end":15},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":237913,"byte_end":237922,"line_start":298,"line_end":298,"column_start":23,"column_end":32},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2255},"to":{"krate":2,"index":9401}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/utc_offset.rs","byte_start":238269,"byte_end":238278,"line_start":312,"line_end":312,"column_start":14,"column_end":23},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2255},"to":{"krate":2,"index":3110}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":250161,"byte_end":250168,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/users/u6632448/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.3/src/weekday.rs","byte_start":252457,"byte_end":252464,"line_start":114,"line_end":114,"column_start":18,"column_end":25},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":9401}}]}